(self.webpackChunktradingview = self.webpackChunktradingview || []).push([[57565, 15483, 25214, 88741, 68984, 43385, 54620], {
    43681: e => {
        e.exports = {
            wrap: "wrap-Un5MtNUE",
            list: "list-Un5MtNUE",
            item: "item-Un5MtNUE",
            selected: "selected-Un5MtNUE",
            bluishItem: "bluishItem-Un5MtNUE",
            noPadding: "noPadding-Un5MtNUE"
        }
    }
    ,
    533659: e => {
        e.exports = {}
    }
    ,
    758804: e => {
        e.exports = {}
    }
    ,
    975351: e => {
        e.exports = {}
    }
    ,
    588978: e => {
        e.exports = {}
    }
    ,
    481316: e => {
        e.exports = {}
    }
    ,
    703002: e => {
        e.exports = {}
    }
    ,
    93807: e => {
        e.exports = {}
    }
    ,
    941924: e => {
        e.exports = {}
    }
    ,
    184121: e => {
        e.exports = {}
    }
    ,
    88895: e => {
        e.exports = {}
    }
    ,
    144669: e => {
        e.exports = {}
    }
    ,
    832517: e => {
        e.exports = {}
    }
    ,
    183928: e => {
        e.exports = {}
    }
    ,
    38280: e => {
        e.exports = {}
    }
    ,
    919239: e => {
        e.exports = {}
    }
    ,
    323066: e => {
        e.exports = {}
    }
    ,
    989767: e => {
        e.exports = {}
    }
    ,
    617525: e => {
        e.exports = {}
    }
    ,
    950107: e => {
        e.exports = {}
    }
    ,
    804840: e => {
        e.exports = {}
    }
    ,
    649107: e => {
        e.exports = {
            loader: "loader-UL6iwcBa",
            static: "static-UL6iwcBa",
            item: "item-UL6iwcBa",
            "tv-button-loader": "tv-button-loader-UL6iwcBa",
            medium: "medium-UL6iwcBa",
            small: "small-UL6iwcBa",
            black: "black-UL6iwcBa",
            white: "white-UL6iwcBa",
            gray: "gray-UL6iwcBa",
            primary: "primary-UL6iwcBa"
        }
    }
    ,
    116313: e => {
        e.exports = {
            wrapper: "wrapper-TJ9ObuLF",
            animated: "animated-TJ9ObuLF",
            pulsation: "pulsation-TJ9ObuLF"
        }
    }
    ,
    847282: e => {
        e.exports = {
            small: "small-CtnpmPzP",
            medium: "medium-CtnpmPzP",
            large: "large-CtnpmPzP",
            switchView: "switchView-CtnpmPzP",
            checked: "checked-CtnpmPzP",
            disabled: "disabled-CtnpmPzP",
            track: "track-CtnpmPzP",
            thumb: "thumb-CtnpmPzP"
        }
    }
    ,
    670330: e => {
        e.exports = {
            switcher: "switcher-fwE97QDf",
            input: "input-fwE97QDf",
            thumbWrapper: "thumbWrapper-fwE97QDf",
            disabled: "disabled-fwE97QDf",
            checked: "checked-fwE97QDf"
        }
    }
    ,
    828133: e => {
        e.exports = {
            "css-value-copyright-transition-params": ".6s 0s cubic-bezier(.4, .01, .22, 1)",
            "css-value-copyright-transition-params-half-time": ".3s 0s cubic-bezier(.4, .01, .22, 1)",
            label: "label-dzbd7lyV",
            logoWrap: "logoWrap-dzbd7lyV",
            expandedWithTransition: "expandedWithTransition-dzbd7lyV",
            expandedByClick: "expandedByClick-dzbd7lyV",
            start: "start-dzbd7lyV",
            end: "end-dzbd7lyV",
            snap: "snap-dzbd7lyV",
            top: "top-dzbd7lyV",
            bottom: "bottom-dzbd7lyV",
            large: "large-dzbd7lyV",
            expanded: "expanded-dzbd7lyV",
            label__link: "label__link-dzbd7lyV"
        }
    }
    ,
    686962: e => {
        e.exports = {}
    }
    ,
    648692: e => {
        e.exports = {
            wrap: "wrap-HXzRntFl",
            input: "input-HXzRntFl",
            box: "box-HXzRntFl",
            hoverDot: "hoverDot-HXzRntFl",
            red: "red-HXzRntFl",
            blue: "blue-HXzRntFl",
            green: "green-HXzRntFl",
            orange: "orange-HXzRntFl",
            purple: "purple-HXzRntFl",
            cyan: "cyan-HXzRntFl",
            pink: "pink-HXzRntFl",
            large: "large-HXzRntFl",
            pickerDot: "pickerDot-HXzRntFl"
        }
    }
    ,
    534426: e => {
        e.exports = {
            wrapper: "wrapper-xPNB6vOB",
            selector: "selector-xPNB6vOB",
            arrowLeft: "arrowLeft-xPNB6vOB",
            colorSelectButton: "colorSelectButton-xPNB6vOB",
            popup: "popup-xPNB6vOB"
        }
    }
    ,
    50198: e => {
        e.exports = {}
    }
    ,
    670431: e => {
        e.exports = {}
    }
    ,
    646021: e => {
        e.exports = {
            "common-tooltip": "common-tooltip-EJBD96zX",
            "common-tooltip--hidden": "common-tooltip--hidden-EJBD96zX",
            "common-tooltip--horizontal": "common-tooltip--horizontal-EJBD96zX",
            "common-tooltip--farther": "common-tooltip--farther-EJBD96zX",
            "common-tooltip--vertical": "common-tooltip--vertical-EJBD96zX",
            "common-tooltip-farther": "common-tooltip-farther-EJBD96zX",
            "common-tooltip--direction_normal": "common-tooltip--direction_normal-EJBD96zX",
            "common-tooltip__body": "common-tooltip__body-EJBD96zX",
            "common-tooltip__button-container": "common-tooltip__button-container-EJBD96zX",
            "common-tooltip__body--no-buttons": "common-tooltip__body--no-buttons-EJBD96zX",
            "common-tooltip__button": "common-tooltip__button-EJBD96zX",
            "common-tooltip--direction_reversed": "common-tooltip--direction_reversed-EJBD96zX",
            "common-tooltip__ear-holder": "common-tooltip__ear-holder-EJBD96zX",
            "common-tooltip__ear-holder--below": "common-tooltip__ear-holder--below-EJBD96zX",
            "common-tooltip__ear-holder--above": "common-tooltip__ear-holder--above-EJBD96zX",
            "common-tooltip__ear-holder--before": "common-tooltip__ear-holder--before-EJBD96zX",
            "common-tooltip__ear-holder--after": "common-tooltip__ear-holder--after-EJBD96zX",
            "common-tooltip__body--with-hotkey": "common-tooltip__body--with-hotkey-EJBD96zX",
            "common-tooltip__body--width_wide": "common-tooltip__body--width_wide-EJBD96zX",
            "common-tooltip__body--width_narrow": "common-tooltip__body--width_narrow-EJBD96zX",
            "common-tooltip__body--no-padding": "common-tooltip__body--no-padding-EJBD96zX",
            "common-tooltip__hotkey-block": "common-tooltip__hotkey-block-EJBD96zX",
            "common-tooltip__hotkey-block--divider": "common-tooltip__hotkey-block--divider-EJBD96zX",
            "common-tooltip__hotkey-text": "common-tooltip__hotkey-text-EJBD96zX",
            "common-tooltip__hotkey-button": "common-tooltip__hotkey-button-EJBD96zX",
            "common-tooltip__plus-sign": "common-tooltip__plus-sign-EJBD96zX"
        }
    }
    ,
    926724: e => {
        e.exports = {}
    }
    ,
    423777: e => {
        e.exports = {}
    }
    ,
    302539: e => {
        e.exports = {}
    }
    ,
    251284: e => {
        e.exports = {
            "tablet-normal-breakpoint": "(max-width: 768px)",
            "small-height-breakpoint": "(max-height: 360px)",
            "tablet-small-breakpoint": "(max-width: 440px)"
        }
    }
    ,
    447429: e => {
        e.exports = {
            item: "item-GJX1EXhk",
            interactive: "interactive-GJX1EXhk",
            hovered: "hovered-GJX1EXhk",
            disabled: "disabled-GJX1EXhk",
            active: "active-GJX1EXhk",
            shortcut: "shortcut-GJX1EXhk",
            normal: "normal-GJX1EXhk",
            big: "big-GJX1EXhk",
            iconCell: "iconCell-GJX1EXhk",
            icon: "icon-GJX1EXhk",
            content: "content-GJX1EXhk",
            label: "label-GJX1EXhk",
            checked: "checked-GJX1EXhk",
            toolbox: "toolbox-GJX1EXhk",
            showToolboxOnHover: "showToolboxOnHover-GJX1EXhk",
            arrowIcon: "arrowIcon-GJX1EXhk",
            subMenu: "subMenu-GJX1EXhk",
            invisibleHotkey: "invisibleHotkey-GJX1EXhk"
        }
    }
    ,
    405264: e => {
        e.exports = {
            item: "item-WJDah4zD",
            emptyIcons: "emptyIcons-WJDah4zD",
            loading: "loading-WJDah4zD",
            disabled: "disabled-WJDah4zD",
            interactive: "interactive-WJDah4zD",
            hovered: "hovered-WJDah4zD",
            normal: "normal-WJDah4zD",
            big: "big-WJDah4zD",
            icon: "icon-WJDah4zD",
            label: "label-WJDah4zD",
            title: "title-WJDah4zD",
            nested: "nested-WJDah4zD",
            shortcut: "shortcut-WJDah4zD",
            remove: "remove-WJDah4zD"
        }
    }
    ,
    868745: e => {
        e.exports = {
            separator: "separator-Ymxd0dt_"
        }
    }
    ,
    276773: e => {
        e.exports = {
            "default-drawer-min-top-distance": "100px",
            wrap: "wrap-_HnK0UIN",
            positionBottom: "positionBottom-_HnK0UIN",
            backdrop: "backdrop-_HnK0UIN",
            drawer: "drawer-_HnK0UIN",
            positionLeft: "positionLeft-_HnK0UIN"
        }
    }
    ,
    209087: e => {
        e.exports = {
            container: "container-HTBJo9ba",
            top: "top-HTBJo9ba"
        }
    }
    ,
    737953: e => {
        e.exports = {
            list: "list-HGwPo2aR",
            item: "item-HGwPo2aR"
        }
    }
    ,
    118821: e => {
        e.exports = {
            elementWrap: "elementWrap-LeZwGiB6",
            itemsWrap: "itemsWrap-LeZwGiB6",
            item: "item-LeZwGiB6",
            active: "active-LeZwGiB6",
            itemContent: "itemContent-LeZwGiB6",
            dropdownItem: "dropdownItem-LeZwGiB6",
            dropdownIcon: "dropdownIcon-LeZwGiB6",
            dropdownListItem: "dropdownListItem-LeZwGiB6"
        }
    }
    ,
    604e3: (e, t, o) => {
        "use strict";
        o.d(t, {
            LIST_COLORS: () => h,
            ListColor: () => i,
            changeDescription: () => C,
            createCrossTabSyncMiddleware: () => T,
            getCommands: () => P,
            getListByColor: () => I,
            getSymbolColor: () => A,
            getSymbolsByColor: () => D,
            getTimestamp: () => L,
            isListColor: () => p,
            markMany: () => f,
            reducer: () => F,
            remove: () => w,
            rename: () => S,
            renameSeparator: () => k,
            reset: () => b,
            setup: () => y,
            share: () => M,
            shiftCommand: () => x,
            updatePersistedState: () => E
        });
        var i, n = o(74293), r = o(438253), s = o(650151), l = o(199669), a = o(50991), c = o(340958), d = o(173777), u = o(559986);
        !function(e) {
            e.Red = "red",
            e.Blue = "blue",
            e.Green = "green",
            e.Orange = "orange",
            e.Purple = "purple",
            e.Cyan = "cyan",
            e.Pink = "pink"
        }(i || (i = {}));
        const h = [i.Red, i.Blue, i.Green, i.Orange, i.Purple, i.Cyan, i.Pink];
        function p(e) {
            return new Set(h).has(e)
        }
        const m = {
            lists: {
                colors: [],
                byColor: {},
                bySymbol: {}
            },
            commands: [],
            timestamp: null
        };
        function _(e, t) {
            const {lists: o} = e
              , i = o.byColor[t];
            i && 0 === i.symbols.length && (o.colors = o.colors.filter((e => e !== t)))
        }
        function g(e) {
            return (0,
            d.isSeparatorItem)(e)
        }
        const v = (0,
        n.createSlice)({
            name: "marked-lists",
            initialState: m,
            reducers: {
                setup: (e, t) => {
                    const {lists: o, timestamp: i} = t.payload
                      , n = {
                        lists: {
                            colors: [],
                            byColor: {},
                            bySymbol: {}
                        },
                        commands: [],
                        timestamp: null
                    };
                    n.timestamp = i;
                    for (const e of function(e, t) {
                        return [...e].sort(( (e, o) => t.indexOf(e.color) - t.indexOf(o.color)))
                    }(o, h)) {
                        const t = e.symbols.filter((t => void 0 === n.lists.bySymbol[t] && (g(t) || (n.lists.bySymbol[t] = e.color),
                        !0)));
                        n.lists.byColor[e.color] = {
                            color: e.color,
                            name: e.name,
                            description: e.description,
                            shared: e.shared,
                            symbols: t,
                            persistedState: e.persistedState
                        },
                        t.length > 0 && n.lists.colors.push(e.color)
                    }
                    return n
                }
                ,
                remove: (e, t) => {
                    const {color: o, symbols: i, silent: n} = t.payload
                      , {lists: l, commands: a} = e
                      , d = l.byColor[o];
                    if (void 0 === d || 0 === d.symbols.length)
                        return;
                    const u = new Set(i)
                      , h = d.symbols.filter((e => !u.has(e)));
                    if (!(0,
                    c.equalArrays)(h, d.symbols)) {
                        d.symbols = h;
                        for (const e of u)
                            delete l.bySymbol[e];
                        n || a.push({
                            type: "remove",
                            color: o,
                            symbols: [...u],
                            prevLists: (0,
                            s.ensureDefined)((0,
                            r.original)(e)).lists
                        }),
                        _(e, o)
                    }
                }
                ,
                markMany: (e, t) => {
                    const {color: o, before: i, silent: n} = t.payload
                      , {lists: l, commands: a} = e
                      , {unique: d, exclusions: h} = function(e, t) {
                        const {color: o, symbols: i, separators: n} = t.payload
                          , {lists: r} = e
                          , l = {}
                          , a = new Set
                          , c = e => g(e) ? ((0,
                        s.assert)(null !== o),
                        o) : r.bySymbol[e];
                        for (let e = 0; e < i.length; ++e) {
                            const t = i[e];
                            if (a.has(t) || g(t) && !n)
                                continue;
                            a.add(t);
                            const o = c(t);
                            void 0 !== o && (l[o] = l[o] ?? new Set).add(t)
                        }
                        return {
                            exclusions: l,
                            unique: a
                        }
                    }(e, t);
                    if (0 === d.size)
                        return;
                    const p = function(e, t, o, i) {
                        const {color: n, before: r} = t.payload
                          , {lists: s} = e;
                        let l;
                        if (null !== n && void 0 !== r && o.has(r)) {
                            const e = s.byColor[n];
                            if (void 0 !== e) {
                                l = i;
                                for (let t = e.symbols.indexOf(r); t >= 0; --t)
                                    if (!o.has(e.symbols[t])) {
                                        l = e.symbols[t];
                                        break
                                    }
                            }
                        }
                        return l
                    }(e, t, d, u.LIST_START);
                    if (null !== o && void 0 !== h[o] && 1 === Object.keys(h).length) {
                        const t = l.byColor[o];
                        (0,
                        s.assert)(void 0 !== t);
                        const m = t.symbols.filter((e => !d.has(e)))
                          , v = (0,
                        u.getTargetIndex)(m, i, p);
                        if (void 0 === v ? m.push(...d) : m.splice(v, 0, ...d),
                        (0,
                        c.equalArrays)(m, t.symbols))
                            return;
                        {
                            const i = h[o];
                            (0,
                            s.assert)(void 0 !== i),
                            t.symbols = m;
                            for (const e of i)
                                delete l.bySymbol[e];
                            for (const e of d)
                                g(e) || (l.bySymbol[e] = o);
                            return _(e, o),
                            void (n || a.push({
                                type: "replace",
                                color: o,
                                symbols: [...t.symbols],
                                prevLists: (0,
                                s.ensureDefined)((0,
                                r.original)(e)).lists
                            }))
                        }
                    }
                    for (const t in h) {
                        if (!h.hasOwnProperty(t))
                            continue;
                        const o = h[t];
                        (0,
                        s.assert)(void 0 !== o);
                        const i = l.byColor[t];
                        (0,
                        s.assert)(void 0 !== i),
                        i.symbols = i.symbols.filter((e => !o.has(e) || (delete l.bySymbol[e],
                        !1))),
                        _(e, t)
                    }
                    if (null === o)
                        return void (n || a.push({
                            type: "reset",
                            symbols: [...d],
                            prevLists: (0,
                            s.ensureDefined)((0,
                            r.original)(e)).lists
                        }));
                    const m = l.byColor[o];
                    if (l.colors.includes(o)) {
                        (0,
                        s.assert)(void 0 !== m);
                        const t = (0,
                        u.getTargetIndex)(m.symbols, i, p);
                        void 0 === t ? (m.symbols.push(...d),
                        n || (void 0 === h[o] ? a.push({
                            type: "append",
                            color: o,
                            symbols: [...d],
                            prevLists: (0,
                            s.ensureDefined)((0,
                            r.original)(e)).lists
                        }) : a.push({
                            type: "replace",
                            color: o,
                            symbols: [...m.symbols],
                            prevLists: (0,
                            s.ensureDefined)((0,
                            r.original)(e)).lists
                        }))) : (m.symbols.splice(t, 0, ...d),
                        n || a.push({
                            type: "replace",
                            color: o,
                            symbols: [...m.symbols],
                            prevLists: (0,
                            s.ensureDefined)((0,
                            r.original)(e)).lists
                        }))
                    } else
                        void 0 === m ? l.byColor[o] = {
                            color: o,
                            symbols: [...d],
                            name: null,
                            description: null,
                            shared: !1,
                            persistedState: null
                        } : m.symbols = [...d],
                        l.colors.push(o),
                        n || a.push({
                            type: "append",
                            color: o,
                            symbols: [...d],
                            prevLists: (0,
                            s.ensureDefined)((0,
                            r.original)(e)).lists
                        });
                    for (const e of d)
                        g(e) || (l.bySymbol[e] = o)
                }
                ,
                renameSeparator: (e, t) => {
                    const {color: o, separator: i, name: n, silent: l} = t.payload;
                    if (i === n || !g(i) || !g(n))
                        return;
                    const a = e.lists.byColor[o];
                    (0,
                    s.assert)(void 0 !== a);
                    const c = a.symbols.indexOf(i);
                    -1 !== c && -1 === a.symbols.indexOf(n) && (a.symbols.splice(c, 1, n),
                    l || e.commands.push({
                        type: "rename-separator",
                        color: o,
                        separator: i,
                        name: n,
                        prevLists: (0,
                        s.ensureDefined)((0,
                        r.original)(e)).lists
                    }))
                }
                ,
                rename: (e, t) => {
                    const {name: o, color: i, silent: n} = t.payload
                      , l = e.lists.byColor[i];
                    (0,
                    s.assert)(void 0 !== l),
                    l.name !== o && (l.name = o,
                    n || e.commands.push({
                        type: "rename",
                        color: i,
                        name: o,
                        prevLists: (0,
                        s.ensureDefined)((0,
                        r.original)(e)).lists
                    }))
                }
                ,
                changeDescription: (e, t) => {
                    const {color: o, description: i, silent: n} = t.payload
                      , l = e.lists.byColor[o];
                    (0,
                    s.assert)(void 0 !== l),
                    l.description !== i && (l.description = i,
                    n || e.commands.push({
                        type: "change-description",
                        color: o,
                        description: i,
                        prevLists: (0,
                        s.ensureDefined)((0,
                        r.original)(e)).lists
                    }))
                }
                ,
                reset: (e, t) => {
                    const {silent: o} = t.payload
                      , {lists: i} = e;
                    for (const e of h) {
                        const t = i.byColor[e];
                        void 0 !== t && (t.symbols = [])
                    }
                    i.colors = [],
                    i.bySymbol = {},
                    o || e.commands.push({
                        type: "reset-all",
                        prevLists: (0,
                        s.ensureDefined)((0,
                        r.original)(e)).lists
                    })
                }
                ,
                share: (e, t) => {
                    const {lists: o, commands: i} = e
                      , {shared: n, color: l, silent: a} = t.payload
                      , c = o.byColor[l];
                    void 0 !== c && c.shared !== n && (c.shared = n,
                    a || i.push({
                        type: "share",
                        color: l,
                        shared: n,
                        prevLists: (0,
                        s.ensureDefined)((0,
                        r.original)(e)).lists
                    }))
                }
                ,
                updatePersistedState: (e, t) => {
                    const {lists: o} = e;
                    for (const e of h) {
                        const i = o.byColor[e]
                          , n = t.payload[e];
                        void 0 !== i && i.persistedState && n && (i.persistedState = {
                            ...i.persistedState,
                            ...n
                        })
                    }
                }
                ,
                shiftCommand: (e, t) => {
                    const {count: o} = t.payload;
                    e.commands.splice(0, o)
                }
            }
        })
          , {markMany: f, setup: y, reset: b, remove: w, rename: S, changeDescription: C, renameSeparator: k, shiftCommand: x, share: M, updatePersistedState: E} = v.actions
          , {reducer: F} = v;
        function T(e, t, o=v) {
            return (0,
            l.createCrossTabSyncMiddleware)({
                id: e,
                channel: t,
                event: "marked-list-cross-tab-sync",
                filter: e => function(e, t) {
                    return t.actions.markMany.match(e) || t.actions.rename.match(e) || t.actions.changeDescription.match(e) || t.actions.remove.match(e) || t.actions.setup.match(e) || t.actions.renameSeparator.match(e) || t.actions.reset.match(e) || t.actions.share.match(e) || t.actions.updatePersistedState.match(e)
                }(e, o)
            })
        }
        function A(e, t) {
            return e.lists.bySymbol[a.qualified.cast(t)] ?? null
        }
        function I(e, t) {
            return e.lists.byColor[t] ?? null
        }
        function D(e, t) {
            return I(e, t)?.symbols ?? null
        }
        function P(e) {
            return e.commands
        }
        function L(e) {
            return e.timestamp
        }
    }
    ,
    230725: (e, t, o) => {
        "use strict";
        o.d(t, {
            ColorSelector: () => b
        });
        var i = o(50959)
          , n = o(604e3)
          , r = o(591800)
          , s = o(451608)
          , l = o(887208)
          , a = o(432438)
          , c = o(497754)
          , d = o.n(c)
          , u = o(79205)
          , h = o(444372)
          , p = o(948019)
          , m = o(263361)
          , _ = o(676809)
          , g = o(24122)
          , v = o(648692);
        const f = (0,
        s.makeSwitchGroupItem)((function(e) {
            const {className: t, value: r=n.ListColor.Red, name: s, checked: l} = e
              , [a,c] = (0,
            m.useRovingTabindexElement)(null)
              , f = (0,
            i.useContext)(p.ContextMenuContext)
              , y = f?.type ?? "menu"
              , b = r;
            return i.createElement("label", {
                ref: a,
                tabIndex: c,
                className: d()(t, v.wrap, "drawer" === y && v.large),
                "data-color": b,
                role: "menuitem",
                "aria-label": h.t(null, {
                    replace: {
                        color: b
                    }
                }, o(958673)),
                "aria-checked": l
            }, i.createElement("input", {
                className: v.input,
                type: "radio",
                name: s,
                value: r,
                checked: l,
                onChange: function() {
                    e.onChange && e.onChange(r)
                },
                onClick: l ? function() {
                    e.onClickIfChecked && e.onClickIfChecked(r)
                }
                : void 0
            }), i.createElement("div", {
                className: d()(v.box, v[b], "drawer" === y && v.large)
            }, l ? i.createElement(u.Icon, {
                icon: _
            }) : i.createElement("div", {
                className: v.pickerDot
            }, i.createElement(u.Icon, {
                className: v.hoverDot,
                icon: g
            }))))
        }
        ))
          , y = [39, 37, 13, 32, 27];
        function b(e) {
            const {buttonClassName: t, value: o, onSelectedClick: c, fromKeyboard: d} = e
              , u = (0,
            i.useRef)(null)
              , h = (0,
            i.useCallback)((e => {
                if (!u.current || e.defaultPrevented)
                    return;
                const t = (0,
                r.hashFromEvent)(e);
                if (!y.includes(t))
                    return;
                e.preventDefault();
                const i = (0,
                l.queryFocusableElements)(u.current).sort(l.navigationOrderComparator)
                  , s = i.findIndex((e => e === document.activeElement));
                if (-1 === s)
                    return;
                const c = i[s];
                let d;
                switch (t) {
                case 13:
                case 32:
                    m(c.dataset.color || n.ListColor.Red);
                    break;
                case 27:
                    m(o)
                }
                switch ((0,
                l.mapKeyCodeToDirection)(t)) {
                case "inlineNext":
                    d = i[s + 1] || i[0];
                    break;
                case "inlinePrev":
                    d = i[s - 1] || i[i.length - 1]
                }
                d instanceof HTMLLabelElement && ((0,
                a.becomeSecondaryElement)(c),
                (0,
                a.becomeMainElement)(d),
                d.focus())
            }
            ), []);
            (0,
            i.useLayoutEffect)(( () => {
                if (!d)
                    return;
                const e = document.activeElement
                  , t = u.current;
                if (!t)
                    return;
                const [o] = (0,
                l.queryFocusableElements)(t).sort(l.navigationOrderComparator);
                return o ? ((0,
                a.becomeMainElement)(o),
                o.focus(),
                () => {
                    e instanceof HTMLElement && e.focus()
                }
                ) : void 0
            }
            ), []);
            const p = n.LIST_COLORS.map(( (e, o) => i.createElement(f, {
                key: o,
                className: t,
                onClickIfChecked: c,
                value: e
            })));
            return i.createElement("menu", {
                ref: u,
                onKeyDown: h
            }, i.createElement(s.SwitchGroup, {
                name: "color-selector",
                onChange: m,
                values: void 0 !== o ? [o] : []
            }, p));
            function m(t) {
                e.onChange && void 0 !== t && e.onChange(t)
            }
        }
    }
    ,
    857769: (e, t, o) => {
        "use strict";
        o.d(t, {
            PopupColorSelector: () => w
        });
        var i = o(50959)
          , n = o(670797)
          , r = o(642709)
          , s = o(18182)
          , l = o(332585)
          , a = o(67812)
          , c = o(762852)
          , d = o(969680)
          , u = o(707533)
          , h = o(230725)
          , p = o(778785)
          , m = o(534426);
        class _ extends i.PureComponent {
            constructor() {
                super(...arguments),
                this._popUpElem = null,
                this._onChange = e => {
                    this.props.onSelectColor(e),
                    this.props.hide()
                }
                ,
                this._onTargetMouseLeave = e => {
                    const t = !!e.relatedTarget.nodeName
                      , o = e.relatedTarget === this._popUpElem
                      , i = this._popUpElem && t && this._popUpElem.contains(e.relatedTarget);
                    o || i || this.props.hide()
                }
                ,
                this._onPopUpMouseLeave = e => {
                    const t = !!e.nativeEvent.relatedTarget.nodeName
                      , o = e.nativeEvent.relatedTarget === this.props.elem
                      , i = t && this.props.elem.contains(e.nativeEvent.relatedTarget);
                    o || i || this.props.hide()
                }
                ,
                this._onTouchStart = e => {
                    const t = !!e.target.nodeName
                      , o = e.target === this.props.elem
                      , i = e.target === this._popUpElem
                      , n = t && this.props.elem.contains(e.target)
                      , r = this._popUpElem && t && this._popUpElem.contains(e.target);
                    o || n || i || r || this.props.hide()
                }
                ,
                this._setPopUpElem = e => {
                    this._popUpElem = e
                }
            }
            componentDidMount() {
                document.documentElement && (p.mobiletouch ? document.documentElement.addEventListener("touchstart", this._onTouchStart) : (this.props.elem.addEventListener("mouseleave", this._onTargetMouseLeave),
                document.body.addEventListener("scroll", this.props.hide)))
            }
            componentWillUnmount() {
                document.documentElement && (p.mobiletouch ? document.documentElement.removeEventListener("touchstart", this._onTouchStart) : this.props.elem && (this.props.elem.removeEventListener("mouseleave", this._onTargetMouseLeave),
                document.documentElement.removeEventListener("scroll", this.props.hide)))
            }
            render() {
                const e = {
                    top: 0,
                    left: 0
                };
                if (this.props.elem) {
                    const t = this.props.elem.getBoundingClientRect();
                    e.top = t.top + t.height / 2,
                    e.left = t.left + ((0,
                    d.isRtl)() ? 0 : t.width)
                }
                return i.createElement(u.Portal, null, i.createElement("div", {
                    style: e,
                    className: m.popup,
                    ref: this._setPopUpElem,
                    onMouseLeave: p.mobiletouch ? void 0 : this._onPopUpMouseLeave
                }, i.createElement("div", {
                    className: m.wrapper
                }, i.createElement("div", {
                    className: m.selector
                }, i.createElement("div", {
                    className: m.arrowLeft
                }), i.createElement(h.ColorSelector, {
                    buttonClassName: m.colorSelectButton,
                    value: this.props.currentColor,
                    fromKeyboard: this.props.fromKeyboard,
                    onChange: this._onChange
                })))))
            }
        }
        var g = o(948019);
        function v(e) {
            const {actions: t, ...o} = e;
            return i.createElement(s.MatchMedia, {
                rule: r.DialogBreakpoints.TabletSmall
            }, (e => e && t ? i.createElement(l.DrawerManager, null, i.createElement(g.ContextMenuContext.Provider, {
                value: {
                    type: "drawer"
                }
            }, i.createElement(c.Drawer, {
                onClose: o.hide,
                position: "Bottom"
            }, i.createElement(a.ContextMenuList, {
                items: t
            })))) : i.createElement(_, {
                ...o
            })))
        }
        var f = o(631456);
        let y = null
          , b = null;
        var w;
        !function(e) {
            function t() {
                y && b?.unmount()
            }
            e.show = function(e) {
                y || (y = document.createElement("div")),
                t(),
                b = (0,
                f.createReactRoot)(i.createElement(n.SlotContext.Provider, {
                    value: e.manager || null
                }, i.createElement(v, {
                    ...e,
                    hide: t
                })), y)
            }
            ,
            e.hide = t
        }(w || (w = {}))
    }
    ,
    276536: (e, t, o) => {
        "use strict";
        o.d(t, {
            DECEMBER: () => w,
            FIRST_DAY_OF_WEEK: () => p,
            FRIDAY: () => u,
            JANUARY: () => _,
            JULY: () => f,
            LAST_DAY_OF_WEEK: () => m,
            MARCH: () => g,
            MAY: () => v,
            MONDAY: () => l,
            NOVEMBER: () => b,
            SATURDAY: () => h,
            SEPTEMBER: () => y,
            SUNDAY: () => s,
            THURSDAY: () => d,
            TUESDAY: () => a,
            WEDNESDAY: () => c,
            add_date: () => B,
            add_days_considering_dst: () => $,
            add_minutes: () => R,
            cal_to_utc: () => K,
            clone: () => N,
            days_per_year: () => V,
            get_cal: () => H,
            get_cal_from_unix_timestamp_ms: () => G,
            get_cal_utc: () => X,
            get_day_of_month: () => T,
            get_day_of_week: () => A,
            get_day_of_year: () => I,
            get_days_in_month: () => W,
            get_hours: () => E,
            get_minutes: () => F,
            get_minutes_from_midnight: () => D,
            get_minutes_with_hours: () => P,
            get_month: () => M,
            get_timezone: () => Y,
            get_year: () => x,
            is_leap_year: () => q,
            millisecondsPerDay: () => k,
            minutesPerDay: () => S,
            minutesPerWeek: () => C,
            set_hms: () => L,
            set_seconds: () => O,
            time_seconds: () => z,
            time_seconds_diff: () => U,
            utc_to_cal: () => j
        });
        var i = o(953159);
        const n = {
            0: 0,
            1: 31,
            2: 59,
            3: 90,
            4: 120,
            5: 151,
            6: 181,
            7: 212,
            8: 243,
            9: 273,
            10: 304,
            11: 334
        };
        class r {
            constructor(e) {
                this._invalid = !1,
                this._name = e;
                let t = i.tzData[e];
                !t && J && (t = J.instance().getTimezoneData(e)),
                t || (t = {
                    time: [],
                    offset: []
                },
                this._invalid = !0),
                t.time.length !== t.offset.length && (t = {
                    time: [],
                    offset: []
                },
                this._invalid = !0);
                const o = t;
                if (!o.time_utc) {
                    const e = t.time
                      , i = t.offset
                      , n = e.length
                      , r = new Array(n);
                    for (let t = 0; t < n; t++)
                        e[t] *= 1e3,
                        i[t] *= 1e3,
                        r[t] = e[t] - i[t];
                    o.time_utc = r
                }
                this.tz = o
            }
            offset_utc(e) {
                return r.offset(this.tz.time_utc, this.tz.offset, e)
            }
            offset_loc(e) {
                return r.offset(this.tz.time, this.tz.offset, e)
            }
            name() {
                return this._name
            }
            is_valid() {
                return !this._invalid
            }
            correction_loc(e) {
                const t = this.tz.time
                  , o = this.tz.offset
                  , i = Z(t, e);
                if (i < 1)
                    return 0;
                const n = o[i] - o[i - 1];
                if (n > 0) {
                    if (e - t[i - 1] <= n)
                        return n
                }
                return 0
            }
            static offset(e, t, o) {
                const i = Z(e, o);
                return -1 === i ? 0 : t[i]
            }
        }
        const s = 1
          , l = 2
          , a = 3
          , c = 4
          , d = 5
          , u = 6
          , h = 7
          , p = s
          , m = h
          , _ = 0
          , g = 2
          , v = 4
          , f = 6
          , y = 8
          , b = 10
          , w = 11
          , S = 1440
          , C = 10080
          , k = 864e5;
        function x(e) {
            return e.getUTCFullYear()
        }
        function M(e) {
            return e.getUTCMonth()
        }
        function E(e) {
            return e.getUTCHours()
        }
        function F(e) {
            return e.getUTCMinutes()
        }
        function T(e) {
            return e.getUTCDate()
        }
        function A(e) {
            return e.getUTCDay() + 1
        }
        function I(e) {
            const t = e.getUTCMonth();
            let o = n[t];
            return t > _ + 1 && q(e.getUTCFullYear()) && (o += 1),
            o + e.getUTCDate()
        }
        function D(e) {
            return 60 * E(e) + F(e)
        }
        function P(e) {
            return D(e)
        }
        function L(e, t, o, i, n, r) {
            e.setUTCHours(t),
            e.setUTCMinutes(o),
            e.setUTCSeconds(i),
            e.setUTCMilliseconds(n),
            void 0 !== r && function(e, t) {
                const o = e.getTime()
                  , i = t.correction_loc(o);
                e.setTime(o + i)
            }(e, r)
        }
        function $(e, t, o) {
            const i = e.offset_utc(t.getTime())
              , n = N(t);
            B(n, o);
            const r = e.offset_utc(n.getTime());
            return n.setTime(n.getTime() + i - r),
            n
        }
        function B(e, t) {
            e.setTime(e.getTime() + t * k)
        }
        function R(e, t) {
            e.setTime(e.getTime() + 60 * t * 1e3)
        }
        function O(e, t) {
            const o = 86400
              , i = t % o < 0 ? -1 : 0
              , n = Math.trunc(t / o) + i
              , r = t - n * o
              , s = Math.trunc(r / 3600)
              , l = Math.trunc(r % 3600 / 60);
            L(e, s, l, r - 3600 * s - 60 * l, 0),
            B(e, n)
        }
        function N(e) {
            return new Date(e.getTime())
        }
        function W(e, t) {
            let o;
            switch (e) {
            case 0:
            case 2:
            case 4:
            case 6:
            case 7:
            case 9:
            case 11:
                o = 31;
                break;
            case 1:
                o = 28,
                q(t) && o++;
                break;
            default:
                o = 30
            }
            return o
        }
        function V(e) {
            return q(e) ? 366 : 365
        }
        function q(e) {
            return e % 4 == 0 && (e % 100 != 0 || e % 400 == 0)
        }
        function z(e) {
            return 1e3 * e
        }
        function U(e, t) {
            return ee(e) - ee(t)
        }
        function j(e, t) {
            return new Date(function(e, t) {
                const o = e.offset_utc(t);
                return t + o
            }(e, t))
        }
        function H(e, t, o, i, n, r, s) {
            const l = new Date(Date.UTC(t, o, i, n || 0, r || 0, s || 0))
              , a = e.offset_utc(+l);
            return new Date(l.valueOf() - a)
        }
        function G(e, t) {
            return new Date(t + e.offset_utc(t))
        }
        function X(e, t, o, i=0, n=0, r=0) {
            return new Date(Date.UTC(e, t, o, i, n, r))
        }
        function K(e, t, o) {
            let i = t.getTime();
            o && (i += e.correction_loc(i));
            return i - e.offset_loc(i)
        }
        function Y(e) {
            return new r(e)
        }
        let J;
        function Z(e, t) {
            const o = e.length;
            if (0 === o)
                return -1;
            if (isNaN(t))
                throw Error("Key is NaN");
            let i = 0
              , n = o - 1
              , r = Q((i + n) / 2);
            for (; ; ) {
                if (e[r] > t) {
                    if (n = r - 1,
                    n < i)
                        return r
                } else if (i = r + 1,
                n < i)
                    return r < o - 1 ? r + 1 : -1;
                r = Q((i + n) / 2)
            }
        }
        function Q(e) {
            return 0 | e
        }
        function ee(e) {
            return e < 0 ? Q(e / 1e3) - (e % 1e3 != 0 ? 1 : 0) : Q(e / 1e3)
        }
    }
    ,
    357517: (e, t, o) => {
        "use strict";
        function i(e) {
            let t = null;
            return (o, ...i) => (t?.abort(),
            t = new AbortController,
            o?.aborted ? t.abort() : o?.addEventListener("error", ( () => t?.abort()), {
                once: !0
            }),
            e(t.signal, ...i))
        }
        function n(e) {
            if (!a(e))
                throw e
        }
        function r(e) {
            if (a(e))
                throw e
        }
        function s(e) {
            return e?.aborted ? Promise.reject(l()) : new Promise(( (t, o) => {
                e?.addEventListener("abort", ( () => o(l())), {
                    once: !0
                })
            }
            ))
        }
        function l() {
            return new DOMException("Aborted","AbortError")
        }
        function a(e) {
            return e instanceof Error && "AbortError" === e.name || "object" == typeof e && null !== e && "name"in e && "AbortError" === e.name
        }
        function c(e, t) {
            return Promise.race([s(e), t])
        }
        async function d(e, t) {
            let o;
            try {
                await c(e, new Promise((e => {
                    o = setTimeout(e, t)
                }
                )))
            } finally {
                clearTimeout(o)
            }
        }
        o.d(t, {
            createAbortError: () => l,
            delay: () => d,
            isAbortError: () => a,
            respectAbort: () => c,
            respectLatest: () => i,
            rethrowAbortError: () => r,
            skipAbortError: () => n
        })
    }
    ,
    764250: (e, t, o) => {
        "use strict";
        o.d(t, {
            ActionGroup: () => n
        });
        class i {
            constructor(e, t) {
                this._group = e;
                const {hotkey: o, handler: i, desc: n, isDisabled: r, element: s=null, isRepeatAccepted: l=!1} = t;
                this.hotkey = o,
                this.handler = i,
                this.desc = n,
                this.element = s,
                this.isRepeatAccepted = l,
                this.isDisabled = r ? "function" == typeof r ? r : () => !0 : () => !1
            }
            destroy() {
                this._group && (this._group.remove(this),
                this._group = null)
            }
        }
        class n {
            constructor(e, t) {
                this._actions = new Map,
                this._manager = e,
                this.order = t?.order ?? 0,
                this.modal = !(!t || !t.modal),
                t && (this.desc = t.desc),
                t && t.isDisabled ? "function" == typeof t.isDisabled ? this.isDisabled = t.isDisabled : this.isDisabled = () => !0 : this.isDisabled = () => !1,
                this._manager.registerGroup(this)
            }
            add(e) {
                let t = this._actions.get(e.hotkey);
                t || (t = [],
                this._actions.set(e.hotkey, t));
                const o = new i(this,e);
                return t.push(o),
                o
            }
            remove(e) {
                const t = this._actions.get(e.hotkey);
                if (!t)
                    return;
                const o = t.findIndex((t => t === e));
                o >= 0 && (1 === t.length ? this._actions.delete(e.hotkey) : t.splice(o, 1))
            }
            handleHotkey(e, t) {
                const o = this._actions.get(e);
                if (!o)
                    return !1;
                for (const i of o)
                    if ((!i.element || t.target && i.element.contains(t.target)) && !i.isDisabled(t))
                        return t.repeat && !i.isRepeatAccepted || (i.handler(t),
                        this._callMatchedHotkeyHandler(e)),
                        t.preventDefault(),
                        !0;
                return !1
            }
            promote() {
                this._manager.promoteGroup(this)
            }
            destroy() {
                for (const [,e] of this._actions)
                    for (const t of e)
                        t.destroy();
                this._actions.clear(),
                this._manager.unregisterGroup(this)
            }
            static setMatchedHotkeyHandler(e) {
                n._matchedHotkeyHandler = e
            }
            _callMatchedHotkeyHandler(e) {
                n._matchedHotkeyHandler && n._matchedHotkeyHandler(e)
            }
        }
    }
    ,
    163586: (e, t, o) => {
        "use strict";
        o.d(t, {
            ActionManager: () => a
        });
        var i = o(158942)
          , n = o(591800)
          , r = o(607423);
        class s {
            constructor(e, t) {
                this.modifiers = e,
                this.code = t
            }
            altOrOptionCode() {
                return "AltLeft" === this.code || "AltRight" === this.code
            }
            controlOrMetaCode() {
                return n.isMacKeyboard ? "MetaLeft" === this.code || "MetaRight" === this.code || "OSLeft" === this.code || "OSRight" === this.code : "ControlLeft" === this.code || "ControlRight" === this.code
            }
        }
        class l extends i.WatchedValue {
            setValue(e, t) {
                const o = this.value();
                (t || void 0 === o || o.code !== e.code || o.modifiers !== e.modifiers) && super.setValue(e)
            }
        }
        class a {
            constructor() {
                this._groups = [],
                this._pressedKeys = new i.WatchedValue(0),
                this._keyboardPressedKeysState = new l(new s(0)),
                this._keyDownListener = e => {
                    if (e.defaultPrevented)
                        return;
                    const t = (0,
                    n.hashFromEvent)(e);
                    if (this._pressedKeys.setValue(t),
                    this._keyboardPressedKeysState.setValue(new s((0,
                    n.modifiersFromEvent)(e),e.code)),
                    !(0,
                    r.isNativeUIInteraction)(t, e.target))
                        for (let o = this._groups.length; o-- > 0; ) {
                            const i = this._groups[o];
                            if (!i.isDisabled()) {
                                if (i.handleHotkey(t, e))
                                    return;
                                if (i.modal)
                                    return
                            }
                        }
                }
                ,
                this._keyUpListener = e => {
                    const t = (0,
                    n.hashFromEvent)(e);
                    this._pressedKeys.setValue(t),
                    this._keyboardPressedKeysState.setValue(new s((0,
                    n.modifiersFromEvent)(e),""))
                }
                ,
                this._blurEvent = () => {
                    this._pressedKeys.setValue(0),
                    this._keyboardPressedKeysState.setValue(new s(0,""))
                }
                ,
                this._mouseEvent = e => {
                    const t = (0,
                    n.modifiersFromEvent)(e)
                      , o = 255 & (this._pressedKeys.value() ?? 0);
                    this._pressedKeys.setValue(t | o)
                }
            }
            listen(e) {
                e.addEventListener("keydown", this._keyDownListener),
                e.addEventListener("keyup", this._keyUpListener),
                e.addEventListener("blur", this._blurEvent),
                e.addEventListener("mousemove", this._mouseEvent)
            }
            unlisten(e) {
                e.removeEventListener("keydown", this._keyDownListener),
                e.removeEventListener("keyup", this._keyUpListener),
                e.removeEventListener("blur", this._blurEvent),
                e.removeEventListener("mousemove", this._mouseEvent)
            }
            registerGroup(e) {
                this._groups.push(e),
                this.sortGroups()
            }
            unregisterGroup(e) {
                for (let t = this._groups.length; t--; )
                    this._groups[t] === e && this._groups.splice(t, 1)
            }
            promoteGroup(e) {
                const t = this._getModalOrderEpoch()
                  , o = c(e, t);
                let i = this._groups.findIndex((e => c(e, t) === o))
                  , n = 0;
                for (; i < this._groups.length && c(this._groups[i], t) === o; ) {
                    const r = this._groups[i];
                    r === e ? n = 1 : c(r, t) === o && (this._groups[i - n] = r),
                    i++
                }
                this._groups[i - n] = e
            }
            pressedKeys() {
                return this._pressedKeys.readonly()
            }
            keyboardPressedKeysState() {
                return this._keyboardPressedKeysState.readonly()
            }
            sortGroups() {
                const e = this._getModalOrderEpoch();
                this._groups.sort(( (t, o) => c(o, e) - c(t, e)))
            }
            _getMinOrder() {
                return this._groups.reduce(( (e, t) => Math.min(e, t.order)), 0)
            }
            _getModalOrderEpoch() {
                return -2 * (Math.abs(this._getMinOrder()) - 1)
            }
        }
        function c(e, t) {
            return e.order + (e.modal ? t : 0)
        }
    }
    ,
    559986: (e, t, o) => {
        "use strict";
        o.d(t, {
            LIST_START: () => i,
            getTargetIndex: () => n
        });
        const i = Symbol();
        function n(e, t, o) {
            const n = void 0 === o ? void 0 !== t ? e.indexOf(t) : void 0 : o === i ? 0 : e.indexOf(o) + 1;
            return -1 !== n ? n : void 0
        }
    }
    ,
    199669: (e, t, o) => {
        "use strict";
        function i(e) {
            const {id: t, event: o, channel: i, filter: n} = e;
            return e => (i.on(o, (o => {
                const {action: i, emitter: r} = JSON.parse(o);
                r !== t && n(i) && e.dispatch({
                    ...i,
                    payload: {
                        ...i.payload,
                        silent: !0
                    }
                })
            }
            )),
            e => r => {
                const s = e(r);
                return n(r) && (r.payload.silent || i.emit(o, JSON.stringify({
                    action: r,
                    emitter: t
                }))),
                s
            }
            )
        }
        o.d(t, {
            createCrossTabSyncMiddleware: () => i
        })
    }
    ,
    50991: (e, t, o) => {
        "use strict";
        o.d(t, {
            qualified: () => i
        });
        const i = {
            cast: e => e,
            castMany: e => e.map(i.cast)
        }
    }
    ,
    340958: (e, t, o) => {
        "use strict";
        function i(e, t) {
            if (e.length !== t.length)
                return !1;
            for (let o = 0; o < e.length; ++o)
                if (e[o] !== t[o])
                    return !1;
            return !0
        }
        o.d(t, {
            equalArrays: () => i
        })
    }
    ,
    883522: (e, t, o) => {
        "use strict";
        o.d(t, {
            AppContext: () => i
        });
        const i = (0,
        o(50959).createContext)({
            isOnMobileAppPage: () => !1,
            isRtl: !1,
            locale: "en",
            renderMode: "legacy"
        })
    }
    ,
    842060: (e, t, o) => {
        "use strict";
        o.d(t, {
            getStyleClasses: () => a,
            isCircleLogoWithUrlProps: () => c
        });
        var i = o(497754)
          , n = o.n(i)
          , r = o(548729)
          , s = o(757554)
          , l = o.n(s);
        function a(e, t=2, o) {
            return n()(l().logo, l()[e], o, 0 === t || 1 === t ? n()(r.skeletonTheme.wrapper, l().skeleton) : l().letter, 1 === t && r.skeletonTheme.animated)
        }
        function c(e) {
            return "logoUrl"in e && null !== e.logoUrl && void 0 !== e.logoUrl && 0 !== e.logoUrl.length
        }
    }
    ,
    741083: (e, t, o) => {
        "use strict";
        o.d(t, {
            presetDefault: () => i,
            presetPlatform: () => n
        });
        const i = {
            enableActiveStateStyles: !0
        }
          , n = {
            enableActiveStateStyles: !1
        }
    }
    ,
    267521: (e, t, o) => {
        "use strict";
        o.d(t, {
            useFunctionalRefObject: () => r
        });
        var i = o(50959)
          , n = o(774218);
        function r(e) {
            const t = (0,
            i.useMemo)(( () => function(e) {
                const t = o => {
                    e(o),
                    t.current = o
                }
                ;
                return t.current = null,
                t
            }((e => {
                l.current(e)
            }
            ))), [])
              , o = (0,
            i.useRef)(null)
              , r = t => {
                if (null === t)
                    return s(o.current, t),
                    void (o.current = null);
                o.current !== e && (o.current = e,
                s(o.current, t))
            }
              , l = (0,
            i.useRef)(r);
            return l.current = r,
            (0,
            n.useIsomorphicLayoutEffect)(( () => {
                if (null !== t.current)
                    return l.current(t.current),
                    () => l.current(null)
            }
            ), [e]),
            t
        }
        function s(e, t) {
            null !== e && ("function" == typeof e ? e(t) : e.current = t)
        }
    }
    ,
    774218: (e, t, o) => {
        "use strict";
        o.d(t, {
            useIsomorphicLayoutEffect: () => n
        });
        var i = o(50959);
        function n(e, t) {
            ("undefined" == typeof window ? i.useEffect : i.useLayoutEffect)(e, t)
        }
    }
    ,
    940194: (e, t, o) => {
        "use strict";
        function i(e, t, o, i, n) {
            function r(n) {
                if (e > n.timeStamp)
                    return;
                const r = n.target;
                void 0 !== o && null !== t && null !== r && r.ownerDocument === i && (t.contains(r) || o(n))
            }
            return n.click && i.addEventListener("click", r, !1),
            n.mouseDown && i.addEventListener("mousedown", r, !1),
            n.touchEnd && i.addEventListener("touchend", r, !1),
            n.touchStart && i.addEventListener("touchstart", r, !1),
            () => {
                i.removeEventListener("click", r, !1),
                i.removeEventListener("mousedown", r, !1),
                i.removeEventListener("touchend", r, !1),
                i.removeEventListener("touchstart", r, !1)
            }
        }
        o.d(t, {
            addOutsideEventListener: () => i
        })
    }
    ,
    853970: (e, t, o) => {
        "use strict";
        o.d(t, {
            useOutsideEvent: () => i.useOutsideEvent
        });
        var i = o(31241)
    }
    ,
    31241: (e, t, o) => {
        "use strict";
        o.d(t, {
            useOutsideEvent: () => s
        });
        var i = o(50959)
          , n = o(774218)
          , r = o(940194);
        function s(e) {
            const {click: t, mouseDown: o, touchEnd: s, touchStart: l, handler: a, reference: c} = e
              , d = (0,
            i.useRef)(null)
              , u = (0,
            i.useRef)("undefined" == typeof window ? 0 : new window.CustomEvent("timestamp").timeStamp);
            return (0,
            n.useIsomorphicLayoutEffect)(( () => {
                const e = {
                    click: t,
                    mouseDown: o,
                    touchEnd: s,
                    touchStart: l
                }
                  , i = c ? c.current : d.current;
                return (0,
                r.addOutsideEventListener)(u.current, i, a, document, e)
            }
            ), [t, o, s, l, a]),
            c || d
        }
    }
    ,
    444530: (e, t, o) => {
        "use strict";
        o.d(t, {
            useResizeObserver: () => s
        });
        var i = o(50959)
          , n = o(774218)
          , r = o(267521);
        function s(e, t=[]) {
            const {callback: o, ref: s=null} = function(e) {
                return "function" == typeof e ? {
                    callback: e
                } : e
            }(e)
              , l = (0,
            i.useRef)(null)
              , a = (0,
            i.useRef)(o);
            a.current = o;
            const c = (0,
            r.useFunctionalRefObject)(s)
              , d = (0,
            i.useCallback)((e => {
                c(e),
                null !== l.current && (l.current.disconnect(),
                null !== e && l.current.observe(e))
            }
            ), [c, l]);
            return (0,
            n.useIsomorphicLayoutEffect)(( () => (l.current = new ResizeObserver(( (e, t) => {
                a.current(e, t)
            }
            )),
            c.current && d(c.current),
            () => {
                l.current?.disconnect()
            }
            )), [c, ...t]),
            d
        }
    }
    ,
    265005: (e, t, o) => {
        "use strict";
        o.d(t, {
            Loader: () => i.Loader
        });
        var i = o(386290)
    }
    ,
    386290: (e, t, o) => {
        "use strict";
        o.d(t, {
            Loader: () => a
        });
        var i = o(50959)
          , n = o(497754)
          , r = o.n(n)
          , s = o(649107)
          , l = o.n(s);
        function a(e) {
            const {className: t, size: o="medium", staticPosition: n, color: s="black"} = e
              , a = r()(l().item, l()[s], l()[o]);
            return i.createElement("span", {
                className: r()(l().loader, n && l().static, t)
            }, i.createElement("span", {
                className: a
            }), i.createElement("span", {
                className: a
            }), i.createElement("span", {
                className: a
            }))
        }
    }
    ,
    430495: (e, t, o) => {
        "use strict";
        o.d(t, {
            Portal: () => c,
            PortalContext: () => d
        });
        var i = o(50959)
          , n = o(632227)
          , r = o(925931)
          , s = o(351290)
          , l = o(593110)
          , a = o(692822);
        class c extends i.PureComponent {
            constructor() {
                super(...arguments),
                this._uuid = (0,
                r.nanoid)()
            }
            componentWillUnmount() {
                this._manager().removeWindow(this._uuid)
            }
            render() {
                const e = this._manager().ensureWindow(this._uuid, this.props.layerOptions);
                e.style.top = this.props.top || "",
                e.style.bottom = this.props.bottom || "",
                e.style.left = this.props.left || "",
                e.style.right = this.props.right || "",
                e.style.pointerEvents = this.props.pointerEvents || "";
                const t = this.props.className;
                return t && ("string" == typeof t ? e.classList.add(t) : e.classList.add(...t)),
                this.props.shouldTrapFocus && !e.hasAttribute(l.FOCUS_TRAP_DATA_ATTRIBUTE) && e.setAttribute(l.FOCUS_TRAP_DATA_ATTRIBUTE, "true"),
                this.props["aria-hidden"] && e.setAttribute("aria-hidden", "true"),
                n.createPortal(i.createElement(d.Provider, {
                    value: this
                }, this.props.children), e)
            }
            moveToTop() {
                this._manager().moveToTop(this._uuid)
            }
            _manager() {
                return null === this.context ? (0,
                s.getRootOverlapManager)() : this.context
            }
        }
        c.contextType = a.SlotContext;
        const d = i.createContext(null)
    }
    ,
    548729: (e, t, o) => {
        "use strict";
        o.d(t, {
            skeletonTheme: () => n
        });
        var i = o(116313);
        const n = o.n(i)()
    }
    ,
    692822: (e, t, o) => {
        "use strict";
        o.d(t, {
            Slot: () => n,
            SlotContext: () => r
        });
        var i = o(50959);
        class n extends i.Component {
            shouldComponentUpdate() {
                return !1
            }
            render() {
                return i.createElement("div", {
                    style: {
                        position: "fixed",
                        zIndex: 150,
                        left: 0,
                        top: 0
                    },
                    ref: this.props.reference
                })
            }
        }
        const r = i.createContext(null)
    }
    ,
    451608: (e, t, o) => {
        "use strict";
        o.d(t, {
            SwitchGroup: () => i.SwitchGroup,
            makeSwitchGroupItem: () => s
        });
        var i = o(367254)
          , n = o(50959)
          , r = o(973920);
        function s(e) {
            var t;
            return t = class extends n.PureComponent {
                constructor() {
                    super(...arguments),
                    this._onChange = e => {
                        this.context.getOnChange()(e)
                    }
                    ,
                    this._onUpdate = e => {
                        e.includes(this.props.value) && this.forceUpdate()
                    }
                }
                componentDidMount() {
                    this.context.subscribe(this._onUpdate)
                }
                render() {
                    return n.createElement(e, {
                        ...this.props,
                        name: this._getName(),
                        onChange: this._onChange,
                        checked: this._isChecked()
                    })
                }
                componentWillUnmount() {
                    this.context.unsubscribe(this._onUpdate)
                }
                _getName() {
                    return this.context.getName()
                }
                _isChecked() {
                    return this.context.getValues().includes(this.props.value)
                }
            }
            ,
            t.contextType = r.SwitchGroupContext,
            t
        }
    }
    ,
    973920: (e, t, o) => {
        "use strict";
        o.d(t, {
            SwitchGroupContext: () => r
        });
        var i = o(50959)
          , n = o(755883);
        const r = (0,
        i.createContext)({
            getName: () => "",
            getValues: () => [],
            getOnChange: () => n.default,
            subscribe: n.default,
            unsubscribe: n.default
        })
    }
    ,
    367254: (e, t, o) => {
        "use strict";
        o.d(t, {
            SwitchGroup: () => r
        });
        var i = o(50959)
          , n = o(973920);
        class r extends i.PureComponent {
            constructor(e) {
                super(e),
                this._subscriptions = new Set,
                this._getName = () => this.props.name,
                this._getValues = () => this.props.values,
                this._getOnChange = () => this.props.onChange,
                this._subscribe = e => {
                    this._subscriptions.add(e)
                }
                ,
                this._unsubscribe = e => {
                    this._subscriptions.delete(e)
                }
                ,
                this.state = {
                    switchGroupContext: {
                        getName: this._getName,
                        getValues: this._getValues,
                        getOnChange: this._getOnChange,
                        subscribe: this._subscribe,
                        unsubscribe: this._unsubscribe
                    }
                }
            }
            render() {
                return i.createElement(n.SwitchGroupContext.Provider, {
                    value: this.state.switchGroupContext
                }, this.props.children)
            }
            componentDidUpdate(e) {
                this._notify(this._getUpdates(this.props.values, e.values))
            }
            _notify(e) {
                this._subscriptions.forEach((t => t(e)))
            }
            _getUpdates(e, t) {
                return [...t, ...e].filter((o => t.includes(o) ? !e.includes(o) : e.includes(o)))
            }
        }
    }
    ,
    45554: (e, t, o) => {
        "use strict";
        o.d(t, {
            Switch: () => p,
            SwitchView: () => c
        });
        var i = o(50959)
          , n = o(497754)
          , r = o.n(n)
          , s = o(169986)
          , l = o(847282)
          , a = o.n(l);
        function c(e) {
            const {size: t="small", checked: o, disabled: n} = e;
            return i.createElement("span", {
                className: r()(a().switchView, a()[t], n && a().disabled, o && a().checked)
            }, i.createElement("span", {
                className: a().track
            }), i.createElement("span", {
                className: a().thumb
            }))
        }
        var d = o(591800)
          , u = o(670330)
          , h = o.n(u);
        function p(e) {
            const t = (0,
            i.useContext)(s.CustomBehaviourContext)
              , {size: o, intent: n="default", checked: l, className: a, enableActiveStateStyles: u=t.enableActiveStateStyles, disabled: p, onChange: m, title: _, id: g, name: v, value: f, tabIndex: y, role: b="switch", ariaDisabled: w, reference: S, ariaLabelledBy: C, ariaLabel: k, ...x} = e;
            return i.createElement("span", {
                className: r()(a, h().switcher)
            }, i.createElement("input", {
                ...x,
                type: "checkbox",
                className: r()(h().input, u && h().activeStylesEnabled, l && h().checked, p && h().disabled),
                role: b,
                "aria-checked": l,
                checked: l,
                onKeyDown: e => {
                    13 === (0,
                    d.hashFromEvent)(e) && e.currentTarget?.click()
                }
                ,
                onChange: m,
                disabled: p,
                "aria-disabled": w,
                tabIndex: y,
                title: _,
                id: g,
                name: v,
                value: f,
                ref: S,
                "aria-label": k,
                "aria-labelledby": C
            }), i.createElement("span", {
                className: r()(h().thumbWrapper, h()[n])
            }, i.createElement(c, {
                checked: l,
                size: o,
                disabled: p
            })))
        }
    }
    ,
    746326: (e, t, o) => {
        "use strict";
        function i(e) {
            const {paddingTop: t, paddingBottom: o} = window.getComputedStyle(e);
            return [t, o].reduce(( (e, t) => e - Number((t || "").replace("px", ""))), e.clientHeight)
        }
        function n(e, t=!1) {
            const o = getComputedStyle(e)
              , i = [o.height];
            return "border-box" !== o.boxSizing && i.push(o.paddingTop, o.paddingBottom, o.borderTopWidth, o.borderBottomWidth),
            t && i.push(o.marginTop, o.marginBottom),
            i.reduce(( (e, t) => e + (parseFloat(t) || 0)), 0)
        }
        function r(e, t=!1) {
            const o = getComputedStyle(e)
              , i = [o.width];
            return "border-box" !== o.boxSizing && i.push(o.paddingLeft, o.paddingRight, o.borderLeftWidth, o.borderRightWidth),
            t && i.push(o.marginLeft, o.marginRight),
            i.reduce(( (e, t) => e + (parseFloat(t) || 0)), 0)
        }
        o.d(t, {
            contentHeight: () => i,
            outerHeight: () => n,
            outerWidth: () => r
        })
    }
    ,
    593110: (e, t, o) => {
        "use strict";
        o.d(t, {
            FOCUS_TRAP_DATA_ATTRIBUTE: () => i
        });
        const i = "data-focus-trap"
    }
    ,
    355734: (e, t, o) => {
        "use strict";
        o.d(t, {
            createScopedVisibleElementFilter: () => d,
            getActiveElementSelectors: () => c,
            isHTMLOrSVGElement: () => u,
            isInertRoot: () => l,
            isVisibilityVisible: () => r
        });
        const i = ["button", "fieldset", "optgroup", "option", "select", "textarea", "input"]
          , n = ["button", "input", "select", "textarea", "a[href]", "audio[controls]", "video[controls]", '[tabindex="0"]', '[contenteditable="true"]'].map((e => i.includes(e) ? `${e}:not(:disabled)` : e)).map((e => `${e}:not([tabindex="-1"])`)).join(",");
        function r(e) {
            return "visible" === getComputedStyle(e).visibility
        }
        function s(e, t) {
            if (e.matches("[inert],[inert] *"))
                return !0;
            let o = e;
            for (; o !== t && null !== o; ) {
                if (a(o))
                    return !0;
                o = o.parentElement
            }
            return !1
        }
        function l(e) {
            return e.matches("[inert]") || a(e)
        }
        function a(e) {
            return "none" === getComputedStyle(e).display
        }
        function c() {
            return n
        }
        function d(e) {
            return t => r(t) && !s(t, e)
        }
        function u(e) {
            return e instanceof HTMLElement || e instanceof SVGElement
        }
    }
    ,
    58407: (e, t, o) => {
        "use strict";
        o.d(t, {
            OutsideEvent: () => n
        });
        var i = o(853970);
        function n(e) {
            const {children: t, ...o} = e;
            return t((0,
            i.useOutsideEvent)(o))
        }
    }
    ,
    351290: (e, t, o) => {
        "use strict";
        o.d(t, {
            OverlapManager: () => s,
            getRootOverlapManager: () => a
        });
        var i = o(650151)
          , n = o(593110);
        class r {
            constructor() {
                this._storage = []
            }
            add(e) {
                this._storage.push(e)
            }
            remove(e) {
                this._storage = this._storage.filter((t => e !== t))
            }
            has(e) {
                return this._storage.includes(e)
            }
            getItems() {
                return this._storage
            }
        }
        class s {
            constructor(e=document) {
                this._storage = new r,
                this._windows = new Map,
                this._index = 0,
                this._document = e,
                this._container = e.createDocumentFragment()
            }
            setContainer(e) {
                const t = this._container
                  , o = null === e ? this._document.createDocumentFragment() : e;
                !function(e, t) {
                    Array.from(e.childNodes).forEach((e => {
                        e.nodeType === Node.ELEMENT_NODE && t.appendChild(e)
                    }
                    ))
                }(t, o),
                this._container = o
            }
            registerWindow(e) {
                this._storage.has(e) || this._storage.add(e)
            }
            ensureWindow(e, t={
                position: "fixed",
                direction: "normal"
            }) {
                const o = this._windows.get(e);
                if (void 0 !== o)
                    return o;
                this.registerWindow(e);
                const i = this._document.createElement("div");
                if (i.style.position = t.position,
                i.style.zIndex = this._index.toString(),
                i.dataset.id = e,
                void 0 !== t.index) {
                    const e = this._container.childNodes.length;
                    if (t.index >= e)
                        this._container.appendChild(i);
                    else if (t.index <= 0)
                        this._container.insertBefore(i, this._container.firstChild);
                    else {
                        const e = this._container.childNodes[t.index];
                        this._container.insertBefore(i, e)
                    }
                } else
                    "reverse" === t.direction ? this._container.insertBefore(i, this._container.firstChild) : this._container.appendChild(i);
                return this._windows.set(e, i),
                ++this._index,
                i
            }
            unregisterWindow(e) {
                this._storage.remove(e);
                const t = this._windows.get(e);
                void 0 !== t && (null !== t.parentElement && t.parentElement.removeChild(t),
                this._windows.delete(e))
            }
            getZindex(e) {
                const t = this.ensureWindow(e);
                return parseInt(t.style.zIndex || "0")
            }
            moveLastWindowToTop() {
                const e = this._storage.getItems()
                  , t = e[e.length - 1];
                t && this.moveToTop(t)
            }
            moveToTop(e) {
                if (this.getZindex(e) !== this._index) {
                    const t = this.ensureWindow(e);
                    this._windows.forEach(( (e, o) => {
                        e.hasAttribute(n.FOCUS_TRAP_DATA_ATTRIBUTE) && e.setAttribute(n.FOCUS_TRAP_DATA_ATTRIBUTE, e === t ? "true" : "false")
                    }
                    )),
                    t.style.zIndex = (++this._index).toString()
                }
            }
            removeWindow(e) {
                this.unregisterWindow(e)
            }
        }
        const l = new WeakMap;
        function a(e=document) {
            const t = e.getElementById("overlap-manager-root");
            if (null !== t)
                return (0,
                i.ensureDefined)(l.get(t));
            {
                const t = new s(e)
                  , o = function(e) {
                    const t = e.createElement("div");
                    return t.style.position = "absolute",
                    t.style.zIndex = 150. .toString(),
                    t.style.top = "0px",
                    t.style.left = "0px",
                    t.id = "overlap-manager-root",
                    t.dataset.qaId = "overlap-manager-root",
                    t
                }(e);
                return l.set(o, t),
                t.setContainer(o),
                e.body.appendChild(o),
                t
            }
        }
    }
    ,
    499994: (e, t, o) => {
        "use strict";
        o.d(t, {
            getTooltipData: () => n,
            setTooltipData: () => r
        });
        const i = new WeakMap;
        function n(e, t) {
            const o = i.get(e);
            return o instanceof Function ? o(t) : o && o[t]
        }
        function r(e, t, o) {
            if (o instanceof Function)
                return void i.set(e, o);
            const n = i.get(e)
              , r = void 0 === n || n instanceof Function ? {} : n;
            r[t] = o,
            i.set(e, r)
        }
    }
    ,
    471802: (e, t, o) => {
        "use strict";
        o.d(t, {
            getDataFromTarget: () => _,
            getTooltip: () => g,
            hideTooltip: () => y,
            setStyle: () => v,
            showTooltip: () => f,
            updateTooltipTextFromTarget: () => m
        });
        var i = o(650151)
          , n = o(760863)
          , r = o(969680)
          , s = (o(142492),
        o(982528))
          , l = o(462140)
          , a = o(638456);
        const c = {
            default: "",
            white: "theme-white",
            chart: "theme-chart",
            "round-shadow": "theme-round-shadow"
        }
          , d = Object.keys(c);
        var u = o(499994)
          , h = o(604286)
          , p = o(646021);
        function m(e) {
            const t = e.hasAttribute("data-tooltip") ? e.getAttribute("data-tooltip") : e.getAttribute("title");
            return t && ((0,
            u.setTooltipData)(e, "text", t),
            e.removeAttribute("title")),
            (0,
            u.getTooltipData)(e, "text") || ""
        }
        function _(e) {
            const t = m(e)
              , o = e.getBoundingClientRect()
              , i = {
                h: o.height,
                w: o.width,
                x: o.left,
                y: o.top
            }
              , n = e.getAttribute("data-color-theme") || ""
              , r = e.classList.contains("common-tooltip-html")
              , s = parseInt(e.getAttribute("data-tooltip-delay") || "")
              , l = parseInt(e.getAttribute("data-tooltip-debounce") || "");
            let a = {
                type: "none"
            };
            return t && (a = {
                type: r ? "html" : "text",
                data: t
            }),
            {
                above: e.classList.contains("common-tooltip-above"),
                below: e.classList.contains("common-tooltip-below"),
                otl: e.classList.contains("common-tooltip-otl"),
                otr: e.classList.contains("common-tooltip-otr"),
                vertical: e.classList.contains("common-tooltip-vertical"),
                hotkey: e.getAttribute("data-tooltip-hotkey"),
                narrow: e.classList.contains("common-tooltip-narrow"),
                wide: e.classList.contains("common-tooltip-wide"),
                colorTheme: n,
                tooltipDelay: s,
                tooltipDebounce: l,
                rect: i,
                content: a,
                target: e
            }
        }
        function g(e) {
            const t = (0,
            i.ensureNotNull)(k).cloneNode(!0)
              , o = E(t)
              , {content: n} = e;
            switch (n.type) {
            case "element":
                o.innerHTML = "",
                o.appendChild(n.data);
                break;
            case "html":
                o.innerHTML = n.data;
                break;
            case "text":
                if (e.hotkey) {
                    const e = (0,
                    i.ensureNotNull)(M).cloneNode(!0);
                    e.innerText = n.data,
                    o.appendChild(e)
                } else
                    o.innerText = n.data
            }
            if (e.hotkey) {
                const t = "none" !== n.type
                  , r = (0,
                i.ensureNotNull)(x).cloneNode(!0)
                  , s = (0,
                h.hotKeyDeserialize)(e.hotkey)
                  , l = s.keys.map((e => `<span class="${p["common-tooltip__hotkey-button"]}">${e}</span>`));
                r.innerHTML = function(e, t) {
                    const o = /{\d}|{hotkey_\d}/gi;
                    return e.replace(o, (e => {
                        const o = Number(e.match(/\d/));
                        return t[o]
                    }
                    ))
                }(s.text, l).replace(/\s\+\s/g, `<span class="${p["common-tooltip__plus-sign"]}">+</span>`),
                o.classList.add(p["common-tooltip__body--with-hotkey"]),
                t && r.classList.add(p["common-tooltip__hotkey-block--divider"]),
                o.appendChild(r)
            }
            return t.addEventListener("contextmenu", s.preventDefault),
            t
        }
        function v(e, t) {
            const o = t.rect;
            if (!o)
                return;
            !function(e, t) {
                const o = d.includes(t) ? c[t] : "";
                e.classList.remove(...d.map((e => c[e])).filter((e => !!e))),
                o && !e.classList.contains(o) && e.classList.add(o)
            }(e, t.colorTheme || "default"),
            t.addClass && e.classList.add(t.addClass);
            const i = E(e)
              , n = e.querySelector(`.${p["common-tooltip__button-container"]}`);
            i.classList.toggle(p["common-tooltip__body--width_wide"], Boolean(t.wide)),
            i.classList.toggle(p["common-tooltip__body--no-padding"], Boolean(t.noPadding)),
            i.classList.toggle(p["common-tooltip__body--width_narrow"], Boolean(t.narrow)),
            i.classList.toggle(p["common-tooltip__body--no-buttons"], !0),
            i.style.left = b(0),
            i.style.width = b(i.clientWidth + (Boolean(t.noPadding) ? 0 : 2));
            const s = document.body.clientWidth
              , u = a.CheckMobile.iOS() || a.CheckMobile.Android() || (0,
            a.supportTouch)() && (0,
            a.isMac)() ? window.innerHeight : document.body.clientHeight
              , h = t.vertical
              , m = t.extendMargin || h && o.w < 20 || !h && o.h < 20;
            e.classList.toggle(p["common-tooltip--farther"], m),
            e.classList.toggle(p["common-tooltip--vertical"], h),
            e.classList.toggle(p["common-tooltip--horizontal"], !h);
            const _ = function(e) {
                return e.querySelector(`.${p["common-tooltip__ear-holder"]}`)
            }(e)
              , g = e.offsetHeight;
            if (h) {
                const a = 10
                  , c = u - 10
                  , d = 12
                  , h = a + d
                  , m = c - d
                  , v = (0,
                l.clamp)(o.y + o.h / 2, h, m) - g / 2
                  , f = v + g;
                e.style.left = b(o.x + o.w),
                e.style.top = b(v),
                v < a ? i.style.top = n.style.top = b(a - v) : f > c && (i.style.top = n.style.top = b(c - f));
                const {right: y} = (e.querySelector(":last-child") || i).getBoundingClientRect()
                  , w = y + 10 > s;
                e.classList.toggle(p["common-tooltip--direction_reversed"], w),
                e.classList.toggle(p["common-tooltip--direction_normal"], !w);
                let S = w ? "after" : "before";
                (0,
                r.isRtl)() ? (S = t.otr ? "after" : S,
                S = t.otl ? "before" : S) : (S = t.otr ? "before" : S,
                S = t.otl ? "after" : S),
                _.classList.toggle(p["common-tooltip__ear-holder--before"], "before" === S),
                _.classList.toggle(p["common-tooltip__ear-holder--after"], "after" === S),
                "after" === S && (e.style.left = "auto",
                e.style.right = b(s - o.x))
            } else {
                const r = o.x - (i.offsetWidth - o.w) / 2
                  , l = s - e.offsetWidth - 20 <= 0 ? (s - e.offsetWidth) / 2 : 10
                  , a = s - l - e.offsetWidth
                  , c = Math.max(l, Math.min(r, a));
                e.style.left = b(c);
                const d = a < r;
                e.classList.toggle(p["common-tooltip--direction_reversed"], d),
                e.classList.toggle(p["common-tooltip--direction_normal"], !d);
                const h = function(e, t, o, i) {
                    if (e.above)
                        return F(t, i) ? "above" : "below";
                    if (e.below)
                        return function(e, t, o) {
                            return o.y + o.h + t + 10 < e
                        }(t, o, i) ? "below" : "above";
                    return F(o, i) ? "above" : "below"
                }(t, u, g, o);
                "above" === h ? e.style.bottom = b(u - o.y) : e.style.top = b(o.y + o.h),
                _.classList.add("above" === h ? p["common-tooltip__ear-holder--above"] : p["common-tooltip__ear-holder--below"]);
                const {left: m} = i.getBoundingClientRect();
                let v = Math.trunc(o.x + o.w / 2 - (m + i.clientWidth / 2));
                e.style.left = b(c + v),
                e.style.width = b(i.clientWidth + n.clientWidth),
                v = d ? Math.max(0, v) : Math.min(0, v),
                n.style.left = b(-v),
                i.style.left = b(-v)
            }
        }
        function f(e) {
            e.classList.toggle(p["common-tooltip--hidden"], !1)
        }
        function y(e) {
            e.classList.toggle(p["common-tooltip--hidden"], !0)
        }
        function b(e) {
            return `${Math.floor(e)}px`
        }
        const w = `\n\t<div id="common-tooltip-wrapper" class="${p["common-tooltip"]}">\n\t\t<div class="${p["common-tooltip__ear-holder"]}" >\n\t\t\t<div class="${p["common-tooltip__body"]} js-tooltip-body"></div>\n\t\t</div>\n\t\t<div class="${p["common-tooltip__button-container"]}"></div>\n\t</div>\n`
          , S = `\n\t<div class="${p["common-tooltip__hotkey-block"]}"></div>\n`
          , C = `\n\t<div class="${p["common-tooltip__hotkey-text"]}"></div>\n`
          , k = (0,
        n.parseHtmlElement)(w)
          , x = (0,
        n.parseHtmlElement)(S)
          , M = (0,
        n.parseHtmlElement)(C);
        function E(e) {
            return e.querySelector(`.${p["common-tooltip__body"]}`)
        }
        function F(e, t) {
            return 10 + e < t.y
        }
    }
    ,
    630112: (e, t, o) => {
        "use strict";
        o.d(t, {
            empty: () => s,
            setTooltip: () => l
        });
        const i = "tooltip-root-element";
        let n;
        function r() {
            const e = document.getElementById(i);
            e ? n = e : (n = document.createElement("div"),
            n.id = i,
            document.body.appendChild(n))
        }
        function s() {
            n && (n.innerHTML = "")
        }
        function l(e) {
            s(),
            n || r(),
            n.appendChild(e)
        }
        "interactive" === document.readyState ? r() : document.addEventListener("DOMContentLoaded", r)
    }
    ,
    112539: (e, t, o) => {
        "use strict";
        o.d(t, {
            clearSchedule: () => s,
            scheduleHide: () => a,
            scheduleRemove: () => l,
            scheduleRender: () => c
        });
        let i = 0
          , n = 0
          , r = 0;
        function s() {
            clearTimeout(i),
            clearTimeout(n),
            clearTimeout(r)
        }
        function l(e, t) {
            r = setTimeout(e, t)
        }
        function a(e, t) {
            n = setTimeout(e, t)
        }
        function c(e, t) {
            i = setTimeout(e, t)
        }
    }
    ,
    952598: (e, t, o) => {
        "use strict";
        var i;
        o.d(t, {
            KnownAction: () => i,
            widgetSheriffActions: () => n
        }),
        function(e) {
            e.Expand = "expand-logo",
            e.LargeTradeLogo = "large-trade-logo"
        }(i || (i = {}));
        const n = new Set([i.Expand, i.LargeTradeLogo])
    }
    ,
    793242: (e, t, o) => {
        "use strict";
        o.d(t, {
            MarketDialogContext: () => r,
            MarketDialogMode: () => i
        });
        var i, n = o(50959);
        !function(e) {
            e.Single = "single",
            e.Multi = "multi"
        }(i || (i = {}));
        const r = (0,
        n.createContext)(null)
    }
    ,
    35387: (e, t, o) => {
        "use strict";
        o.d(t, {
            entireWorldMarketsPreset: () => s,
            getMarketGroupNameMap: () => r,
            isMarketsPreset: () => l
        });
        var i = o(444372)
          , n = o(143517);
        const r = () => ({
            [n.MarketGroup.Custom]: "",
            [n.MarketGroup.EntireWorld]: "",
            [n.MarketGroup.NorthAmerica]: i.t(null, void 0, o(325381)),
            [n.MarketGroup.Europe]: i.t(null, void 0, o(546890)),
            [n.MarketGroup.MiddleEastAfrica]: i.t(null, void 0, o(850434)),
            [n.MarketGroup.MexicoSouthAmerica]: i.t(null, void 0, o(770306)),
            [n.MarketGroup.AsiaPacific]: i.t(null, void 0, o(4825)),
            [n.MarketGroup.Worldwide]: i.t(null, void 0, o(321684)),
            [n.MarketGroup.G20]: i.t(null, void 0, o(815636))
        })
          , s = e => ({
            value: "entire_world",
            name: i.t(null, void 0, o(537396)),
            desc: "",
            group: n.MarketGroup.Custom,
            countries: e ?? []
        });
        function l(e) {
            return e.group === n.MarketGroup.Custom && e.hasOwnProperty("countries")
        }
    }
    ,
    143517: (e, t, o) => {
        "use strict";
        var i;
        o.d(t, {
            MarketGroup: () => i
        }),
        function(e) {
            e.Custom = "Custom",
            e.EntireWorld = "Entire World",
            e.NorthAmerica = "North America",
            e.Europe = "Europe",
            e.MiddleEastAfrica = "Middle East / Africa",
            e.MexicoSouthAmerica = "Mexico and South America",
            e.AsiaPacific = "Asia / Pacific",
            e.Worldwide = "Worldwide",
            e.G20 = "G20"
        }(i || (i = {}))
    }
    ,
    67905: (e, t, o) => {
        "use strict";
        function i(e) {
            const t = new Map;
            return e.forEach((e => {
                t.has(e.group) ? t.get(e.group).push(e) : t.set(e.group, [e])
            }
            )),
            t
        }
        function n(e, t) {
            return t.map((t => e.find((e => e.value === t)))).filter((e => Boolean(e)))
        }
        function r(e, t=2) {
            if (0 === e.length)
                return [];
            if (1 === t)
                return [e];
            const o = Math.floor(e.length / 2) + e.length % 2;
            return [e.slice(0, o), e.slice(o)].filter((e => e.length > 0))
        }
        o.d(t, {
            createGroupColumns: () => r,
            getMarketsByNames: () => n,
            splitMarketsByGroup: () => i
        })
    }
    ,
    556306: (e, t, o) => {
        "use strict";
        o.d(t, {
            getLocaleToMarketMap: () => r
        });
        var i = o(696250);
        let n = null;
        function r() {
            return n || (n = Object.entries((0,
            i.getScreenerCountriesMap)()).reduce(( (e, [t,o]) => {
                if (!o.screenerName)
                    return e;
                return e[o.tvLocale || t] = o.screenerName,
                e
            }
            ), {}),
            n)
        }
    }
    ,
    85436: (e, t, o) => {
        "use strict";
        o.d(t, {
            getMarketByLocale: () => r
        });
        var i = o(556306);
        const n = o(893125).StockMarket.America;
        function r(e) {
            const t = e || window.locale;
            return t && (0,
            i.getLocaleToMarketMap)()[t] || n
        }
    }
    ,
    696250: (e, t, o) => {
        "use strict";
        o.d(t, {
            getScreenerCountriesMap: () => s
        });
        var i = o(196048)
          , n = o(320880);
        let r = null;
        function s() {
            if (r)
                return r;
            r = {};
            for (const e of n)
                if (i.countries.hasOwnProperty(e)) {
                    const t = i.countries[e]
                      , o = t.screenerName
                      , n = t.exchangesStocks || [];
                    r[e] = {
                        ...t,
                        screenerName: o,
                        exchangesStocks: n,
                        group: t.group
                    }
                }
            return r
        }
    }
    ,
    893125: (e, t, o) => {
        "use strict";
        var i, n, r;
        o.d(t, {
            GlobalMarket: () => r,
            NonStockMarket: () => n,
            StockMarket: () => i,
            getBondMarket: () => s
        }),
        function(e) {
            e.America = "america",
            e.Argentina = "argentina",
            e.Australia = "australia",
            e.Austria = "austria",
            e.Bahrain = "bahrain",
            e.Bangladesh = "bangladesh",
            e.Belgium = "belgium",
            e.Brazil = "brazil",
            e.Canada = "canada",
            e.Chile = "chile",
            e.China = "china",
            e.Colombia = "colombia",
            e.Cyprus = "cyprus",
            e.Czech = "czech",
            e.Denmark = "denmark",
            e.Egypt = "egypt",
            e.Estonia = "estonia",
            e.Finland = "finland",
            e.France = "france",
            e.Germany = "germany",
            e.Greece = "greece",
            e.HongKong = "hongkong",
            e.Hungary = "hungary",
            e.Iceland = "iceland",
            e.India = "india",
            e.Indonesia = "indonesia",
            e.Ireland = "ireland",
            e.Israel = "israel",
            e.Italy = "italy",
            e.Japan = "japan",
            e.Kenya = "kenya",
            e.Kuwait = "kuwait",
            e.Latvia = "latvia",
            e.Lithuania = "lithuania",
            e.Luxembourg = "luxembourg",
            e.Malaysia = "malaysia",
            e.Mexico = "mexico",
            e.Morocco = "morocco",
            e.Netherlands = "netherlands",
            e.NewZealand = "newzealand",
            e.Nigeria = "nigeria",
            e.Norway = "norway",
            e.Pakistan = "pakistan",
            e.Peru = "peru",
            e.Philippines = "philippines",
            e.Poland = "poland",
            e.Portugal = "portugal",
            e.Qatar = "qatar",
            e.Romania = "romania",
            e.Russia = "russia",
            e.SaudiArabia = "ksa",
            e.Serbia = "serbia",
            e.Singapore = "singapore",
            e.Slovakia = "slovakia",
            e.SouthAfrica = "rsa",
            e.SouthKorea = "korea",
            e.Spain = "spain",
            e.SriLanka = "srilanka",
            e.Sweden = "sweden",
            e.Switzerland = "switzerland",
            e.Taiwan = "taiwan",
            e.Thailand = "thailand",
            e.Tunisia = "tunisia",
            e.Turkey = "turkey",
            e.UAE = "uae",
            e.UK = "uk",
            e.Venezuela = "venezuela",
            e.Vietnam = "vietnam"
        }(i || (i = {})),
        function(e) {
            e.Forex = "forex",
            e.Crypto = "crypto",
            e.Coin = "coin",
            e.CFD = "cfd",
            e.Bonds = "bonds",
            e.Bond = "bond",
            e.Futures = "futures",
            e.Options = "options"
        }(n || (n = {})),
        function(e) {
            e.Global = "global"
        }(r || (r = {}));
        i.Belgium,
        i.Cyprus,
        i.Denmark,
        i.Estonia,
        i.Finland,
        i.France,
        i.Germany,
        i.Greece,
        i.Hungary,
        i.Iceland,
        i.Italy,
        i.Latvia,
        i.Lithuania,
        i.Luxembourg,
        i.Netherlands,
        i.Norway,
        i.Poland,
        i.Portugal,
        i.Romania,
        i.Russia,
        i.Serbia,
        i.Slovakia,
        i.Spain,
        i.Sweden,
        i.Switzerland,
        i.Turkey,
        i.UK,
        i.Belgium,
        i.Cyprus,
        i.Denmark,
        i.Estonia,
        i.Finland,
        i.France,
        i.Germany,
        i.Greece,
        i.Hungary,
        i.Italy,
        i.Latvia,
        i.Lithuania,
        i.Luxembourg,
        i.Netherlands,
        i.Poland,
        i.Portugal,
        i.Romania,
        i.Slovakia,
        i.Spain,
        i.Sweden;
        function s() {
            return [n.Bond]
        }
    }
    ,
    157234: (e, t, o) => {
        "use strict";
        function i() {
            return window.is_authenticated
        }
        o.d(t, {
            isGlobalScreenerAvailable: () => i
        })
    }
    ,
    740203: (e, t, o) => {
        "use strict";
        o.d(t, {
            createSelectableList: () => _
        });
        class i {
            constructor(e) {
                this._coll = e
            }
            getItemByIdx(e) {
                return this._coll.item(e)
            }
            getItems() {
                return Array.from(this._coll)
            }
            getFirstItem() {
                return this.getItemByIdx(0)
            }
            getLastItem() {
                const e = this._coll.length;
                return this.getItemByIdx(e - 1)
            }
            getItemIdx(e) {
                return Array.prototype.findIndex.call(this._coll, (t => t === e))
            }
            getLength() {
                return this._coll.length
            }
            contains(e) {
                return -1 !== this.getItemIdx(e)
            }
        }
        var n, r = o(799786);
        !function(e) {
            e[e.Prev = -1] = "Prev",
            e[e.Next = 1] = "Next"
        }(n || (n = {}));
        const s = "cursor";
        class l {
            constructor(e) {
                this._enableFocusDOMElement = !1,
                this._list = e.list,
                this._items = new i(this._list.getElementsByClassName(e.listItemClass)),
                this._focused = new i(this._list.getElementsByClassName(e.focusedListItemClass)),
                this._selected = new i(this._list.getElementsByClassName(e.selectedListItemClass)),
                this._cursor = new i(this._list.getElementsByClassName(s)),
                this._selectedListItemClass = e.selectedListItemClass,
                this._focusedListItemClass = e.focusedListItemClass,
                this._onSelect = e.onSelect,
                this._onNavigate = e.onNavigate,
                this._onConfirm = e.onConfirm,
                this._onDelete = e.onDelete,
                this._mouseActions = new Map,
                this._cyclicNavigationDisabled = Boolean(e.cyclicNavigationDisabled),
                this._enableFocusDOMElement = Boolean(e.enableFocusDOMElement),
                this.hotkeys = (0,
                r.createGroup)({
                    desc: "Selectable list"
                }),
                e.modes && e.modes.forEach((t => new t({
                    selection: this,
                    localHotkeyElement: this._list,
                    globalHotkeyElement: e.globalHotkeys ? null : this._list
                })))
            }
            selectItem(e) {
                e.classList.add(this._selectedListItemClass)
            }
            unselectItem(e) {
                e.classList.remove(this._selectedListItemClass)
            }
            visuallyFocusItem(e) {
                this.removeFocus(),
                e.classList.add(this._focusedListItemClass),
                this.setCursor(e)
            }
            focusItem(e) {
                this.visuallyFocusItem(e),
                this._enableFocusDOMElement && e instanceof HTMLElement && this._focusDOMElement(e)
            }
            getFocusedItemIdx() {
                const e = this._focused.getFirstItem();
                return e ? this._items.getItemIdx(e) : -1
            }
            getFocusedItem() {
                return this._focused.getFirstItem()
            }
            isSelected(e) {
                return this._selected.contains(e)
            }
            isFocused(e) {
                return this._focused.contains(e)
            }
            isListItem(e) {
                return this._items.contains(e)
            }
            removeSelections() {
                this._selected.getItems().forEach((e => e.classList.remove(this._selectedListItemClass)))
            }
            removeFocus() {
                this._focused.getItems().forEach((e => e.classList.remove(this._focusedListItemClass)))
            }
            move(e, t, o) {
                const i = e ? this._items.getItemIdx(e) : -1;
                let n;
                n = "number" == typeof t ? this._items.getItemByIdx(this._calcNextItemIdx(i, t)) : t,
                n && (o(n, e),
                this._scrollIfNotVisible(n))
            }
            getSelectedItems() {
                return this._selected.getItems()
            }
            getList() {
                return this._list
            }
            getItemsCollection() {
                return this._items
            }
            getSelectedCollection() {
                return this._selected
            }
            setCursor(e) {
                this.removeCursor(),
                e.classList.add(s)
            }
            removeCursor() {
                this._cursor.getItems().forEach((e => e.classList.remove(s)))
            }
            getCursorItem() {
                return this._cursor.getFirstItem()
            }
            getCursorItemIdx() {
                const e = this.getCursorItem();
                return e ? this._items.getItemIdx(e) : -1
            }
            onSelect(e, t) {
                this._onSelect && this._onSelect({
                    cursor: t,
                    items: this.getSelectedItems(),
                    action: e
                })
            }
            onNavigate(e, t) {
                this._onNavigate && this._onNavigate({
                    cursor: e,
                    cursorIdx: this.getCursorItemIdx(),
                    items: [e],
                    action: t
                })
            }
            onConfirm(e, t) {
                this._onConfirm && this._onConfirm({
                    cursor: e,
                    items: [e],
                    action: t
                })
            }
            onDelete(e, t, o) {
                this._onDelete && this._onDelete({
                    cursor: o,
                    items: e,
                    action: t
                })
            }
            registerMouseAction(e, t) {
                this._mouseActions.set(e, t)
            }
            dispatchMouseEvent(e, t) {
                const o = this._mouseActions.get(e);
                o && o(t)
            }
            delegateClick(e) {
                return t => {
                    if (!t.defaultPrevented) {
                        const o = this._list.contains(t.target);
                        let i = t.target;
                        for (; o && i !== this._list; ) {
                            if (i && this.isListItem(i))
                                return void e(i);
                            i = i && i.parentElement
                        }
                    }
                }
            }
            clear() {
                this.removeSelections(),
                this.removeFocus(),
                this.removeCursor()
            }
            destroy() {
                this.hotkeys.destroy(),
                delete this._list,
                delete this._items,
                delete this._selected,
                delete this._focused,
                delete this._cursor,
                delete this._mouseActions
            }
            _scrollIfNotVisible(e) {
                const t = this._list.getBoundingClientRect()
                  , o = e.getBoundingClientRect()
                  , i = t.top
                  , n = t.bottom
                  , r = o.top
                  , s = o.bottom;
                r < i ? this._list.scrollTop -= i - r : s > n && (this._list.scrollTop += s - n)
            }
            _calcNextItemIdx(e, t) {
                const o = this._items.getLength() - 1;
                let i = e + t;
                if (i < 0) {
                    if (this._cyclicNavigationDisabled)
                        return -1;
                    i = o
                }
                if (i > o) {
                    if (this._cyclicNavigationDisabled)
                        return -1;
                    i = 0
                }
                return i
            }
            _focusDOMElement(e) {
                e.focus()
            }
        }
        class a {
            constructor(e) {
                this._focusNext = () => {
                    if (!this._isValidNavigation())
                        return;
                    const e = this._selection.getCursorItem();
                    this._selection.move(e, n.Next, this._focusItem.bind(this, "down"))
                }
                ,
                this._focusPrev = () => {
                    if (!this._isValidNavigation())
                        return;
                    const e = this._selection.getCursorItem();
                    this._selection.move(e, n.Prev, this._focusItem.bind(this, "up"))
                }
                ,
                this._focusFirst = () => {
                    if (!this._isValidNavigation())
                        return;
                    const e = this._selection.getItemsCollection().getFirstItem()
                      , t = this._selection.getFocusedItem();
                    this._selection.move(t, e, this._focusItem.bind(this, "home"))
                }
                ,
                this._focusLast = () => {
                    if (!this._isValidNavigation())
                        return;
                    const e = this._selection.getItemsCollection().getLastItem()
                      , t = this._selection.getFocusedItem();
                    this._selection.move(t, e, this._focusItem.bind(this, "end"))
                }
                ,
                this._selection = e.selection,
                this._selection.registerMouseAction("click", this._selection.delegateClick(this._focusItem.bind(this, "click"))),
                this._selection.hotkeys.add({
                    desc: "Focus Previous",
                    hotkey: 38,
                    handler: this._focusPrev,
                    element: e.globalHotkeyElement,
                    isRepeatAccepted: !0
                }),
                this._selection.hotkeys.add({
                    desc: "Focus Next",
                    hotkey: 40,
                    handler: this._focusNext,
                    element: e.globalHotkeyElement,
                    isRepeatAccepted: !0
                }),
                this._selection.hotkeys.add({
                    desc: "Focus Previous",
                    hotkey: r.Modifiers.Shift + 32,
                    handler: this._focusPrev,
                    element: e.globalHotkeyElement,
                    isRepeatAccepted: !0
                }),
                this._selection.hotkeys.add({
                    desc: "Focus Next",
                    hotkey: 32,
                    handler: this._focusNext,
                    element: e.globalHotkeyElement,
                    isRepeatAccepted: !0
                }),
                this._selection.hotkeys.add({
                    desc: "Focus First",
                    hotkey: 36,
                    handler: this._focusFirst,
                    element: e.globalHotkeyElement
                }),
                this._selection.hotkeys.add({
                    desc: "Focus Last",
                    hotkey: 35,
                    handler: this._focusLast,
                    element: e.globalHotkeyElement
                })
            }
            _focusItem(e, t) {
                this._selection.removeSelections(),
                this._selection.focusItem(t),
                this._selection.setCursor(t),
                this._selection.selectItem(t),
                this._selection.onNavigate(t, e)
            }
            _isValidNavigation() {
                return document.activeElement === document.body || this._selection.getList().contains(document.activeElement)
            }
        }
        class c {
            constructor(e) {
                this._selection = e.selection,
                this._selection.hotkeys.add({
                    hotkey: r.Modifiers.Alt + 13,
                    handler: this._onItemKeyDown.bind(this, "alt+return"),
                    element: e.localHotkeyElement
                }),
                this._selection.hotkeys.add({
                    hotkey: r.Modifiers.Alt + r.Modifiers.Shift + 13,
                    handler: this._onItemKeyDown.bind(this, "alt+return"),
                    element: e.localHotkeyElement
                })
            }
            _onItemKeyDown(e, t) {
                const o = this._selection.getCursorItem();
                o && this._selection.onConfirm(o, e)
            }
        }
        class d {
            constructor(e) {
                this._selection = e.selection,
                this._selection.registerMouseAction("shift+click", this._selection.delegateClick(this._onItemClick.bind(this, "shift+click"))),
                this._selection.hotkeys.add({
                    desc: "Extend Selection Down",
                    hotkey: r.Modifiers.Shift + 40,
                    handler: this._nextRangeItem.bind(this, "shift+down"),
                    element: e.localHotkeyElement
                }),
                this._selection.hotkeys.add({
                    desc: "Extend Selection Up",
                    hotkey: r.Modifiers.Shift + 38,
                    handler: this._prevRangeItem.bind(this, "shift+up"),
                    element: e.localHotkeyElement
                })
            }
            _nextRangeItem(e) {
                const t = this._selection.getItemsCollection()
                  , o = this._selection.getCursorItem();
                this._selection.getCursorItemIdx() !== t.getLength() - 1 && this._selection.move(o, n.Next, this._addItemToRange(e, ( (e, t) => e < t)))
            }
            _prevRangeItem(e) {
                const t = this._selection.getCursorItem();
                0 !== this._selection.getCursorItemIdx() && this._selection.move(t, n.Prev, this._addItemToRange(e, ( (e, t) => e > t)))
            }
            _onItemClick(e, t) {
                const o = this._selection.getItemsCollection().getItems()
                  , i = this._getRangeInfo(t);
                this._selection.removeSelections();
                for (let e = i.start; e <= i.end; e++)
                    this._selection.isSelected(o[e]) || this._selection.selectItem(o[e]);
                this._selection.setCursor(t),
                this._selection.onSelect(e, t)
            }
            _getRangeInfo(e) {
                const t = this._selection.getItemsCollection().getItemIdx(e)
                  , o = this._selection.getFocusedItemIdx()
                  , i = -1 !== o ? o : 0;
                return t > i ? {
                    start: i,
                    end: t
                } : {
                    start: t,
                    end: i
                }
            }
            _addItemToRange(e, t) {
                return (o, i) => {
                    const n = this._selection.getItemsCollection().getItemIdx(o)
                      , r = this._selection.getFocusedItemIdx();
                    0 === this._selection.getSelectedCollection().getLength() && i && this._selection.selectItem(i),
                    t(r, n) ? this._selection.selectItem(o) : i && this._selection.unselectItem(i),
                    this._selection.setCursor(o),
                    this._selection.onSelect(e, o)
                }
            }
        }
        class u {
            constructor(e) {
                this._selection = e.selection,
                this._selection.registerMouseAction("ctrl+click", this._selection.delegateClick(this._onItemClick.bind(this, "ctrl+click"))),
                this._selection.registerMouseAction("meta+click", this._selection.delegateClick(this._onItemClick.bind(this, "meta+click"))),
                this._selection.hotkeys.add({
                    hotkey: r.Modifiers.Mod + 65,
                    handler: this._selectAll.bind(this, "ctrl+a"),
                    element: e.localHotkeyElement
                }),
                this._selection.hotkeys.add({
                    hotkey: 27,
                    handler: this._unselectAll.bind(this, "esc"),
                    element: e.localHotkeyElement
                })
            }
            _onItemClick(e, t) {
                const o = this._selection.getFocusedItem()
                  , i = this._selection.getSelectedCollection().getLength();
                o && 0 === i && this._selection.selectItem(o),
                this._toggleSelection(t),
                this._selection.onSelect(e, t)
            }
            _toggleSelection(e) {
                this._selection.isSelected(e) ? this._selection.unselectItem(e) : this._selection.selectItem(e),
                this._selection.setCursor(e)
            }
            _selectAll(e) {
                this._selection.getItemsCollection().getItems().forEach((e => this._selection.selectItem(e))),
                this._selection.onSelect(e)
            }
            _unselectAll(e) {
                this._selection.removeSelections();
                const t = this._selection.getFocusedItem();
                t && this._selection.setCursor(t),
                this._selection.onSelect(e)
            }
        }
        class h {
            constructor(e) {
                this._selection = e.selection,
                this._selection.hotkeys.add({
                    desc: "Delete",
                    hotkey: 46,
                    handler: this._delete.bind(this, "del"),
                    element: e.globalHotkeyElement
                })
            }
            _delete(e) {
                const t = this._selection.getSelectedItems()
                  , o = this._selection.getCursorItem();
                o && t.length > 0 ? this._selection.onDelete(t, e, o) : o && this._selection.onDelete([o], e, o)
            }
        }
        var p = o(638456);
        class m {
            constructor(e) {
                this._dispatchClick = e => {
                    e.ctrlKey && !(0,
                    p.isMac)() ? this._selection.dispatchMouseEvent("ctrl+click", e) : e.shiftKey ? this._selection.dispatchMouseEvent("shift+click", e) : e.metaKey && (0,
                    p.isMac)() ? this._selection.dispatchMouseEvent("meta+click", e) : this._selection.dispatchMouseEvent("click", e)
                }
                ,
                this._onSelect = e => {
                    this._collectKeys(),
                    this._opts.onSelect && this._opts.onSelect(e)
                }
                ,
                this._onNavigate = e => {
                    this._collectKeys(),
                    this._opts.onNavigate && this._opts.onNavigate(e)
                }
                ,
                this._disableSelection = () => {
                    this._list.onselectstart = () => !1
                }
                ,
                this._enableSelection = () => {
                    this._list.onselectstart = () => null
                }
                ,
                this._opts = e,
                this._list = e.list,
                this._selection = new l({
                    list: e.list,
                    listItemClass: e.listItemClass,
                    selectedListItemClass: e.selectedListItemClass,
                    focusedListItemClass: e.focusedListItemClass,
                    onSelect: this._onSelect,
                    onNavigate: this._onNavigate,
                    onConfirm: e.onConfirm,
                    onDelete: e.onDelete,
                    modes: e.modes,
                    globalHotkeys: Boolean(e.globalHotkeys),
                    cyclicNavigationDisabled: Boolean(e.cyclicNavigationDisabled),
                    enableFocusDOMElement: Boolean(e.enableFocusDOMElement)
                }),
                this._selectedKeys = [],
                this._focusedKey = null,
                this._cursorKey = null,
                this.activate(),
                this._collectKeys()
            }
            activate() {
                this._list.addEventListener("click", this._dispatchClick),
                this._list.addEventListener("keydown", this._disableSelection),
                this._list.addEventListener("keyup", this._enableSelection),
                this._selection.hotkeys.promote()
            }
            deactivate() {
                this._list.removeEventListener("click", this._dispatchClick),
                this._list.removeEventListener("keydown", this._disableSelection),
                this._list.removeEventListener("keyup", this._enableSelection)
            }
            focusItem(e) {
                this._isNotFocused(e) && (this._selection.removeSelections(),
                this._selection.focusItem(e))
            }
            visuallyFocusItem(e) {
                this._isNotFocused(e) && (this._selection.removeSelections(),
                this._selection.visuallyFocusItem(e),
                this._selection.selectItem(e))
            }
            removeFocus() {
                this._selection.removeFocus()
            }
            removeSelections() {
                this._selection.removeSelections()
            }
            restore() {
                if (this._opts.getNodeKey) {
                    const e = this._selection.getItemsCollection().getItems()
                      , t = this._opts.getNodeKey;
                    e.forEach((e => {
                        const o = t(e);
                        this._focusedKey === o && this._selection.focusItem(e),
                        this._cursorKey === o && this._selection.setCursor(e),
                        this._selectedKeys.includes(o) && this._selection.selectItem(e)
                    }
                    ))
                }
            }
            getSelectedKeys() {
                return this._collectKeys(),
                this._selectedKeys
            }
            getFocusedKey() {
                return this._collectKeys(),
                this._focusedKey || null
            }
            clear() {
                this._selection.clear()
            }
            destroy() {
                this.deactivate(),
                this._selection.destroy(),
                delete this._selection,
                delete this._list,
                delete this._opts
            }
            _collectKeys() {
                if (this._opts.getNodeKey) {
                    const e = this._opts.getNodeKey
                      , t = this._selection.getSelectedItems()
                      , o = this._selection.getFocusedItem()
                      , i = this._selection.getCursorItem();
                    this._selectedKeys = t.map((t => e(t))),
                    this._focusedKey = o ? e(o) : null,
                    this._cursorKey = i ? e(i) : null
                }
            }
            _isNotFocused(e) {
                return !this._selection.isSelected(e) && !this._selection.isFocused(e)
            }
        }
        function _(e) {
            return new m(Object.assign({}, {
                modes: [a, c, h, u, d]
            }, e))
        }
    }
    ,
    713438: (e, t, o) => {
        "use strict";
        o.d(t, {
            flagUrl: () => a,
            getMockedFlag: () => c
        });
        var i = o(61499)
          , n = o(849204)
          , r = o(701131)
          , s = o(899411);
        const l = {
            erl: "EU",
            uk: "GB",
            bitcoin: "BTC"
        };
        function a(e, t, o=n.LogoSize.Medium) {
            return e ? (e.toLowerCase()in l && (e = l[e]),
            (0,
            n.getLogoUrlResolver)().getCountryFlagUrl(e.toUpperCase(), o)) : c(t)
        }
        function c(e) {
            return e === i.StdTheme.Dark ? r : s
        }
    }
    ,
    531327: (e, t, o) => {
        "use strict";
        function i(e) {
            return n() ? 0 : r() ? 45 : Math.min(Math.max(e, 45), 450)
        }
        o.d(t, {
            getWidgetBarPadding: () => i
        });
        const n = () => !window.matchMedia("(min-width: 768px)").matches
          , r = () => !window.matchMedia("(min-width: 1280px)").matches
    }
    ,
    196048: (e, t, o) => {
        "use strict";
        o.d(t, {
            countries: () => r,
            getCountry: () => s
        });
        var i = o(159681)
          , n = o(158841);
        const r = n
          , s = e => (0,
        i.isCountryCodeLower)(e) && n[e] || null
    }
    ,
    159681: (e, t, o) => {
        "use strict";
        o.d(t, {
            isCountryCodeLower: () => n
        });
        const i = /^[a-z]{2}$/;
        function n(e) {
            return i.test(e)
        }
    }
    ,
    404573: (e, t, o) => {
        "use strict";
        o.d(t, {
            Draggable: () => r,
            PointerBackend: () => s
        });
        var i = o(650151)
          , n = o(318557);
        o(302539);
        class r {
            constructor(e) {
                this._helper = null,
                this._handleDragStart = e => {
                    if (null !== this._helper)
                        return;
                    const t = this._source;
                    t.classList.add("ui-draggable-dragging");
                    const [o,i] = [(0,
                    n.outerWidth)(t), (0,
                    n.outerHeight)(t)];
                    this._helper = {
                        startTop: parseFloat(t.style.top) || 0,
                        startLeft: parseFloat(t.style.left) || 0,
                        nextTop: null,
                        nextLeft: null,
                        raf: null,
                        size: [o, i],
                        containment: this._containment instanceof HTMLElement ? [parseInt(getComputedStyle(this._containment).borderLeftWidth) + parseInt(getComputedStyle(this._containment).paddingLeft), parseInt(getComputedStyle(this._containment).borderTopWidth) + parseInt(getComputedStyle(this._containment).paddingTop), this._containment.offsetWidth - parseInt(getComputedStyle(this._containment).borderRightWidth) - parseInt(getComputedStyle(this._containment).paddingRight) - parseInt(getComputedStyle(t).marginLeft) - parseInt(getComputedStyle(t).marginRight) - o, this._containment.offsetHeight - parseInt(getComputedStyle(this._containment).borderBottomWidth) - parseInt(getComputedStyle(this._containment).paddingBottom) - parseInt(getComputedStyle(t).marginTop) - parseInt(getComputedStyle(t).marginBottom) - i] : "window" === this._containment ? [window.scrollX, window.scrollY, window.scrollX + document.documentElement.offsetWidth - o, window.scrollY + document.documentElement.offsetHeight - i] : null
                    },
                    this._start?.()
                }
                ,
                this._handleDragMove = e => {
                    if (null === this._helper)
                        return;
                    const {current: t, initial: o} = e.detail
                      , i = this._source
                      , n = this._helper.nextTop
                      , r = this._helper.nextLeft
                      , s = "y" === this._axis || !1 === this._axis || 0 !== t.movementY;
                    if (s) {
                        const e = this._helper.startTop;
                        isFinite(e) && (this._helper.nextTop = t.clientY - o.clientY + e)
                    }
                    const l = "x" === this._axis || !1 === this._axis || 0 !== t.movementY;
                    if (l) {
                        const e = this._helper.startLeft;
                        isFinite(e) && (this._helper.nextLeft = t.clientX - o.clientX + e)
                    }
                    if (null !== this._helper.containment) {
                        const [e,t,o,i] = this._helper.containment;
                        s && this._helper.nextTop && (this._helper.nextTop = Math.min(this._helper.nextTop, i),
                        this._helper.nextTop = Math.max(this._helper.nextTop, t)),
                        l && this._helper.nextLeft && (this._helper.nextLeft = Math.min(this._helper.nextLeft, o),
                        this._helper.nextLeft = Math.max(this._helper.nextLeft, e))
                    }
                    null !== this._helper.raf || n === this._helper.nextTop && r === this._helper.nextLeft || (this._helper.raf = requestAnimationFrame(( () => {
                        null !== this._helper && (null !== this._helper.nextTop && (i.style.top = this._helper.nextTop + "px",
                        this._helper.nextTop = null),
                        null !== this._helper.nextLeft && (i.style.left = this._helper.nextLeft + "px",
                        this._helper.nextLeft = null),
                        this._helper.raf = null)
                    }
                    ))),
                    this._drag?.()
                }
                ,
                this._handleDragStop = e => {
                    if (null === this._helper)
                        return;
                    this._source.classList.remove("ui-draggable-dragging"),
                    this._helper = null,
                    this._stop?.()
                }
                ;
                const t = this._source = e.source;
                t.classList.add("ui-draggable");
                const o = this._handle = (e.handle ? t.querySelector(e.handle) : null) ?? t;
                o.classList.add("ui-draggable-handle"),
                this._start = e.start,
                this._stop = e.stop,
                this._drag = e.drag,
                this._backend = new s({
                    handle: o,
                    onDragStart: this._handleDragStart,
                    onDragMove: this._handleDragMove,
                    onDragStop: this._handleDragStop
                }),
                this._axis = e.axis ?? !1,
                this._containment = e.containment
            }
            destroy() {
                const e = this._source;
                e.classList.remove("ui-draggable"),
                e.classList.remove("ui-draggable-dragging");
                this._handle.classList.remove("ui-draggable-handle"),
                this._backend.destroy(),
                null !== this._helper && (this._helper.raf && cancelAnimationFrame(this._helper.raf),
                this._helper = null)
            }
        }
        class s {
            constructor(e) {
                this._pointerStarted = !1,
                this._initial = null,
                this._handlePointerDown = e => {
                    if (null !== this._initial || 0 !== e.button)
                        return;
                    if (!(e.target instanceof Element && this._handle.contains(e.target)))
                        return;
                    if (this._initial = e,
                    !this._distance && (this._pointerStart(),
                    !this._pointerStarted))
                        return;
                    e.preventDefault();
                    const t = this._getEventTarget();
                    t.addEventListener("pointermove", this._handlePointerMove),
                    t.addEventListener("pointerup", this._handlePointerUp),
                    t.addEventListener("pointercancel", this._handlePointerUp),
                    t.addEventListener("lostpointercapture", this._handleLostPointerCapture)
                }
                ,
                this._handleLostPointerCapture = e => {
                    this._getEventTarget() === e.target && this._handlePointerUp(e)
                }
                ,
                this._handlePointerMove = e => {
                    if (null !== this._initial && this._initial.pointerId === e.pointerId)
                        if (this._pointerStarted)
                            this._pointerDrag(e);
                        else if (this._pointerDistanceMet(e)) {
                            if (this._pointerStart(),
                            this._pointerStarted)
                                return void this._pointerDrag(e);
                            this._handlePointerUp(e)
                        }
                }
                ,
                this._handlePointerUp = e => {
                    if (null === this._initial || this._initial.pointerId !== e.pointerId)
                        return;
                    e.preventDefault();
                    const t = this._getEventTarget();
                    t.removeEventListener("pointermove", this._handlePointerMove),
                    t.removeEventListener("pointerup", this._handlePointerUp),
                    t.removeEventListener("pointercancel", this._handlePointerUp),
                    t.removeEventListener("lostpointercapture", this._handlePointerUp),
                    this._pointerStarted && (this._pointerStarted = !1,
                    t.releasePointerCapture(this._initial.pointerId),
                    this._dispatchEvent(this._createEvent("pointer-drag-stop", e))),
                    this._initial = null
                }
                ;
                const t = this._handle = e.handle;
                this._onDragStart = e.onDragStart,
                this._onDragMove = e.onDragMove,
                this._onDragStop = e.onDragStop,
                this._distance = e.distance ?? 0,
                this._rootElement = e.rootElement,
                t.style.touchAction = "none",
                t.addEventListener("pointerdown", this._handlePointerDown)
            }
            destroy() {
                const e = this._handle;
                e.style.touchAction = "",
                e.removeEventListener("pointerdown", this._handlePointerDown),
                e.removeEventListener("pointermove", this._handlePointerMove),
                e.removeEventListener("pointerup", this._handlePointerUp),
                e.removeEventListener("pointercancel", this._handlePointerUp),
                e.removeEventListener("lostpointercapture", this._handlePointerUp),
                null !== this._initial && (e.releasePointerCapture(this._initial.pointerId),
                this._initial = null),
                this._pointerStarted = !1
            }
            _pointerStart() {
                if (!this._initial)
                    return;
                const e = this._getEventTarget();
                this._dispatchEvent(this._createEvent("pointer-drag-start", this._initial)) ? (this._pointerStarted = !0,
                e.setPointerCapture(this._initial.pointerId)) : this._initial = null
            }
            _pointerDrag(e) {
                e.preventDefault(),
                this._dispatchEvent(this._createEvent("pointer-drag-move", e))
            }
            _pointerDistanceMet(e) {
                return !this._initial || !this._distance || Math.max(Math.abs(this._initial.clientX - e.clientX), Math.abs(this._initial.clientY - e.clientY)) >= this._distance
            }
            _getEventTarget() {
                return this._rootElement ?? this._handle
            }
            _dispatchEvent(e) {
                switch (e.type) {
                case "pointer-drag-start":
                    this._onDragStart(e);
                    break;
                case "pointer-drag-move":
                    this._onDragMove(e);
                    break;
                case "pointer-drag-stop":
                    this._onDragStop(e)
                }
                return !e.defaultPrevented
            }
            _createEvent(e, t) {
                return (0,
                i.assert)(null !== this._initial),
                new CustomEvent(e,{
                    bubbles: !0,
                    cancelable: !0,
                    detail: {
                        backend: this,
                        initial: this._initial,
                        current: t
                    }
                })
            }
        }
    }
    ,
    66974: (e, t, o) => {
        "use strict";
        o.r(t),
        o.d(t, {
            environment: () => n,
            isDebug: () => l,
            isLocal: () => r,
            isProd: () => s
        });
        const i = new Set(["battle", "staging", "test", "local"]);
        function n() {
            const e = self.environment;
            return function(e) {
                i.has(e) || console.warn("Invalid environment " + e)
            }(e),
            e
        }
        function r() {
            return "local" === n()
        }
        function s() {
            return "battle" === n()
        }
        function l() {
            return !s()
        }
    }
    ,
    746849: (e, t, o) => {
        "use strict";
        o.d(t, {
            checkIfExchangeAvailable: () => r,
            isUserNeedSignAgreement: () => n
        });
        o(142492);
        var i = o(406103);
        function n(e) {
            if (!(0,
            i.isIDCExchange)(e))
                return !1;
            e = s(e);
            const t = window.pro
              , o = t.getProduct(e);
            return void 0 !== o.idc_service_codes_delay && ((!Array.isArray(o.included_exchanges) || !o.included_exchanges.some((e => t.hasPackage(s(e))))) && !function(e) {
                const t = window.pro;
                return t.hasPackage(e) || t.hasPackage(e + "_dly")
            }(e))
        }
        function r(e) {
            const t = window.pro;
            return new Promise((o => {
                window.is_authenticated ? !t.getIDCExchanges(!0).length || t.isInvalidShopConf() ? t.updateShopConf().then(( () => {
                    o(!n(e))
                }
                )).catch(( () => {
                    o(!0)
                }
                )) : o(!n(e)) : o(!0)
            }
            ))
        }
        function s(e) {
            return e.startsWith("exchange-") ? e : "exchange-{0}".format(e.toLowerCase())
        }
    }
    ,
    406103: (e, t, o) => {
        "use strict";
        o.d(t, {
            isIDCExchange: () => n
        });
        var i = o(184026);
        function n(e, t=!1) {
            if (e && e.startsWith("exchange-"))
                return function(e, t=!1) {
                    const o = window.pro?.getProduct(e);
                    return !(void 0 === o || !(0,
                    i.isProductDefined)(o) || (t ? !o.idc_service_codes_delay : !o.idc_service_codes))
                }(e, t);
            const o = (e || "").toLowerCase();
            return window.pro?.getIDCExchanges(t)?.includes(o) ?? !1
        }
    }
    ,
    456335: (e, t, o) => {
        "use strict";
        o.d(t, {
            featureCheck: () => r
        });
        var i = o(778016);
        function n(e, t, o) {
            return t.value || (0,
            i.enabled)(e, o)
        }
        function r(e, t, o) {
            switch (e) {
            case "SCREENER_INTERVALS":
                return function(e, t) {
                    const o = (0,
                    i.getConfig)("SCREENER_INTERVALS", t);
                    return !(!o || !o.interval) && o.interval.includes(e.interval)
                }(t, o);
            case "SCREENER_AUTO_REFRESH":
                return n("SCREENER_AUTO_REFRESH", t, o);
            case "ALERTS_NO_EXPIRATION":
                return n("ALERTS_NO_EXPIRATION", t, o);
            default:
                return (0,
                i.enabled)(e, o)
            }
        }
    }
    ,
    31214: (e, t, o) => {
        "use strict";
        o.d(t, {
            reloginOrGoPro: () => c,
            runOrGoPro: () => a,
            runOrGoProWithoutSync: () => l
        });
        var i = o(526225)
          , n = o(707934)
          , r = o(456335)
          , s = o(678708);
        function l(e, t, o, i) {
            (0,
            r.featureCheck)(t, i) ? e() : (0,
            n.createGoProDialog)({
                ...o,
                runOrGoproWithFeatureCheckOptions: {
                    featureCheck: () => (0,
                    r.featureCheck)(t, i),
                    signInSuccess: e
                }
            })
        }
        async function a(e, t, o, n={}) {
            const r = window.is_authenticated;
            window.is_authenticated && window.user.is_pro && await (0,
            i.syncUserData)("gopro"),
            r === window.is_authenticated ? l(e, t, o, n) : (0,
            s.showSignModal)({
                source: o.goproSource,
                feature: o.feature,
                signinSuccess: e
            })
        }
        async function c(e) {
            const t = window.is_authenticated;
            window.is_authenticated && window.user.is_pro && await (0,
            i.syncUserData)("gopro"),
            t === window.is_authenticated ? (0,
            n.createGoProDialog)(e) : (0,
            s.showSignModal)({
                source: e.goproSource,
                feature: e.feature
            })
        }
    }
    ,
    532442: (e, t, o) => {
        "use strict";
        function i(e) {
            const [t,o,i] = function(e) {
                const t = e.toString();
                return [Number(t.slice(0, 4)), Number(t.slice(4, 6)), Number(t.slice(6))]
            }(e);
            return new Date(t,o - 1,i)
        }
        o.d(t, {
            getDateFromYYYYMMDD: () => i
        })
    }
    ,
    251954: (e, t, o) => {
        "use strict";
        o.d(t, {
            emit: () => c,
            emitOnce: () => d,
            subscribe: () => a,
            unsubscribe: () => l
        });
        var i = o(547465);
        const n = {}
          , r = []
          , s = {};
        function l(e, t, o) {
            n[e].unsubscribe(o, t)
        }
        function a(e, t, o, r) {
            n.hasOwnProperty(e) || (n[e] = new i.Delegate),
            s[e] ? t.call(o) : n[e].subscribe(o, t, r)
        }
        function c(e, ...t) {
            const o = [e].concat(t);
            r.forEach((e => {
                e.apply(null, o)
            }
            )),
            n.hasOwnProperty(e) && n[e].fire.apply(n[e], t)
        }
        function d(e) {
            s[e] && console.warn(`Something went wrong: emitOnce called multiple times with same event (${e})`),
            s[e] = !0,
            c.apply(null, arguments)
        }
    }
    ,
    625214: (e, t, o) => {
        "use strict";
        o.d(t, {
            linking: () => w
        });
        var i = o(290484)
          , n = o(650151)
          , r = o(735566)
          , s = o(820028)
          , l = (o(931924),
        o(477786))
          , a = o(388741)
          , c = o(68777)
          , d = o(900210);
        var u = o(62802)
          , h = o(588948)
          , p = o(17957)
          , m = o(388130)
          , _ = o(776734);
        var g = o(736800)
          , v = o(296538)
          , f = o(912445);
        const y = (0,
        r.getLogger)("Linking");
        class b {
            constructor(e, t, o) {
                this.watchedSymbols = new s.WatchedValue([]),
                this.watchedSymbol = new s.WatchedValue,
                this.seriesShortSymbol = new s.WatchedValue,
                this.proSymbol = new s.WatchedValue,
                this.ensuredProSymbol = new s.WatchedValue,
                this.watchedInterval = new s.WatchedValue,
                this.watchedIntraday = new s.WatchedValue,
                this.watchedSeconds = new s.WatchedValue,
                this.watchedTicks = new s.WatchedValue,
                this.watchedDataFrequencyResolution = new s.WatchedValue,
                this.watchedRange = new s.WatchedValue,
                this.watchedSupportedResolutions = new s.WatchedValue,
                this.watchedSupportedChartStyles = new s.WatchedValue,
                this.symbolNamesList = new s.WatchedValue,
                this._chartWidgetCollection = null,
                this._chartWidgetBindingState = 0,
                this._activeChartWidget = null,
                this._linkingGroupCharts = null,
                this._boundChartWidget = null,
                this._watchedSymbolListenerBound = this._watchedSymbolListener.bind(this),
                this._watchedIntervalListenerBound = this._watchedIntervalListener.bind(this),
                this._setGroupSymbolCancellationToken = {
                    cancelled: !1
                },
                this._muted = !1,
                this.updateBoundChartWidget = () => {
                    const e = this._chartToBind();
                    e !== this._boundChartWidget && (null === e ? this.unbindFromChartWidget() : this.bindToChartWidget(e))
                }
                ,
                this._updateAllGroupChartWidgets = () => {
                    this._destroySymbolIntervalPropertySubscriptions?.();
                    const e = (0,
                    n.ensureNotNull)(this._linkingGroupCharts).value()
                      , t = []
                      , o = [];
                    for (const i of e) {
                        const e = i.symbolWV().spawn()
                          , n = i.resolutionWV().spawn();
                        e.subscribe(this._updateSymbolByProperty.bind(this, i)),
                        n.subscribe(this._updateIntervalByProperty.bind(this, i)),
                        t.push(e),
                        o.push(n)
                    }
                    this._destroySymbolIntervalPropertySubscriptions = () => {
                        t.forEach((e => e.destroy())),
                        o.forEach((e => e.destroy())),
                        this._destroySymbolIntervalPropertySubscriptions = void 0
                    }
                    ;
                    const i = this.watchedSymbol.value();
                    e.length > 1 && this._needApplySymbol(i) && !this._muted && this._setGroupSymbol(i);
                    const r = this.watchedInterval.value();
                    e.length > 1 && this._needApplyInterval(r) && !this._muted && this._setGroupInterval(r),
                    this.updateBoundChartWidget()
                }
                ,
                this._groupIndex = e;
                const i = (e, t) => {
                    e.subscribe((e => {
                        o() === this && t.setValue(e)
                    }
                    ), {
                        callWithLast: !0
                    })
                }
                ;
                i(this.watchedSymbols, t.watchedSymbols),
                i(this.watchedSymbol, t.watchedSymbol),
                i(this.seriesShortSymbol, t.seriesShortSymbol),
                i(this.proSymbol, t.proSymbol),
                i(this.ensuredProSymbol, t.ensuredProSymbol),
                i(this.watchedInterval, t.watchedInterval),
                i(this.watchedIntraday, t.watchedIntraday),
                i(this.watchedSeconds, t.watchedSeconds),
                i(this.watchedTicks, t.watchedTicks),
                i(this.watchedDataFrequencyResolution, t.watchedDataFrequencyResolution),
                i(this.watchedRange, t.watchedRange),
                i(this.watchedSupportedResolutions, t.watchedSupportedResolutions),
                i(this.watchedSupportedChartStyles, t.watchedSupportedChartStyles),
                i(this.symbolNamesList, t.symbolNamesList),
                this.watchedSymbol.subscribe((e => {
                    this._boundChartWidget && this._boundChartWidget.hasModel() && this.mainSeries().symbolSameAsCurrent(e) || this.proSymbol.setValue(e)
                }
                ), {
                    callWithLast: !0
                })
            }
            mute(e) {
                this._muted = e
            }
            bindToChartWidgetCollection(e) {
                this.unbindFromChartWidgetCollection(),
                this._chartWidgetCollection = e,
                this._activeChartWidget = e.activeChartWidget.spawn(),
                this._activeChartWidget.subscribe(this.updateBoundChartWidget),
                this._linkingGroupCharts = e.linkingGroupsCharts(this._groupIndex).spawn(),
                this._linkingGroupCharts.subscribe(this._updateAllGroupChartWidgets),
                this.updateBoundChartWidget(),
                this._updateAllGroupChartWidgets();
                const t = function(e) {
                    const t = (0,
                    c.combine)(( () => e.getAll().filter((e => e.isVisible() && e.hasModel())).map((e => (0,
                    d.createWVFromGetterAndSubscription)(( () => e.model().mainSeries().symbol()), e.model().mainSeries().symbolResolved()).ownership()))), e.chartModels().weakReference(), e.layout.weakReference());
                    return (0,
                    c.accumulate)((e => e), t.ownership())
                }(e);
                t.subscribe((e => {
                    this.watchedSymbols.setValue(e)
                }
                )),
                this.watchedSymbols.setValue(t.value())
            }
            unbindFromChartWidgetCollection() {
                this.unbindFromChartWidget(),
                this._chartWidgetCollection = null,
                this._activeChartWidget?.destroy(),
                this._activeChartWidget = null,
                this._linkingGroupCharts?.destroy(),
                this._linkingGroupCharts = null,
                this._destroySymbolIntervalPropertySubscriptions?.()
            }
            bindToChartWidget(e) {
                if (this.unbindFromChartWidget(),
                this._boundChartWidget = e,
                e.hasModel())
                    return void this._onChartModelCreated(e.model());
                e.modelCreated().subscribe(this, this._onChartModelCreated, !0),
                this._chartWidgetBindingState = 1;
                const t = e.mainSeriesProperties().childs();
                this.watchedSymbol.setValue(t.symbol.value()),
                this.watchedInterval.setValue(t.interval.value()),
                this._boundChartWidget.linkingGroupIndex().subscribe(this.updateBoundChartWidget)
            }
            unbindFromChartWidget() {
                const e = this._boundChartWidget;
                if (null !== e) {
                    switch (this._chartWidgetBindingState) {
                    case 1:
                        e.modelCreated().unsubscribeAll(this);
                        break;
                    case 2:
                        this.watchedSymbol.unsubscribe(this._watchedSymbolListenerBound);
                        const t = this.mainSeries().dataEvents();
                        t.symbolResolved().unsubscribeAll(this),
                        t.symbolError().unsubscribeAll(this),
                        this.mainSeries().onIntervalChanged().unsubscribeAll(this),
                        this.watchedInterval.unsubscribe(this._watchedIntervalListenerBound),
                        delete this.watchedSymbol.writeLock
                    }
                    e.linkingGroupIndex().unsubscribe(this.updateBoundChartWidget),
                    this._boundChartWidget = null,
                    this._chartWidgetBindingState = 0
                }
            }
            boundChartWidget() {
                return this._boundChartWidget
            }
            mainSeries() {
                if (!this._boundChartWidget)
                    throw new Error("ChartWidget is undefined");
                return this._boundChartWidget.model().mainSeries()
            }
            _watchedSymbolListener(e) {
                this._needApplySymbol(e) && !this._muted && this._setGroupSymbol(e)
            }
            _updateSymbolByProperty(e, t) {
                const o = this._symbolLock();
                o && this._needApplySymbol(t) && !this._muted && this._setGroupSymbol(t),
                (o || e === this._boundChartWidget) && this.watchedSymbol.setValue(t)
            }
            _watchedIntervalListener(e) {
                const t = l.Interval.normalize(e);
                t && this._needApplyInterval(t) && !this._muted && this._setGroupInterval(t)
            }
            _updateIntervalByProperty(e, t) {
                const o = this._intervalLock()
                  , i = l.Interval.normalize(t);
                o && i && this._needApplyInterval(i) && !this._muted && this._setGroupInterval(i),
                (o || e === this._boundChartWidget) && this.watchedInterval.setValue(i ?? t)
            }
            _updateSeriesSymbolInfo() {
                this.seriesShortSymbol.setValue((0,
                n.ensureNotNull)(this._boundChartWidget).getSymbol(!0));
                const e = this.mainSeries().symbolInfo();
                if (e) {
                    const t = e.pro_name || !1;
                    this.proSymbol.setValue(t || this.watchedSymbol.value()),
                    this.ensuredProSymbol.setValue(this.proSymbol.value()),
                    e.aliases && this.symbolNamesList.setValue(e.aliases);
                    let o = (0,
                    v.allChartStyles)();
                    ((0,
                    a.isCloseBasedSymbol)(e) || this.mainSeries().intervalObj().value().is1Tick()) && (o = o.filter((e => (0,
                    a.isSingleValueBasedStyle)(e)))),
                    "hlc" === e.visible_plots_set && (o = o.filter((e => (0,
                    a.isHLCBasedStyle)(e) || (0,
                    a.isSingleValueBasedStyle)(e)))),
                    this.watchedSupportedChartStyles.setValue(o),
                    this.watchedIntraday.setValue(!!e.has_intraday),
                    this.watchedSeconds.setValue(!!e.has_seconds),
                    this.watchedTicks.setValue(!(0,
                    a.isCloseBasedSymbol)(e) && !!e["is-tickbars-available"]),
                    this.watchedRange.setValue(!(0,
                    a.isCloseBasedSymbol)(e));
                    const i = e.data_frequency ? e.data_frequency : void 0;
                    this.watchedDataFrequencyResolution.setValue(i)
                } else
                    this.watchedIntraday.setValue(!1),
                    this.watchedSeconds.setValue(!1),
                    this.watchedTicks.setValue(!1),
                    this.watchedRange.setValue(!1),
                    this.mainSeries().isFailed() && this.ensuredProSymbol.setValue(this.proSymbol.value())
            }
            _onChartModelCreated(e) {
                if (!this._boundChartWidget)
                    throw new Error("ChartWidget is undefined");
                this._chartWidgetBindingState = 2,
                this.watchedSymbol.setValue(this._boundChartWidget.symbolWV().value()),
                this.watchedSymbol.subscribe(this._watchedSymbolListenerBound);
                const t = e.mainSeries().dataEvents();
                t.symbolResolved().subscribe(this, this._updateSeriesSymbolInfo),
                t.symbolError().subscribe(this, this._updateSeriesSymbolInfo),
                e.mainSeries().onIntervalChanged().subscribe(this, this._updateSeriesSymbolInfo),
                this._updateSeriesSymbolInfo(),
                this.watchedInterval.setValue(this._boundChartWidget.resolutionWV().value()),
                this.watchedInterval.subscribe(this._watchedIntervalListenerBound),
                this._boundChartWidget.readOnly() && (this.watchedSymbol.writeLock = !0)
            }
            _chartToBind() {
                const e = this._chartWidgetCollection;
                return null === e ? null : e.activeChartWidget.value().linkingGroupIndex().value() === this._groupIndex ? e.activeChartWidget.value() : null !== this._boundChartWidget && this._boundChartWidget.linkingGroupIndex().value() === this._groupIndex ? this._boundChartWidget : e.getAll().find((e => e.linkingGroupIndex().value() === this._groupIndex)) ?? null
            }
            _symbolLock() {
                return !!this._chartWidgetCollection?.lock.symbol.value()
            }
            _intervalLock() {
                return !!this._chartWidgetCollection?.lock.interval.value()
            }
            _chartsForLock(e) {
                return (0 === e ? this._symbolLock() : this._intervalLock()) ? (0,
                n.ensureNotNull)(this._linkingGroupCharts).value() : this._boundChartWidget ? [this._boundChartWidget] : []
            }
            _setGroupSymbol(e) {
                this.mute(!0),
                this._setGroupSymbolCancellationToken.cancelled = !0;
                const t = this._setGroupSymbolCancellationToken = {
                    cancelled: !1
                };
                (0,
                n.ensureNotNull)(this._chartWidgetCollection).setSymbol(e, this._groupIndex, (0,
                n.ensureNotNull)(this._boundChartWidget)).finally(( () => {
                    if (this._boundChartWidget && !t.cancelled) {
                        const t = this._boundChartWidget.model().mainSeries();
                        t.symbolSameAsCurrent(e) || (this.watchedSymbol.setValue(t.symbol()),
                        this.proSymbol.setValue(t.proSymbol()))
                    }
                }
                )),
                this.mute(!1)
            }
            _needApplySymbol(e) {
                const t = this._chartsForLock(0)
                  , o = t.find((t => t.hasModel() && t.model().mainSeries().symbolInfo() && t.model().mainSeries().symbolSameAsResolved(e)));
                if (o) {
                    const e = o.model().mainSeries();
                    if (t.every((t => e.symbolSameAsResolved(t.symbolWV().value()))))
                        return !1
                }
                return t.some((t => t.symbolWV().value() !== e))
            }
            _setGroupInterval(e) {
                this.mute(!0),
                (0,
                n.ensureNotNull)(this._chartWidgetCollection).setResolution(e, this._groupIndex).finally(( () => {
                    if (this._boundChartWidget) {
                        const t = this._boundChartWidget.resolutionWV().value();
                        l.Interval.isEqual(t, e) || this.watchedInterval.setValue(t)
                    }
                }
                )),
                this.mute(!1)
            }
            _needApplyInterval(e) {
                return this._chartsForLock(1).some((t => !l.Interval.isEqual(t.resolutionWV().value(), e)))
            }
        }
        const w = new class {
            constructor() {
                this._watchedSymbols = new s.WatchedValue([]),
                this._watchedSymbol = new s.WatchedValue,
                this._seriesShortSymbol = new s.WatchedValue,
                this._proSymbol = new s.WatchedValue,
                this._ensuredProSymbol = new s.WatchedValue,
                this._watchedInterval = new s.WatchedValue,
                this._watchedIntraday = new s.WatchedValue,
                this._watchedSeconds = new s.WatchedValue,
                this._watchedTicks = new s.WatchedValue,
                this._watchedDataFrequencyResolution = new s.WatchedValue,
                this._watchedRange = new s.WatchedValue,
                this._watchedSupportedResolutions = new s.WatchedValue,
                this._watchedSupportedChartStyles = new s.WatchedValue([]),
                this._symbolNamesList = new s.WatchedValue,
                this._chartWidgetCollection = null,
                this._onSymbolLinkBound = this._onSymbolLink.bind(this),
                this._searchCharts = null,
                this._searchChartsLoadDebounced = null,
                this._selfEmit = !1,
                this._preventFeedBySymbol = !1,
                this._feedBySymbolDebounceCounter = 0,
                this._linkingGroups = new Map,
                this._activeLinkingGroup = new s.WatchedValue,
                this._activeLinkingGroupIndex = null,
                this._updateLinkingGroups = () => {
                    (0,
                    n.ensureNotNull)(this._chartWidgetCollection).allLinkingGroups().value().forEach((e => this._linkingGroup(e))),
                    this._linkingGroups.forEach((e => e.updateBoundChartWidget()))
                }
                ,
                this._activeLinkingGroup.setValue(this._linkingGroup(null));
                const e = (e, t) => {
                    e.subscribe((e => t().setValue(e)), {
                        callWithLast: !0
                    })
                }
                ;
                e(this._watchedSymbols, ( () => this._activeLinkingGroup.value().watchedSymbols)),
                e(this._watchedSymbol, ( () => this._activeLinkingGroup.value().watchedSymbol)),
                e(this._seriesShortSymbol, ( () => this._activeLinkingGroup.value().seriesShortSymbol)),
                e(this._proSymbol, ( () => this._activeLinkingGroup.value().proSymbol)),
                e(this._ensuredProSymbol, ( () => this._activeLinkingGroup.value().ensuredProSymbol)),
                e(this._watchedInterval, ( () => this._activeLinkingGroup.value().watchedInterval)),
                e(this._watchedIntraday, ( () => this._activeLinkingGroup.value().watchedIntraday)),
                e(this._watchedSeconds, ( () => this._activeLinkingGroup.value().watchedSeconds)),
                e(this._watchedTicks, ( () => this._activeLinkingGroup.value().watchedTicks)),
                e(this._watchedDataFrequencyResolution, ( () => this._activeLinkingGroup.value().watchedDataFrequencyResolution)),
                e(this._watchedRange, ( () => this._activeLinkingGroup.value().watchedRange)),
                e(this._watchedSupportedResolutions, ( () => this._activeLinkingGroup.value().watchedSupportedResolutions)),
                e(this._watchedSupportedChartStyles, ( () => this._activeLinkingGroup.value().watchedSupportedChartStyles)),
                e(this._symbolNamesList, ( () => this._activeLinkingGroup.value().symbolNamesList));
                const t = e => {
                    this._watchedSymbol.setValue(e.watchedSymbol.value()),
                    this._seriesShortSymbol.setValue(e.seriesShortSymbol.value()),
                    this._proSymbol.setValue(e.proSymbol.value()),
                    this._ensuredProSymbol.setValue(e.ensuredProSymbol.value()),
                    this._watchedInterval.setValue(e.watchedInterval.value()),
                    this._watchedIntraday.setValue(e.watchedIntraday.value()),
                    this._watchedSeconds.setValue(e.watchedSeconds.value()),
                    this._watchedTicks.setValue(e.watchedTicks.value()),
                    this._watchedDataFrequencyResolution.setValue(e.watchedDataFrequencyResolution.value()),
                    this._watchedRange.setValue(e.watchedRange.value()),
                    this._watchedSupportedResolutions.setValue(e.watchedSupportedResolutions.value()),
                    this._watchedSupportedChartStyles.setValue(e.watchedSupportedChartStyles.value()),
                    this._symbolNamesList.setValue(e.symbolNamesList.value())
                }
                ;
                this._activeLinkingGroup.subscribe(t),
                t(this._activeLinkingGroup.value()),
                (0,
                f.setMuteLinkingGroup)(( (e, t) => {
                    this._linkingGroup(e).mute(t)
                }
                ))
            }
            get symbols() {
                return this._watchedSymbols
            }
            get symbol() {
                return this._watchedSymbol
            }
            get proSymbol() {
                return this._proSymbol.readonly()
            }
            get ensuredProSymbol() {
                return this._ensuredProSymbol.readonly()
            }
            get symbolNamesList() {
                return this._symbolNamesList.readonly()
            }
            get seriesShortSymbol() {
                return this._seriesShortSymbol.readonly()
            }
            get interval() {
                return this._watchedInterval
            }
            get intraday() {
                return this._watchedIntraday.readonly()
            }
            get seconds() {
                return this._watchedSeconds.readonly()
            }
            get ticks() {
                return this._watchedTicks.readonly()
            }
            get range() {
                return this._watchedRange.readonly()
            }
            get supportedResolutions() {
                return this._watchedSupportedResolutions.readonly()
            }
            get supportedChartStyles() {
                return this._watchedSupportedChartStyles.readonly()
            }
            get preventFeedBySymbol() {
                return this._preventFeedBySymbol
            }
            get dataFrequencyResolution() {
                return this._watchedDataFrequencyResolution.readonly()
            }
            activeLinkingGroup() {
                return this._activeLinkingGroup.readonly()
            }
            getChartWidget() {
                return this.activeLinkingGroup().value().boundChartWidget()
            }
            bindToChartWidgetCollection(e) {
                this._chartWidgetCollection?.onAboutToBeDestroyed.unsubscribeAll(this),
                this._unbindFromChartWidgetCollection(),
                this._chartWidgetCollection = e,
                this._chartWidgetCollection.onAboutToBeDestroyed.subscribe(this, this._unbindFromChartWidgetCollection),
                this._chartWidgetCollection.allLinkingGroups().subscribe(this._updateLinkingGroups),
                this._updateLinkingGroups(),
                this._activeLinkingGroupIndex = e.activeLinkingGroup().spawn(),
                this._activeLinkingGroupIndex.subscribe((e => {
                    this._activeLinkingGroup.setValue(this._linkingGroup(e))
                }
                ), {
                    callWithLast: !0
                }),
                this._linkingGroups.forEach((t => t.bindToChartWidgetCollection(e)))
            }
            bindToSearchCharts(e) {
                this.unbindFromSearchCharts(),
                this._searchCharts = e,
                e.onSearchBySymbol.subscribe(this, this._onSearchBySymbol),
                e.loadingSymbol.subscribe((e => {
                    !1 === e && (this._feedBySymbolDebounceCounter = 0)
                }
                )),
                this._watchedSymbol.subscribe(this._onSymbolLinkBound)
            }
            unbindFromSearchCharts() {
                this._searchCharts && (this._searchCharts.onSearchBySymbol.unsubscribe(this, this._onSearchBySymbol),
                this._watchedSymbol.unsubscribe(this._onSymbolLinkBound),
                this._searchCharts = null)
            }
            setPreventFeedBySymbol(e) {
                this._preventFeedBySymbol = e
            }
            setSymbolAndLogInitiator(e, t, o, i=!1) {
                var n, r, s, l;
                (this.symbol.value() !== e || o) && (y.logInfo(`Change linking symbol to ${e}, initiator: ${t}`),
                this.symbol.setValue(e, o),
                i || null === this._chartWidgetCollection || (n = this.activeLinkingGroup().value().mainSeries(),
                r = this._chartWidgetCollection.layout.value(),
                s = this._chartWidgetCollection.metaInfo.uid.value() || "",
                l = t,
                window.user.do_not_track || n.symbolResolvingActive().subscribe((e => {
                    if (e)
                        return;
                    const t = n.symbolInfo();
                    t && (0,
                    _.getTracker)().then((e => {
                        null !== e && e.trackChartSymbols({
                            symbolName: t.pro_name,
                            symbolType: t.type,
                            resolution: n.interval(),
                            layoutType: r,
                            chartId: s,
                            openSource: l,
                            platform: (0,
                            p.getPlatform)(),
                            isExpert: window.user.declared_status === m.UserStatus.Pro
                        })
                    }
                    ))
                }
                ), {
                    once: !0
                })))
            }
            setIntervalAndLogInitiator(e, t) {
                l.Interval.isEqual(this.interval.value(), e) || ((0,
                g.trackIntervalChanging)(e, t),
                this.interval.setValue(e))
            }
            _onSearchBySymbol(e) {
                if (!e.resolved_symbol)
                    throw new Error("no resolved_symbol");
                this._selfEmit = !0,
                this._watchedSymbol.setValue(e.resolved_symbol),
                this._selfEmit = !1
            }
            _onSymbolLink(e) {
                if (!this._selfEmit) {
                    if (!this._searchCharts) {
                        const e = "No search charts defined";
                        throw y.logError(e),
                        new Error(e)
                    }
                    this._preventFeedBySymbol || this._loadSearchCharts(e)
                }
            }
            _loadSearchCharts(e) {
                if (!this._searchCharts) {
                    const e = "No search charts defined";
                    throw y.logError(e),
                    new Error(e)
                }
                if (this._searchChartsLoadDebounced)
                    return void (this._feedBySymbolDebounceCounter < 100 && (this._feedBySymbolDebounceCounter++,
                    this._searchChartsLoadDebounced(e)));
                const t = e => this._searchCharts ? (!0 === this._searchCharts.loadingSymbol.value() ? this._feedBySymbolDebounceCounter < 100 && (this._feedBySymbolDebounceCounter++,
                this._searchChartsLoadDebounced = (0,
                i.default)(t, 2e3),
                this._searchChartsLoadDebounced(e)) : this._searchChartsLoadDebounced = null,
                this._searchCharts.feedBySymbol.call(this._searchCharts, e)) : () => {}
                ;
                !0 === this._searchCharts.loadingSymbol.value() ? this._feedBySymbolDebounceCounter < 100 && (this._feedBySymbolDebounceCounter++,
                this._searchChartsLoadDebounced = (0,
                i.default)(t, 2e3),
                this._searchChartsLoadDebounced(e)) : this._searchCharts.feedBySymbol(e)
            }
            _linkingGroup(e) {
                let t = this._linkingGroups.get(e);
                if (void 0 === t) {
                    const o = {
                        watchedSymbols: this._watchedSymbols,
                        watchedSymbol: this._watchedSymbol,
                        seriesShortSymbol: this._seriesShortSymbol,
                        proSymbol: this._proSymbol,
                        ensuredProSymbol: this._ensuredProSymbol,
                        watchedInterval: this._watchedInterval,
                        watchedIntraday: this._watchedIntraday,
                        watchedSeconds: this._watchedSeconds,
                        watchedTicks: this._watchedTicks,
                        watchedDataFrequencyResolution: this._watchedDataFrequencyResolution,
                        watchedRange: this._watchedRange,
                        watchedSupportedResolutions: this._watchedSupportedResolutions,
                        watchedSupportedChartStyles: this._watchedSupportedChartStyles,
                        symbolNamesList: this._symbolNamesList
                    };
                    t = new b(e,o,( () => this._activeLinkingGroup.value())),
                    this._linkingGroups.set(e, t),
                    this._chartWidgetCollection && t.bindToChartWidgetCollection(this._chartWidgetCollection)
                }
                return t
            }
            _unbindFromChartWidgetCollection() {
                null !== this._chartWidgetCollection && (this._activeLinkingGroupIndex?.destroy(),
                this._activeLinkingGroupIndex = null,
                this._linkingGroups.forEach((e => e.unbindFromChartWidgetCollection())),
                this._chartWidgetCollection.allLinkingGroups().unsubscribe(this._updateLinkingGroups),
                this._chartWidgetCollection = null)
            }
        }
        ;
        {
            const e = (0,
            h.getFreshInitData)().symbolInfo
              , t = e ? e.pro_symbol : u.getValue("editchart.model.symbol", window.DEFAULT_SYMBOL);
            w.setSymbolAndLogInitiator(t, "initial data", !1, !0)
        }
        window.TradingViewApi || (window.TradingViewApi = {
            linking: w
        })
    }
    ,
    849204: (e, t, o) => {
        "use strict";
        o.d(t, {
            LogoSize: () => i,
            getLogoUrlResolver: () => a
        });
        var i, n = o(650151), r = o(588948);
        !function(e) {
            e[e.Medium = 0] = "Medium",
            e[e.Large = 1] = "Large"
        }(i || (i = {}));
        class s {
            constructor(e) {
                (0,
                n.assert)("" !== e, "S3 base url must be a non-empty string"),
                this._baseUrl = e
            }
            getSymbolLogoUrl(e, t) {
                switch ((0,
                n.assert)("" !== e, "logo id must be a non-empty string"),
                t) {
                case i.Medium:
                    return this._baseUrl + `${e}.svg`;
                case i.Large:
                    return this._baseUrl + `${e}--big.svg`
                }
            }
            collectSymbolLogoUrls(e, t) {
                const {logoId: o, baseCurrencyLogoId: i, currencyLogoId: n, dexCurrencyLogoId: r} = e;
                if (o)
                    return [this.getSymbolLogoUrl(o, t)];
                const s = [];
                if (i && s.push(this.getSymbolLogoUrl(i, t)),
                r ? s.push(this.getSymbolLogoUrl(r, t)) : n && s.push(this.getSymbolLogoUrl(n, t)),
                s.length < 2)
                    return s;
                const l = s.some(c)
                  , a = s.every((e => !e.includes("country") || c(e)));
                return l && a ? s.filter((e => !c(e))) : s;
                function c(e) {
                    return e.includes("country/US")
                }
            }
            getCountryFlagUrl(e, t) {
                return this.getSymbolLogoUrl("country/" + e, t)
            }
            getCryptoLogoUrl(e, t) {
                return this.getSymbolLogoUrl("crypto/" + e, t)
            }
            getProviderLogoUrl(e, t) {
                return this.getSymbolLogoUrl("provider/" + e, t)
            }
            getSourceLogoUrl(e, t) {
                return this.getSymbolLogoUrl("source/" + e, t)
            }
            getBlockchainContractLogoUrl(e, t) {
                return this.getSymbolLogoUrl("blockchain/" + e, t)
            }
        }
        let l;
        function a() {
            return function() {
                if (!l) {
                    const e = (0,
                    r.getInitData)()
                      , t = e.settings ? e.settings.S3_LOGO_SERVICE_BASE_URL : "";
                    l = new s(t)
                }
                return l
            }()
        }
    }
    ,
    207678: (e, t, o) => {
        "use strict";
        o.d(t, {
            breakpoints: () => i,
            mobileFirstBreakpoints: () => n,
            mobileFirstLegacyBreakpoints: () => r
        });
        const i = {
            desktop: 1 / 0,
            desktopHd: 1919,
            phone: 767,
            "phone-vertical": 479,
            tablet: 1019
        }
          , n = {
            base: 0,
            "media-mf-phone-vertical": 320,
            "media-mf-phone-landscape": 568,
            "media-mf-tablet-vertical": 768,
            "media-mf-tablet-landscape": 1024,
            "media-mf-laptop": 1280,
            "media-mf-desktop-medium": 1440,
            "media-mf-desktop-large": 1920,
            "media-mf-desktop-extra-large": 2560
        }
          , r = {
            "media-mf-legacy-phone-vertical": 330,
            "media-mf-legacy-phone": 480,
            "media-mf-legacy-notebook": 1020,
            "media-mf-legacy-desktop-medium": 1480,
            "media-mf-legacy-desktop": 1531
        }
    }
    ,
    76107: (e, t, o) => {
        "use strict";
        o.d(t, {
            getCSSProperty: () => l,
            getCSSPropertyNumericValue: () => a,
            getContentWidth: () => r,
            getScrollbarWidth: () => i,
            matchMediaMinMax: () => n,
            setStyle: () => s
        });
        const i = ( () => {
            let e;
            return () => {
                if (void 0 === e) {
                    const t = document.createElement("div")
                      , o = t.style;
                    o.visibility = "hidden",
                    o.width = "100px",
                    o.msOverflowStyle = "scrollbar",
                    document.body.appendChild(t);
                    const i = t.offsetWidth;
                    t.style.overflow = "scroll";
                    const n = document.createElement("div");
                    n.style.width = "100%",
                    t.appendChild(n);
                    const r = n.offsetWidth;
                    t.parentNode?.removeChild(t),
                    e = i - r
                }
                return e
            }
        }
        )();
        function n(e, t) {
            return t === 1 / 0 ? window.matchMedia(`(min-width: ${e}px)`) : window.matchMedia(`(min-width: ${e}px) and (max-width: ${t}px)`)
        }
        function r(e) {
            return a(e, "width") - a(e, "padding-left") - a(e, "padding-right")
        }
        function s(e, t, o) {
            null !== e && e.style.setProperty(t, o)
        }
        function l(e, t) {
            return getComputedStyle(e, null).getPropertyValue(t)
        }
        function a(e, t) {
            return parseInt(l(e, t))
        }
    }
    ,
    575658: (e, t, o) => {
        "use strict";
        o.d(t, {
            setFixedBodyState: () => l
        });
        var i = o(76107)
          , n = o(531327);
        let r = 0
          , s = !1;
        function l(e) {
            const {body: t} = document
              , o = t.querySelector(".widgetbar-wrap");
            if (e && 1 == ++r) {
                const e = (0,
                i.getCSSProperty)(t, "overflow")
                  , n = (0,
                i.getCSSPropertyNumericValue)(t, "padding-right");
                "hidden" !== e.toLowerCase() && t.scrollHeight > t.offsetHeight && ((0,
                i.setStyle)(o, "right", `${(0,
                i.getScrollbarWidth)()}px`),
                t.style.paddingRight = `${n + (0,
                i.getScrollbarWidth)()}px`,
                s = !0),
                t.classList.add("i-no-scroll")
            } else if (!e && r > 0 && 0 == --r && (t.classList.remove("i-no-scroll"),
            s)) {
                (0,
                i.setStyle)(o, "right", "0px");
                let e = 0;
                e = o ? (0,
                n.getWidgetBarPadding)((0,
                i.getContentWidth)(o)) : 0,
                t.scrollHeight <= t.clientHeight && (e -= (0,
                i.getScrollbarWidth)()),
                t.style.paddingRight = (e < 0 ? 0 : e) + "px",
                s = !1
            }
        }
    }
    ,
    912445: (e, t, o) => {
        "use strict";
        let i;
        function n(e, t) {
            i?.(e, t)
        }
        function r(e) {
            i = e
        }
        o.d(t, {
            muteLinkingGroup: () => n,
            setMuteLinkingGroup: () => r
        })
    }
    ,
    631456: (e, t, o) => {
        "use strict";
        o.r(t),
        o.d(t, {
            createReactRoot: () => l
        });
        var i = o(50959)
          , n = o(632227)
          , r = o(904237)
          , s = o(957114);
        function l(e, t, o="legacy") {
            const l = i.createElement(s.TVAppContextProvider, {
                renderMode: o
            }, e);
            if ("modern" === o) {
                const e = (0,
                r.createRoot)(t);
                return e.render(l),
                {
                    render(t) {
                        e.render(i.createElement(s.TVAppContextProvider, {
                            renderMode: o
                        }, t))
                    },
                    unmount() {
                        e.unmount()
                    }
                }
            }
            return n.render(l, t),
            {
                render(e) {
                    n.render(i.createElement(s.TVAppContextProvider, {
                        renderMode: o
                    }, e), t)
                },
                unmount() {
                    n.unmountComponentAtNode(t)
                }
            }
        }
    }
    ,
    318557: (e, t, o) => {
        "use strict";
        o.d(t, {
            contentHeight: () => n.contentHeight,
            outerHeight: () => n.outerHeight,
            outerWidth: () => n.outerWidth,
            position: () => s
        });
        var i = o(650151)
          , n = o(746326);
        function r(e) {
            if (!e.getClientRects().length)
                return {
                    top: 0,
                    left: 0
                };
            const t = e.getBoundingClientRect()
              , o = (0,
            i.ensureNotNull)(e.ownerDocument.defaultView);
            return {
                top: t.top + o.pageYOffset,
                left: t.left + o.pageXOffset
            }
        }
        function s(e) {
            const t = getComputedStyle(e);
            let o, i = {
                top: 0,
                left: 0
            };
            if ("fixed" === t.position)
                o = e.getBoundingClientRect();
            else {
                o = r(e);
                const t = e.ownerDocument;
                let n = e.offsetParent || t.documentElement;
                for (; n && (n === t.body || n === t.documentElement) && "static" === getComputedStyle(n).position; )
                    n = n.parentElement;
                n && n !== e && 1 === n.nodeType && (i = r(n),
                i.top += parseFloat(getComputedStyle(n).borderTopWidth),
                i.left += parseFloat(getComputedStyle(n).borderLeftWidth))
            }
            return {
                top: o.top - i.top - parseFloat(t.marginTop),
                left: o.left - i.left - parseFloat(t.marginLeft)
            }
        }
    }
    ,
    62802: (e, t, o) => {
        "use strict";
        o.r(t),
        o.d(t, {
            default: () => Z,
            getBool: () => L,
            getFloat: () => $,
            getInt: () => B,
            getJSON: () => D,
            getValue: () => I,
            keys: () => N,
            keysMask: () => W,
            loaded: () => K,
            loadedModel: () => Y,
            onSync: () => H,
            remove: () => P,
            setJSON: () => O,
            setSettingsAdapter: () => X,
            setValue: () => R,
            sync: () => G
        });
        var i = o(735566)
          , n = o(125226)
          , r = o(192784)
          , s = (o(638456),
        o(803912))
          , l = o(482030)
          , a = o(226722)
          , c = o(49437)
          , d = o(547465)
          , u = o(931924);
        window.TradingView = window.TradingView || {};
        const h = ["s.tradingview.com", "betacdn.tradingview.com"]
          , p = (u.enabled("use_localstorage_for_settings"),
        "local" === window.environment ? 5e3 : 12e4)
          , m = 10
          , _ = window.TradingView.onWidget?.() ? "tradingview-widget" : "tradingview"
          , g = _ + ".";
        let v, f, y, b = !1, w = null, S = {}, C = [];
        const k = [/^widgetbar\.widget\.watchlist.+/, /.+quicks$/, /^widgetbar\.layout-settings$/, /^ChartSideToolbarWidget\.visible$/, /^onwidget\.watchlist$/, /^chart\.favoriteDrawings$/, /^chart\.favoriteDrawingsPosition$/, /^chart\.favoriteLibraryIndicators$/, /^loadChartDialog.favorites$/, /^ChartFavoriteDrawingToolbarWidget\.visible/, /^trading\.chart\.proterty$/, /^trading_floating_toolbar\.position$/, /^trading\.orderWidgetMode\./, /^symbolWatermark$/, /^pinereference\.size$/, /^pinereference\.position$/, /^hint\.+/, /^ChartDrawingToolbarWidget\.visible/];
        const x = () => !(w || window.is_authenticated)
          , M = e => g + e
          , E = (0,
        i.getLogger)("Lib.TVSettings")
          , F = e => {
            if (b || y)
                return;
            if ((0,
            n.isFeatureEnabled)("disable_save_settings"))
                return void E?.logWarn("Settings flashing has been skipped because of disable_save_settings featuretoggle");
            if (u.enabled("widget"))
                return;
            if (x())
                return;
            if (0 === C.length)
                return;
            const t = C;
            C = [];
            const o = {};
            for (let e = t.length; e--; ) {
                const i = t[e];
                o[i] = S[i] ?? null
            }
            const i = new FormData;
            i.append("delta", JSON.stringify(o)),
            e && navigator.sendBeacon ? navigator.sendBeacon("/savesettings/", i) : (0,
            s.fetch)("/savesettings/", {
                method: "POST",
                credentials: "include",
                body: i
            }).then((o => {
                if (o.ok || (C = C.concat(t)),
                [429, 503].includes(o.status)) {
                    const t = 1e3 * +(o.headers.get("retry-after") || 0) || 3e5;
                    y = setTimeout(( () => {
                        y = void 0,
                        F(e)
                    }
                    ), t)
                }
            }
            )).catch(( () => {
                C = C.concat(t)
            }
            ))
        }
          , T = () => {
            v = void 0,
            C.length && F()
        }
          , A = (e, t={}) => {
            if (w)
                null == S[e] ? w.removeValue(e) : w.setValue(e, S[e]);
            else if (x())
                try {
                    null == S[e] ? c.TVLocalStorage.removeItem(M(e)) : c.TVLocalStorage.setItem(M(e), S[e])
                } catch (e) {}
            else
                C.push(e),
                v || (v = setTimeout(T, p));
            t.skipCrossWindowEvent || a.TVXWindowEvents.emit("settings", JSON.stringify({
                key: e,
                value: S[e]
            }))
        }
        ;
        function I(e, t) {
            const o = S[e];
            return o ?? t
        }
        function D(e, t) {
            const o = I(e);
            if (null == o)
                return t;
            try {
                return JSON.parse(o)
            } catch (o) {
                return P(e),
                t
            }
        }
        function P(e, t={}) {
            return null != S[e] && (delete S[e],
            A(e)),
            t.forceFlush && F(),
            J
        }
        function L(e, t) {
            const o = I(e);
            return null == o ? t : !(!o || "false" === o || 0 == +o)
        }
        function $(e, t) {
            const o = I(e);
            if (null == o)
                return t;
            const i = parseFloat(o);
            if (!isFinite(i))
                throw new TypeError('"' + o + '" is not float (key: "' + e + '")');
            return i
        }
        function B(e, t) {
            const o = I(e);
            if (null == o)
                return t;
            const i = parseInt(o, 10);
            if (!isFinite(i))
                throw new TypeError('"' + o + '" is not int (key: "' + e + '")');
            return i
        }
        function R(e, t, o={}) {
            const i = "" + t;
            return S[e] !== i && (S[e] = i,
            A(e, o)),
            o.forceFlush && !f && (f = setTimeout(( () => {
                f = void 0,
                F()
            }
            ), m)),
            J
        }
        function O(e, t, o) {
            return R(e, JSON.stringify(t), o),
            J
        }
        function N() {
            return Object.keys(S)
        }
        function W(e) {
            const t = N()
              , o = []
              , i = new RegExp("^" + (0,
            l.regExpEscape)(e).replace(/\\\*\\\*/gi, ".+").replace(/\\\*/gi, "[^.]+") + "$","gi");
            for (let e = t.length - 1; e >= 0; e--)
                i.test(t[e]) && o.push(t[e]),
                i.lastIndex = 0;
            return o
        }
        a.TVXWindowEvents.on("settings", (e => {
            const t = JSON.parse(e);
            null == t.value ? delete S[t.key] : S[t.key] = t.value
        }
        ));
        const V = e => {
            for (let t = 0; t < k.length; ++t)
                if (k[t].exec(e))
                    return !0;
            return !1
        }
          , q = e => e.substring(0, g.length) === g
          , z = () => {
            S = {};
            const e = !u.enabled("save_chart_properties_to_local_storage");
            for (let t = c.TVLocalStorage.length; t--; ) {
                const o = c.TVLocalStorage.key(t);
                if (!o || !q(o))
                    continue;
                const i = o.substring(g.length);
                e && !V(i) || (S[i] = c.TVLocalStorage.getItem(o))
            }
        }
          , U = e => {
            S = {};
            const t = 0 === Object.keys(e).length;
            t || (e => {
                Object.keys(e).forEach((t => {
                    S[t] = e[t] + ""
                }
                ))
            }
            )(e),
            (e => {
                for (let t = c.TVLocalStorage.length; t--; ) {
                    const o = c.TVLocalStorage.key(t);
                    o && q(o) && (e && R(o.substring(g.length), c.TVLocalStorage.getItem(o)),
                    c.TVLocalStorage.removeItem(o))
                }
            }
            )(t)
        }
          , j = () => {
            if (!window.TradingView.onWidget?.() || !h.includes(window.location.host))
                return;
            const e = "tradingview.";
            for (let t = c.TVLocalStorage.length; t--; ) {
                const o = c.TVLocalStorage.key(t);
                if (0 === o.indexOf(e)) {
                    const t = o.replace(e, _ + ".");
                    c.TVLocalStorage.setItem(t, c.TVLocalStorage.getItem(o)),
                    c.TVLocalStorage.removeItem(o)
                }
            }
        }
          , H = new d.Delegate;
        function G(e) {
            null !== e ? (w ? U(w.initialSettings || {}) : x() ? (j(),
            z()) : U(e || {}),
            H.fire()) : b = !0
        }
        function X(e) {
            w = e
        }
        const K = !1
          , Y = !1
          , J = {
            loaded: K,
            loadedModel: Y,
            getValue: I,
            getJSON: D,
            getBool: L,
            getFloat: $,
            getInt: B,
            setValue: R,
            setJSON: O,
            remove: P,
            keys: N,
            keysMask: W,
            sync: G,
            onSync: H,
            setSettingsAdapter: X
        }
          , Z = J;
        window.TVSettings = J,
        document.addEventListener("visibilitychange", ( () => {
            "hidden" !== document.visibilityState && !0 !== document.hidden || F()
        }
        )),
        window.addEventListener("pagehide", ( () => {
            F(!0)
        }
        )),
        window.addEventListener("beforeunload", ( () => {
            F(!0)
        }
        )),
        r.flushDelegate.subscribe(null, ( () => {
            F()
        }
        )),
        setTimeout((async () => {
            const {clearOldSettings: e} = await o.e(30362).then(o.bind(o, 276141));
            e()
        }
        ), 3e4)
    }
    ,
    776734: (e, t, o) => {
        "use strict";
        async function i() {
            if (!window.user || window.user.do_not_track)
                return null;
            {
                const e = (await Promise.all([o.e(73034), o.e(69374), o.e(24081)]).then(o.bind(o, 823623))).getTrackerInstance();
                return e || null
            }
        }
        o.d(t, {
            getTracker: () => i
        })
    }
    ,
    736800: (e, t, o) => {
        "use strict";
        o.d(t, {
            trackIntervalChanging: () => l
        });
        var i = o(584878)
          , n = o(776734)
          , r = o(147582);
        const s = "IntervalChanging";
        function l(e, t) {
            window.user.do_not_track || (0,
            i.shouldAffectUser)(s, r.sparseUsersTrackingCoefficient) && (0,
            n.getTracker)().then((o => {
                null !== o && o.trackChartIntervalChanging(e, t)
            }
            ))
        }
    }
    ,
    526225: (e, t, o) => {
        "use strict";
        o.d(t, {
            syncUserConversionData: () => h,
            syncUserData: () => u
        });
        var i = o(735566)
          , n = o(345848)
          , r = o(383913)
          , s = o(803912)
          , l = o(357173);
        const a = (0,
        i.getLogger)("User.Sync");
        function c(e) {
            return `${e}_${window.user && window.user.username || ""}`
        }
        function d(e) {
            const {source: t, isAuthenticated: o, proPlan: i, offers: s, fireLoginChange: l=!0} = e;
            i !== window.user.pro_plan && (window.user.pro_plan = i,
            window.user.is_pro = Boolean(i),
            (0,
            n.trackEvent)("Sync User Data", "Different Pro Plan", c(t))),
            o !== window.is_authenticated && (window.is_authenticated = o,
            l && window.loginStateChange.fire(),
            (0,
            n.trackEvent)("Sync User Data", "Different Auth", c(t))),
            s && r.availableOffers.setInitial(s)
        }
        async function u(e) {
            try {
                d({
                    source: e,
                    isAuthenticated: !0,
                    proPlan: (await (0,
                    l.getProPlanDetailsForUser)()).pro_plan
                })
            } catch (t) {
                !function(e, t) {
                    403 === t.status && ["not_authenticated", "login_required"].includes(t.type || "") ? d({
                        source: e,
                        isAuthenticated: !1,
                        proPlan: void 0
                    }) : a.logError(t.message)
                }(e, t)
            }
        }
        async function h(e, t=!0) {
            const o = new URL("/pricing/",window.location.origin)
              , i = new URLSearchParams(window.location.search);
            i.has("_test_country") && o.searchParams.append("_test_country", i.get("_test_country") ?? ""),
            o.searchParams.append("component-data-only", "1");
            const n = await (0,
            s.fetch)(o.href)
              , r = await n.json();
            return d({
                source: e,
                isAuthenticated: r.is_authenticated,
                proPlan: r.user.pro_plan,
                fireLoginChange: t,
                offers: r.user.available_offers
            }),
            r
        }
    }
    ,
    763532: (e, t, o) => {
        "use strict";
        o.d(t, {
            escapeCSVValue: () => a,
            saveTextFile: () => n
        });
        var i = o(638456);
        function n(e, t, o="text/plain") {
            const n = new Blob([t],{
                type: o
            });
            if (i.CheckMobile.iOS()) {
                const t = new FileReader;
                return t.onload = () => {
                    t.result && r(e, t.result.toString())
                }
                ,
                void t.readAsDataURL(n)
            }
            const s = window.URL.createObjectURL(n);
            navigator.msSaveOrOpenBlob ? navigator.msSaveOrOpenBlob(n, e) : window.navigator.msSaveBlob ? window.navigator.msSaveBlob(n, e) : (r(e, s),
            window.URL.revokeObjectURL(s))
        }
        function r(e, t) {
            const o = document.createElement("a");
            o.style.display = "none",
            document.body.appendChild(o),
            o.href = t,
            o.download = e,
            o.click(),
            document.body.removeChild(o)
        }
        const s = /[",\r\n]/
          , l = /"/g;
        function a(e) {
            return s.test(e) ? `"${e.replace(l, '""')}"` : e
        }
    }
    ,
    626333: (e, t, o) => {
        "use strict";
        function i(e, t=window) {
            const o = "theme-" + e
              , i = t.document.documentElement.classList;
            for (const e of Array.from(i))
                e.startsWith("theme-") && e !== o && i.remove(e);
            i.add(o),
            t.document.documentElement.dataset.theme = e
        }
        o.d(t, {
            applyTheme: () => i
        })
    }
    ,
    61499: (e, t, o) => {
        "use strict";
        var i;
        o.d(t, {
            StdTheme: () => i
        }),
        function(e) {
            e.Light = "light",
            e.Dark = "dark"
        }(i || (i = {}))
    }
    ,
    331633: (e, t, o) => {
        "use strict";
        o.d(t, {
            setTheme: () => s,
            watchedTheme: () => r
        });
        var i = o(820028)
          , n = o(626333);
        const r = new i.WatchedValue;
        function s(e) {
            r.setValue(e)
        }
        r.subscribe((e => {
            (0,
            n.applyTheme)(e, window)
        }
        ))
    }
    ,
    642709: (e, t, o) => {
        "use strict";
        o.d(t, {
            DialogBreakpoints: () => n
        });
        var i = o(251284);
        const n = {
            SmallHeight: i["small-height-breakpoint"],
            TabletSmall: i["tablet-small-breakpoint"],
            TabletNormal: i["tablet-normal-breakpoint"]
        }
    }
    ,
    389401: (e, t, o) => {
        "use strict";
        o.d(t, {
            Measure: () => n
        });
        var i = o(444530);
        function n(e) {
            const {children: t, onResize: o} = e;
            return t((0,
            i.useResizeObserver)(o || ( () => {}
            ), [null === o]))
        }
    }
    ,
    2606: (e, t, o) => {
        "use strict";
        o.d(t, {
            isDetailsReady: () => i
        });
        const i = new (o(820028).WatchedValue)(!1)
    }
    ,
    137674: (e, t, o) => {
        "use strict";
        o.d(t, {
            createSymbolNote: () => _,
            showMindsPage: () => m,
            showSymbolIdeas: () => p,
            showSymbolNews: () => h,
            showSymbolNotes: () => u
        });
        var i = o(2606)
          , n = o(421219)
          , r = o(777453);
        async function s(e) {
            Promise.all([o.e(79706), o.e(18883), o.e(32937), o.e(98185), o.e(46195), o.e(83439), o.e(92537), o.e(15371), o.e(98933), o.e(25563), o.e(97540), o.e(72232), o.e(38752), o.e(78894), o.e(87833), o.e(66032), o.e(43329), o.e(51513), o.e(87265), o.e(34943), o.e(3359), o.e(16990), o.e(95275), o.e(37463), o.e(95542), o.e(61031), o.e(4697), o.e(45073), o.e(82321), o.e(90345), o.e(74293), o.e(47793), o.e(12831), o.e(16091), o.e(88536), o.e(6889), o.e(50996)]).then(o.bind(o, 768175)).then((t => {
                t.renderNotesDialog(e)
            }
            ))
        }
        var l = o(881607);
        var a = o(515828);
        let c = null;
        function d(e, t) {
            if (c && i.isDetailsReady.unsubscribe(c),
            c = () => {
                const o = window?.widgetbar?.layout?.getWidgetByType("detail")?.widgetObject;
                o.navigate(e, t)
            }
            ,
            i.isDetailsReady.value())
                return c(),
                void (c = null);
            i.isDetailsReady.subscribe(c, {
                once: !0
            })
        }
        function u(e=null, t) {
            const o = (0,
            n.pathToGroup)(e ?? "");
            t ? s(o) : d(o)
        }
        function h(e, t) {
            const i = (0,
            r.newsPathToGroup)(e ?? "");
            t ? async function(e) {
                (await Promise.all([o.e(2673), o.e(18883), o.e(32937), o.e(98185), o.e(46195), o.e(83439), o.e(15371), o.e(61681), o.e(98933), o.e(25563), o.e(97540), o.e(72232), o.e(38752), o.e(19190), o.e(87833), o.e(66032), o.e(71450), o.e(19365), o.e(13672), o.e(51513), o.e(34943), o.e(93240), o.e(3359), o.e(11069), o.e(1462), o.e(45868), o.e(95275), o.e(84030), o.e(40984), o.e(27290), o.e(63213), o.e(75329), o.e(72929), o.e(13284), o.e(82321), o.e(12831), o.e(78017), o.e(47271), o.e(84482)]).then(o.bind(o, 23154))).renderNewsDialog(e)
            }(i) : d(i)
        }
        function p(e, t) {
            const i = (0,
            l.ideasPathToGroup)(e ?? "");
            t ? async function(e) {
                (await Promise.all([o.e(24054), o.e(18883), o.e(32937), o.e(98185), o.e(46195), o.e(83439), o.e(92537), o.e(15371), o.e(61171), o.e(25563), o.e(97540), o.e(72232), o.e(38752), o.e(19190), o.e(87833), o.e(71450), o.e(20563), o.e(19365), o.e(51513), o.e(34943), o.e(3359), o.e(45868), o.e(95275), o.e(38110), o.e(48598), o.e(1508), o.e(26383), o.e(63922), o.e(24781), o.e(61031), o.e(7647), o.e(82321), o.e(47793), o.e(12831), o.e(24951), o.e(94673)]).then(o.bind(o, 790348))).renderIdeasDialog(e)
            }(i) : d(i)
        }
        function m(e, t, o) {
            d((0,
            a.createMindsPath)(e ?? "", t, o))
        }
        function _(e=null, t) {
            const o = (0,
            n.pathToGroup)(e ?? "") + "?new=" + performance.now();
            t && s(o),
            d(o)
        }
    }
    ,
    881607: (e, t, o) => {
        "use strict";
        o.d(t, {
            IDEAS_GROUP_PATH_PATTERN: () => i,
            ideasPathToGroup: () => n
        });
        const i = "/ideas/groups/:symbol/";
        function n(e) {
            return i.replace(":symbol", encodeURIComponent(e))
        }
    }
    ,
    515828: (e, t, o) => {
        "use strict";
        o.d(t, {
            createMindsPath: () => n
        });
        const i = "/minds/groups/:symbol/";
        function n(e, t, o) {
            let n = i.replace(":symbol", encodeURIComponent(e));
            if (!t)
                return n;
            const r = new URLSearchParams;
            return r.set("mind", t),
            o && r.set("editable", "true"),
            n += `?${r.toString()}`,
            n
        }
    }
    ,
    777453: (e, t, o) => {
        "use strict";
        o.d(t, {
            NEWS_GROUP_PATH_PATTERN: () => i,
            newsPathToGroup: () => n
        });
        const i = "/news/groups/:symbol/";
        function n(e) {
            return i.replace(":symbol", encodeURIComponent(e))
        }
    }
    ,
    421219: (e, t, o) => {
        "use strict";
        o.d(t, {
            GROUP_PATH_PATTERN: () => n,
            NOTES_PATH_PATTERN: () => i,
            UNATTENDED_PATH_PATTERN: () => r,
            pathToGroup: () => s
        });
        const i = "/notes/"
          , n = "/notes/groups/:symbol/"
          , r = "/notes/unattended/";
        function s(e) {
            return e ? n.replace(":symbol", encodeURIComponent(e)) : r
        }
    }
    ,
    263361: (e, t, o) => {
        "use strict";
        o.d(t, {
            useRovingTabindexElement: () => s
        });
        var i = o(50959)
          , n = o(267521)
          , r = o(774218);
        function s(e, t=[]) {
            const [o,s] = (0,
            i.useState)(!1)
              , l = (0,
            n.useFunctionalRefObject)(e);
            return (0,
            r.useIsomorphicLayoutEffect)(( () => {
                const e = l.current;
                if (null === e)
                    return;
                const t = e => {
                    switch (e.type) {
                    case "roving-tabindex:main-element":
                        s(!0);
                        break;
                    case "roving-tabindex:secondary-element":
                        s(!1)
                    }
                }
                ;
                return e.addEventListener("roving-tabindex:main-element", t),
                e.addEventListener("roving-tabindex:secondary-element", t),
                () => {
                    e.removeEventListener("roving-tabindex:main-element", t),
                    e.removeEventListener("roving-tabindex:secondary-element", t)
                }
            }
            ), t),
            [l, o ? 0 : -1]
        }
    }
    ,
    920389: (e, t, o) => {
        "use strict";
        o.d(t, {
            runOrSignIn: () => s,
            runOrSignInWithPromo: () => l
        });
        var i = o(931924)
          , n = o(810978);
        const r = i.enabled("widget");
        function s(e, t) {
            r ? e() : window.runOrSignIn(e, t)
        }
        function l(e, t, o) {
            r ? o() : (0,
            n.runOrSigninWithFeature)(o, {
                ...t,
                feature: e
            })
        }
    }
    ,
    735270: (e, t, o) => {
        "use strict";
        o.d(t, {
            anchors: () => n,
            makeAnchorable: () => r
        });
        var i = o(50959);
        const n = {
            bottom: {
                attachment: {
                    horizontal: "left",
                    vertical: "top"
                },
                targetAttachment: {
                    horizontal: "left",
                    vertical: "bottom"
                }
            },
            top: {
                attachment: {
                    horizontal: "left",
                    vertical: "bottom"
                },
                targetAttachment: {
                    horizontal: "left",
                    vertical: "top"
                }
            },
            topRight: {
                attachment: {
                    horizontal: "right",
                    vertical: "bottom"
                },
                targetAttachment: {
                    horizontal: "right",
                    vertical: "top"
                }
            },
            bottomRight: {
                attachment: {
                    horizontal: "right",
                    vertical: "top"
                },
                targetAttachment: {
                    horizontal: "right",
                    vertical: "bottom"
                }
            }
        };
        function r(e) {
            var t;
            return (t = class extends i.PureComponent {
                render() {
                    const {anchor: t="bottom"} = this.props;
                    return i.createElement(e, {
                        ...this.props,
                        attachment: n[t].attachment,
                        targetAttachment: n[t].targetAttachment
                    })
                }
            }
            ).displayName = "Anchorable Component",
            t
        }
    }
    ,
    957114: (e, t, o) => {
        "use strict";
        o.d(t, {
            TVAppContext: () => c,
            TVAppContextProvider: () => a
        });
        var i = o(50959)
          , n = o(883522)
          , r = o(314802)
          , s = o(969680);
        const l = {
            iOs: "old",
            android: "new",
            old: "old",
            new: "new",
            any: "any"
        };
        function a(e) {
            const [t] = (0,
            i.useState)({
                isOnMobileAppPage: e => (0,
                r.isOnMobileAppPage)(l[e]),
                isRtl: (0,
                s.isRtl)(),
                locale: window.locale,
                renderMode: e.renderMode ?? "legacy"
            });
            return i.createElement(n.AppContext.Provider, {
                value: t
            }, e.children)
        }
        const c = n.AppContext
    }
    ,
    149368: (e, t, o) => {
        "use strict";
        o.d(t, {
            makeAttachable: () => r
        });
        var i = o(50959)
          , n = o(632227);
        function r(e) {
            var t;
            return (t = class extends i.PureComponent {
                constructor(e) {
                    super(e),
                    this._getComponentInstance = e => {
                        this._instance = e
                    }
                    ,
                    this._throttleCalcProps = () => {
                        requestAnimationFrame(( () => this.setState(this._calcProps(this.props))))
                    }
                    ,
                    this.state = this._getStateFromProps()
                }
                componentDidMount() {
                    this._instanceElem = n.findDOMNode(this._instance),
                    this.props.attachOnce || this._subscribe(),
                    this.setState(this._calcProps(this.props))
                }
                componentDidUpdate(e) {
                    e.children === this.props.children && e.top === this.props.top && e.left === this.props.left && e.width === this.props.width || this.setState(this._getStateFromProps(), ( () => this.setState(this._calcProps(this.props))))
                }
                render() {
                    return i.createElement("div", {
                        style: {
                            position: "absolute",
                            width: "100%",
                            top: 0,
                            left: 0
                        }
                    }, i.createElement(e, {
                        ...this.props,
                        ref: this._getComponentInstance,
                        top: this.state.top,
                        bottom: void 0 !== this.state.bottom ? this.state.bottom : "auto",
                        right: void 0 !== this.state.right ? this.state.right : "auto",
                        left: this.state.left,
                        width: this.state.width,
                        maxWidth: this.state.maxWidth
                    }, this.props.children))
                }
                componentWillUnmount() {
                    this._unsubsribe()
                }
                _getStateFromProps() {
                    return {
                        bottom: this.props.bottom,
                        left: this.props.left,
                        right: this.props.right,
                        top: void 0 !== this.props.top ? this.props.top : -1e4,
                        width: this.props.inheritWidthFromTarget ? this.props.target && this.props.target.getBoundingClientRect().width : this.props.width,
                        maxWidth: this.props.inheritMaxWidthFromTarget && this.props.target && this.props.target.getBoundingClientRect().width
                    }
                }
                _calcProps(e) {
                    if (e.target && e.attachment && e.targetAttachment) {
                        const t = this._calcTargetProps(e.target, e.attachment, e.targetAttachment);
                        if (null === t)
                            return {};
                        const {width: o, inheritWidthFromTarget: i=!0, inheritMaxWidthFromTarget: n=!1} = this.props
                          , r = {
                            width: i ? t.width : o,
                            maxWidth: n ? t.width : void 0
                        };
                        switch (e.attachment.vertical) {
                        case "bottom":
                        case "middle":
                            r.top = t.y;
                            break;
                        default:
                            r[e.attachment.vertical] = t.y
                        }
                        switch (e.attachment.horizontal) {
                        case "right":
                        case "center":
                            r.left = t.x;
                            break;
                        default:
                            r[e.attachment.horizontal] = t.x
                        }
                        return r
                    }
                    return {}
                }
                _calcTargetProps(e, t, o) {
                    const i = e.getBoundingClientRect()
                      , n = this._instanceElem.getBoundingClientRect()
                      , r = "parent" === this.props.root ? this._getCoordsRelToParentEl(e, i) : this._getCoordsRelToDocument(i);
                    if (null === r)
                        return null;
                    const s = this._getDimensions(n)
                      , l = this._getDimensions(i).width;
                    let a = 0
                      , c = 0;
                    switch (t.vertical) {
                    case "top":
                        c = r[o.vertical];
                        break;
                    case "bottom":
                        c = r[o.vertical] - s.height;
                        break;
                    case "middle":
                        c = r[o.vertical] - s.height / 2
                    }
                    switch (t.horizontal) {
                    case "left":
                        a = r[o.horizontal];
                        break;
                    case "right":
                        a = r[o.horizontal] - s.width;
                        break;
                    case "center":
                        a = r[o.horizontal] - s.width / 2
                    }
                    return "number" == typeof this.props.attachmentOffsetY && (c += this.props.attachmentOffsetY),
                    "number" == typeof this.props.attachmentOffsetX && (a += this.props.attachmentOffsetX),
                    {
                        x: a,
                        y: c,
                        width: l
                    }
                }
                _getCoordsRelToDocument(e) {
                    const t = pageYOffset
                      , o = pageXOffset
                      , i = e.top + t
                      , n = e.bottom + t
                      , r = e.left + o;
                    return {
                        top: i,
                        bottom: n,
                        left: r,
                        right: e.right + o,
                        middle: (i + e.height) / 2,
                        center: r + e.width / 2
                    }
                }
                _getCoordsRelToParentEl(e, t) {
                    const o = e.offsetParent;
                    if (null === o)
                        return null;
                    const i = o.scrollTop
                      , n = o.scrollLeft
                      , r = e.offsetTop + i
                      , s = e.offsetLeft + n
                      , l = t.width + s;
                    return {
                        top: r,
                        bottom: t.height + r,
                        left: s,
                        right: l,
                        middle: (r + t.height) / 2,
                        center: (s + t.width) / 2
                    }
                }
                _getDimensions(e) {
                    return {
                        height: e.height,
                        width: e.width
                    }
                }
                _subscribe() {
                    "document" === this.props.root && (window.addEventListener("scroll", this._throttleCalcProps, !0),
                    window.addEventListener("resize", this._throttleCalcProps))
                }
                _unsubsribe() {
                    window.removeEventListener("scroll", this._throttleCalcProps, !0),
                    window.removeEventListener("resize", this._throttleCalcProps)
                }
            }
            ).displayName = "Attachable Component",
            t
        }
    }
    ,
    948019: (e, t, o) => {
        "use strict";
        o.d(t, {
            ContextMenuContext: () => i
        });
        const i = o(50959).createContext(null)
    }
    ,
    582997: (e, t, o) => {
        "use strict";
        o.d(t, {
            Hint: () => l
        });
        var i = o(50959)
          , n = o(497754)
          , r = o.n(n)
          , s = o(447429);
        function l(e) {
            const {text: t="", className: o} = e;
            return i.createElement("span", {
                className: r()(s.shortcut, o)
            }, t)
        }
    }
    ,
    886004: (e, t, o) => {
        "use strict";
        o.d(t, {
            ContextMenuItem: () => m
        });
        var i = o(50959)
          , n = o(497754)
          , r = o.n(n)
          , s = o(79205)
          , l = o(265005)
          , a = o(302478)
          , c = o(582997)
          , d = o(339750)
          , u = o(379978)
          , h = o(460925)
          , p = o(405264);
        function m(e) {
            const {className: t, isTitle: o, isLoading: n, isHovered: m, active: _, checkable: g, disabled: v, checked: f, icon: y, iconChecked: b, hint: w, subItems: S, label: C, styledLabel: k, onClick: x, children: M, toolbox: E, jsxLabel: F, size: T="normal"} = e
              , A = (0,
            i.useContext)(a.EmptyIconsContext)
              , I = !!S.length;
            return n ? i.createElement("li", {
                className: r()(t, p.item, p.loading, p[T])
            }, i.createElement(l.Loader, null)) : i.createElement("li", {
                className: r()(t, p.item, p.interactive, o && p.title, v && p.disabled, m && p.hovered, _ && p.active, A && p.emptyIcons, p[T]),
                onClick: x
            }, i.createElement(s.Icon, {
                className: r()(p.icon),
                icon: function() {
                    if (g && f)
                        return b || y || d;
                    return y
                }()
            }), i.createElement("span", {
                className: r()(p.label)
            }, !F && k ? k.map(( ({text: e, ...t}, o) => i.createElement("span", {
                key: o,
                style: t
            }, e))) : F ?? C), !!E && i.createElement(s.Icon, {
                onClick: function() {
                    E && E.action()
                },
                className: p.remove,
                icon: h
            }), !I && w && i.createElement(c.Hint, {
                className: p.shortcut,
                text: w
            }), I && i.createElement(s.Icon, {
                className: p.nested,
                icon: u
            }), M)
        }
    }
    ,
    67812: (e, t, o) => {
        "use strict";
        o.d(t, {
            ContextMenuList: () => m
        });
        var i = o(50959)
          , n = o(868745);
        function r(e) {
            return i.createElement("li", {
                className: n.separator
            })
        }
        var s = o(886004)
          , l = o(125226)
          , a = o(762852)
          , c = o(224743);
        const d = (0,
        l.isFeatureEnabled)("force_disable_jsx_menu_items_rendering");
        function u(e) {
            const t = d ? e.action : e.action.custom() ?? e.action
              , [o,n] = (0,
            i.useState)(( () => t.getState()))
              , [r,l] = (0,
            i.useState)(!1)
              , u = !!o.subItems.length
              , h = u && r;
            return (0,
            i.useEffect)(( () => {
                const e = () => n(t.getState());
                return t.onUpdate().subscribe(null, e),
                () => {
                    t.onUpdate().unsubscribe(null, e)
                }
            }
            ), []),
            i.createElement(s.ContextMenuItem, {
                ...o,
                onClick: function(e) {
                    if (o.disabled || e.defaultPrevented)
                        return;
                    if (u)
                        return void l(!0);
                    o.doNotCloseOnClick || (0,
                    c.globalCloseMenu)();
                    t.execute()
                },
                isLoading: o.loading,
                isHovered: h
            }, h && i.createElement(a.Drawer, {
                onClose: p
            }, i.createElement(m, {
                items: o.subItems,
                parentAction: t,
                closeNested: p
            })));
            function p(e) {
                e && e.preventDefault(),
                l(!1)
            }
        }
        var h = o(302478)
          , p = o(366493);
        function m(e) {
            const {items: t, parentAction: o, closeNested: n} = e
              , l = !Boolean(o) && t.every((e => !Boolean("separator" !== e.type && (e.getState().icon || e.getState().checkable))));
            return i.createElement(h.EmptyIconsContext.Provider, {
                value: l
            }, i.createElement("ul", null, o && i.createElement(i.Fragment, null, i.createElement(s.ContextMenuItem, {
                label: o.getState().label,
                isTitle: !0,
                active: !1,
                disabled: !1,
                subItems: [],
                checkable: !1,
                checked: !1,
                doNotCloseOnClick: !1,
                icon: p,
                onClick: n
            }), i.createElement(r, null)), t.map((e => {
                switch (e.type) {
                case "action":
                    return i.createElement(u, {
                        key: e.id,
                        action: e
                    });
                case "separator":
                    return i.createElement(r, {
                        key: e.id
                    })
                }
            }
            ))))
        }
    }
    ,
    302478: (e, t, o) => {
        "use strict";
        o.d(t, {
            EmptyIconsContext: () => i
        });
        const i = o(50959).createContext(!1)
    }
    ,
    332585: (e, t, o) => {
        "use strict";
        o.d(t, {
            DrawerContext: () => s,
            DrawerManager: () => r
        });
        var i = o(50959)
          , n = o(575658);
        class r extends i.PureComponent {
            constructor(e) {
                super(e),
                this._isBodyFixed = !1,
                this._addDrawer = e => {
                    this.setState((t => ({
                        stack: [...t.stack, e]
                    })))
                }
                ,
                this._removeDrawer = e => {
                    this.setState((t => ({
                        stack: t.stack.filter((t => t !== e))
                    })))
                }
                ,
                this.state = {
                    stack: []
                }
            }
            componentDidUpdate(e, t) {
                !t.stack.length && this.state.stack.length && ((0,
                n.setFixedBodyState)(!0),
                this._isBodyFixed = !0),
                t.stack.length && !this.state.stack.length && this._isBodyFixed && ((0,
                n.setFixedBodyState)(!1),
                this._isBodyFixed = !1)
            }
            componentWillUnmount() {
                this.state.stack.length && this._isBodyFixed && (0,
                n.setFixedBodyState)(!1)
            }
            render() {
                return i.createElement(s.Provider, {
                    value: {
                        addDrawer: this._addDrawer,
                        removeDrawer: this._removeDrawer,
                        currentDrawer: this.state.stack.length ? this.state.stack[this.state.stack.length - 1] : null
                    }
                }, this.props.children)
            }
        }
        const s = i.createContext(null)
    }
    ,
    762852: (e, t, o) => {
        "use strict";
        o.d(t, {
            Drawer: () => h
        });
        var i = o(50959)
          , n = o(650151)
          , r = o(497754)
          , s = o(900608)
          , l = o(707533)
          , a = o(332585)
          , c = o(320116)
          , d = o(150881)
          , u = o(276773);
        function h(e) {
            const {position: t="Bottom", onClose: o, children: d, reference: h, className: m, theme: _=u} = e
              , g = (0,
            n.ensureNotNull)((0,
            i.useContext)(a.DrawerContext))
              , [v] = (0,
            i.useState)(( () => (0,
            s.randomHash)()))
              , f = (0,
            i.useRef)(null)
              , y = (0,
            i.useContext)(c.CloseDelegateContext);
            return (0,
            i.useLayoutEffect)(( () => ((0,
            n.ensureNotNull)(f.current).focus({
                preventScroll: !0
            }),
            y.subscribe(g, o),
            g.addDrawer(v),
            () => {
                g.removeDrawer(v),
                y.unsubscribe(g, o)
            }
            )), []),
            i.createElement(l.Portal, null, i.createElement("div", {
                ref: h,
                className: r(u.wrap, u[`position${t}`])
            }, v === g.currentDrawer && i.createElement("div", {
                className: u.backdrop,
                onClick: o
            }), i.createElement(p, {
                className: r(_.drawer, u[`position${t}`], m),
                ref: f,
                "data-name": e["data-name"],
                "data-qa-id": e["data-qa-id"]
            }, d)))
        }
        const p = (0,
        i.forwardRef)(( (e, t) => {
            const {className: o, ...n} = e;
            return i.createElement(d.TouchScrollContainer, {
                className: r(u.drawer, o),
                tabIndex: -1,
                ref: t,
                ...n
            })
        }
        ))
    }
    ,
    623107: (e, t, o) => {
        "use strict";
        o.d(t, {
            DropdownContainer: () => l
        });
        var i = o(50959)
          , n = o(209087)
          , r = o(497754)
          , s = o(650151);
        class l extends i.PureComponent {
            constructor() {
                super(...arguments),
                this._container = null,
                this._setContainerRef = e => {
                    "function" == typeof this.props.reference && this.props.reference(e),
                    "object" == typeof this.props.reference && (this.props.reference.current = e),
                    this._container = e
                }
            }
            componentDidMount() {
                this.props.onDropdownWheelNoPassive && this._addPassiveListenerOnWheel(this.props.onDropdownWheelNoPassive)
            }
            componentDidUpdate(e) {
                this.props.onDropdownWheelNoPassive !== e.onDropdownWheelNoPassive && this._updatePassiveListenerOnWheel(e.onDropdownWheelNoPassive)
            }
            componentWillUnmount() {
                this.props.onDropdownWheelNoPassive && this._removePassiveListenerOnWheel(this.props.onDropdownWheelNoPassive)
            }
            render() {
                const {shadow: e="bottom", children: t, className: o} = this.props
                  , s = r(n.container, n[e], o)
                  , l = {
                    maxHeight: this.props.maxHeight
                };
                return i.createElement("div", {
                    ref: this._setContainerRef,
                    style: l,
                    className: s,
                    onTouchStart: this.props.onDropdownTouchStart,
                    onTouchMove: this.props.onDropdownTouchMove,
                    onTouchEnd: this.props.onDropdownTouchEnd,
                    onWheel: this.props.onDropdownWheel
                }, t)
            }
            _updatePassiveListenerOnWheel(e) {
                e && this._removePassiveListenerOnWheel(e),
                this.props.onDropdownWheelNoPassive && this._addPassiveListenerOnWheel(this.props.onDropdownWheelNoPassive)
            }
            _addPassiveListenerOnWheel(e) {
                (0,
                s.ensureNotNull)(this._container).addEventListener("wheel", e, {
                    passive: !1
                })
            }
            _removePassiveListenerOnWheel(e) {
                (0,
                s.ensureNotNull)(this._container).removeEventListener("wheel", e)
            }
        }
    }
    ,
    400236: (e, t, o) => {
        "use strict";
        o.d(t, {
            DropdownList: () => m
        });
        var i = o(50959)
          , n = o(43681)
          , r = o(497754)
          , s = o(408317)
          , l = o(100180)
          , a = o(940014)
          , c = o(623107)
          , d = o(735270);
        const u = (0,
        l.makeNavigateable)(s.List)
          , h = (0,
        d.makeAnchorable)(a.Dropdown)
          , p = {
            top: "top",
            bottom: "bottom",
            topRight: "top"
        };
        class m extends i.PureComponent {
            render() {
                const {anchor: e="bottom", fontSize: t=14, root: o="parent"} = this.props
                  , s = r(n.list, n[e])
                  , {dropdownClassName: l, height: a, ...d} = this.props;
                return i.createElement(h, {
                    ...d,
                    className: l,
                    root: o
                }, i.createElement(c.DropdownContainer, {
                    className: this.props.dropdownContainerClassName,
                    shadow: p[e],
                    maxHeight: this.props.maxHeight,
                    onDropdownTouchStart: this.props.onDropdownTouchStart ? this.props.onDropdownTouchStart : void 0,
                    onDropdownTouchMove: this.props.onDropdownTouchMove ? this.props.onDropdownTouchMove : void 0,
                    onDropdownTouchEnd: this.props.onDropdownTouchEnd ? this.props.onDropdownTouchEnd : void 0,
                    onDropdownWheelNoPassive: this.props.onDropdownWheelNoPassive ? this.props.onDropdownWheelNoPassive : void 0
                }, i.createElement(u, {
                    ...d,
                    width: this.props.width,
                    height: a,
                    className: this.props.className || s,
                    itemsClassName: this.props.itemsClassName || n.item,
                    selectedClassName: this.props.selectedClassName || n.selected,
                    fontSize: t,
                    reference: this.props.reference
                })))
            }
        }
    }
    ,
    940014: (e, t, o) => {
        "use strict";
        o.d(t, {
            Dropdown: () => l
        });
        var i = o(50959)
          , n = o(149368)
          , r = o(368337);
        class s extends i.PureComponent {
            render() {
                const e = {
                    position: "absolute",
                    top: this.props.top,
                    width: this.props.width,
                    height: this.props.height,
                    bottom: this.props.bottom,
                    right: this.props.right,
                    left: this.props.left,
                    zIndex: this.props.zIndex
                };
                return i.createElement("div", {
                    className: this.props.className,
                    style: e,
                    ref: this.props.reference
                }, this.props.children)
            }
        }
        s.displayName = "Dropdown Container";
        const l = (0,
        r.makeOverlapable)((0,
        n.makeAttachable)(s))
    }
    ,
    336231: (e, t, o) => {
        "use strict";
        o.d(t, {
            ListItemWrap: () => n
        });
        var i = o(50959);
        class n extends i.PureComponent {
            constructor(e) {
                super(e)
            }
            render() {
                return i.createElement("div", {
                    className: this.props.className,
                    onClick: this.props.onClick,
                    ref: this.props.reference
                }, this.props.children)
            }
        }
    }
    ,
    408317: (e, t, o) => {
        "use strict";
        o.d(t, {
            List: () => c
        });
        var i = o(50959)
          , n = o(551080)
          , r = o(737953)
          , s = o(497754)
          , l = o(336231)
          , a = o(389401);
        class c extends i.PureComponent {
            constructor(e) {
                super(e),
                this._handleResize = ([e]) => {
                    this.props.onMeasure?.(e.target.getBoundingClientRect())
                }
            }
            render() {
                const {theme: e=r} = this.props
                  , t = s(e.list, {
                    [this.props.className]: Boolean(this.props.className)
                })
                  , {fontSize: o=13} = this.props
                  , l = {
                    bottom: this.props.bottom,
                    fontSize: o,
                    left: this.props.left,
                    height: this.props.height || "auto",
                    right: this.props.right,
                    top: this.props.top,
                    width: this.props.width,
                    zIndex: this.props.zIndex
                };
                return i.createElement(a.Measure, {
                    onResize: Boolean(this.props.onMeasure) ? this._handleResize : null
                }, (e => i.createElement("div", {
                    className: t,
                    style: l,
                    ref: (0,
                    n.mergeRefs)([this.props.reference, e])
                }, this._wrapItems(this.props.items, this.props.selected))))
            }
            componentDidMount() {
                if (void 0 !== this.props.selected && this.props.shouldScrollIfNotVisible) {
                    const e = this._items[this.props.selected];
                    e && this._scrollToItem(e)
                }
            }
            componentDidUpdate() {
                if (void 0 !== this.props.selected && this.props.shouldScrollIfNotVisible) {
                    const e = this._items[this.props.selected];
                    e && this._scrollToItem(e)
                }
            }
            _wrapItems(e=[], t) {
                this._items = [];
                const {itemWrap: o=l.ListItemWrap, theme: n=r} = this.props
                  , a = o;
                return e.map(( (e, o) => {
                    const r = s(n.item, {
                        [this.props.itemsClassName]: Boolean(this.props.itemsClassName),
                        [this.props.selectedClassName]: t === o
                    });
                    return i.createElement(a, {
                        reference: t => {
                            t && this._items.push({
                                elem: t,
                                index: o,
                                value: e
                            })
                        }
                        ,
                        key: o,
                        onClick: () => this._onSelect(o),
                        className: r
                    }, e.elem)
                }
                ))
            }
            _onSelect(e) {
                this.props.onSelect && this.props.onSelect(e, this._items[e].value)
            }
            _scrollToItem(e) {
                e.elem.scrollIntoView({
                    block: "center"
                })
            }
        }
        c.defaultProps = {
            shouldScrollIfNotVisible: !0
        }
    }
    ,
    18182: (e, t, o) => {
        "use strict";
        o.d(t, {
            MatchMedia: () => n
        });
        var i = o(50959);
        class n extends i.PureComponent {
            constructor(e) {
                super(e),
                this._handleChange = () => {
                    this.forceUpdate()
                }
                ,
                this.state = {
                    query: window.matchMedia(this.props.rule)
                }
            }
            componentDidMount() {
                this._subscribe(this.state.query)
            }
            componentDidUpdate(e, t) {
                this.state.query !== t.query && (this._unsubscribe(t.query),
                this._subscribe(this.state.query))
            }
            componentWillUnmount() {
                this._unsubscribe(this.state.query)
            }
            render() {
                return this.props.children(this.state.query.matches)
            }
            static getDerivedStateFromProps(e, t) {
                return e.rule !== t.query.media ? {
                    query: window.matchMedia(e.rule)
                } : null
            }
            _subscribe(e) {
                e.addEventListener("change", this._handleChange)
            }
            _unsubscribe(e) {
                e.removeEventListener("change", this._handleChange)
            }
        }
    }
    ,
    100180: (e, t, o) => {
        "use strict";
        o.d(t, {
            makeNavigateable: () => n
        });
        var i = o(50959);
        function n(e) {
            var t;
            return (t = class extends i.PureComponent {
                constructor(e) {
                    super(e),
                    this._items = this.props.items
                }
                componentDidUpdate(e) {
                    if (e.command !== this.props.command && this.props.command)
                        switch (this.props.command.name) {
                        case "next":
                            this._next();
                            break;
                        case "prev":
                            this._prev()
                        }
                    e.items !== this.props.items && (this._items = this.props.items)
                }
                render() {
                    return i.createElement(e, {
                        ...this.props
                    }, this.props.children)
                }
                _next() {
                    const {selected: e=-1} = this.props
                      , t = e + 1;
                    this._items.length - 1 >= t ? this._navigateTo(t) : this._navigateTo(0)
                }
                _prev() {
                    const {selected: e=-1} = this.props
                      , t = e - 1
                      , o = this._items.length - 1;
                    0 <= t ? this._navigateTo(t) : this._navigateTo(o)
                }
                _navigateTo(e) {
                    this.props.onNavigate && this.props.onNavigate(e, this._items[e])
                }
            }
            ).displayName = "Navigateable Component",
            t
        }
    }
    ,
    368337: (e, t, o) => {
        "use strict";
        o.d(t, {
            makeOverlapable: () => r
        });
        var i = o(50959)
          , n = o(707533);
        function r(e, t) {
            return class extends i.PureComponent {
                render() {
                    const {isOpened: o, root: r} = this.props;
                    if (!o)
                        return null;
                    const s = i.createElement(e, {
                        ...this.props,
                        ref: this.props.componentRef,
                        zIndex: 150
                    });
                    return "parent" === r ? s : i.createElement(n.Portal, {
                        shouldTrapFocus: t
                    }, s)
                }
            }
        }
    }
    ,
    320116: (e, t, o) => {
        "use strict";
        o.d(t, {
            CloseDelegateContext: () => r
        });
        var i = o(50959)
          , n = o(224743);
        const r = i.createContext(n.globalCloseDelegate)
    }
    ,
    707533: (e, t, o) => {
        "use strict";
        o.d(t, {
            Portal: () => i.Portal,
            PortalContext: () => i.PortalContext
        });
        var i = o(430495)
    }
    ,
    670797: (e, t, o) => {
        "use strict";
        o.d(t, {
            Slot: () => i.Slot,
            SlotContext: () => i.SlotContext
        });
        var i = o(692822)
    }
    ,
    150881: (e, t, o) => {
        "use strict";
        o.d(t, {
            TouchScrollContainer: () => c
        });
        var i = o(50959)
          , n = o(259142)
          , r = o(650151)
          , s = o(638456);
        const l = CSS.supports("overscroll-behavior", "none");
        let a = 0;
        const c = (0,
        i.forwardRef)(( (e, t) => {
            const {children: o, ...r} = e
              , c = (0,
            i.useRef)(null);
            return (0,
            i.useImperativeHandle)(t, ( () => c.current)),
            (0,
            i.useLayoutEffect)(( () => {
                if (s.CheckMobile.iOS())
                    return a++,
                    null !== c.current && (l ? 1 === a && (document.body.style.overscrollBehavior = "none") : (0,
                    n.disableBodyScroll)(c.current, {
                        allowTouchMove: d(c)
                    })),
                    () => {
                        a--,
                        null !== c.current && (l ? 0 === a && (document.body.style.overscrollBehavior = "") : (0,
                        n.enableBodyScroll)(c.current))
                    }
            }
            ), []),
            i.createElement("div", {
                ref: c,
                ...r
            }, o)
        }
        ));
        function d(e) {
            return t => {
                const o = (0,
                r.ensureNotNull)(e.current)
                  , i = document.activeElement;
                return !o.contains(t) || null !== i && o.contains(i) && i.contains(t)
            }
        }
    }
    ,
    650133: e => {
        e.exports = {
            modeTitle: "modeTitle-jsT3S4MA",
            modeTitleActive: "modeTitleActive-jsT3S4MA",
            switcherContainer: "switcherContainer-jsT3S4MA"
        }
    }
    ,
    130969: e => {
        e.exports = {
            link: "link-UIQpLLNs"
        }
    }
    ,
    606550: (e, t, o) => {
        "use strict";
        t.operators = {
            less: o.i18next(null, void 0, o(351755)),
            eless: o.i18next(null, void 0, o(471751)),
            greater: o.i18next(null, void 0, o(24933)),
            egreater: o.i18next(null, void 0, o(159393)),
            crosses: o.i18next(null, void 0, o(137933)),
            crosses_above: o.i18next(null, void 0, o(4478)),
            crosses_below: o.i18next(null, void 0, o(314942)),
            in_range: o.i18next(null, void 0, o(583075)),
            not_in_range: o.i18next(null, void 0, o(591176)),
            equal: o.i18next(null, void 0, o(319011)),
            nequal: o.i18next(null, void 0, o(809621))
        }
    }
    ,
    343693: (e, t, o) => {
        "use strict";
        o.d(t, {
            getBackendUrl: () => n
        });
        const i = () => window.SCREENER_HOST || "https://scanner.tradingview.com";
        function n(e, t=e) {
            return Array.isArray(e) ? e.length > 1 ? `${i()}/global/` : `${i()}/${t[0]}/` : `${i()}/${t}/`
        }
    }
    ,
    95419: (e, t, o) => {
        "use strict";
        o.d(t, {
            getScreenerIntervals: () => n
        });
        var i = o(444372);
        function n() {
            return [{
                id: "1m",
                title: i.t(null, {
                    plural: "{number} minutes",
                    count: 1,
                    replace: {
                        number: String(1)
                    }
                }, o(532547)),
                shortTitle: `1<sup class="tv-screener-toolbar__interval-sup">${i.t(null, {
                    context: "interval_short"
                }, o(768430))}</sup>`,
                value: 1
            }, {
                id: "5m",
                title: i.t(null, {
                    plural: "{number} minutes",
                    count: 5,
                    replace: {
                        number: String(5)
                    }
                }, o(532547)),
                shortTitle: `5<sup class="tv-screener-toolbar__interval-sup">${i.t(null, {
                    context: "interval_short"
                }, o(768430))}</sup>`,
                value: 5
            }, {
                id: "15m",
                title: i.t(null, {
                    plural: "{number} minutes",
                    count: 15,
                    replace: {
                        number: String(15)
                    }
                }, o(532547)),
                shortTitle: `15<sup class="tv-screener-toolbar__interval-sup">${i.t(null, {
                    context: "interval_short"
                }, o(768430))}</sup>`,
                value: 15
            }, {
                id: "30m",
                title: i.t(null, {
                    plural: "{number} minutes",
                    count: 30,
                    replace: {
                        number: String(30)
                    }
                }, o(532547)),
                shortTitle: `30<sup class="tv-screener-toolbar__interval-sup">${i.t(null, {
                    context: "interval_short"
                }, o(768430))}</sup>`,
                value: 30
            }, {
                id: "1h",
                title: i.t(null, {
                    plural: "{number} hours",
                    count: 1,
                    replace: {
                        number: String(1)
                    }
                }, o(844646)),
                shortTitle: `1<sup class="tv-screener-toolbar__interval-sup">${i.t(null, {
                    context: "interval_short"
                }, o(438048))}</sup>`,
                value: 60
            }, {
                id: "2h",
                title: i.t(null, {
                    plural: "{number} hours",
                    count: 2,
                    replace: {
                        number: String(2)
                    }
                }, o(844646)),
                shortTitle: `2<sup class="tv-screener-toolbar__interval-sup">${i.t(null, {
                    context: "interval_short"
                }, o(438048))}</sup>`,
                value: 120
            }, {
                id: "4h",
                title: i.t(null, {
                    plural: "{number} hours",
                    count: 4,
                    replace: {
                        number: String(4)
                    }
                }, o(844646)),
                shortTitle: `4<sup class="tv-screener-toolbar__interval-sup">${i.t(null, {
                    context: "interval_short"
                }, o(438048))}</sup>`,
                value: 240
            }, {
                id: "1D",
                title: i.t(null, {
                    plural: "{number} days",
                    count: 1,
                    replace: {
                        number: String(1)
                    }
                }, o(839501)),
                shortTitle: `1<sup class="tv-screener-toolbar__interval-sup">${i.t(null, {
                    context: "interval_short"
                }, o(38691))}</sup>`,
                value: null
            }, {
                id: "1W",
                title: i.t(null, {
                    plural: "{number} weeks",
                    count: 1,
                    replace: {
                        number: String(1)
                    }
                }, o(718396)),
                shortTitle: `1<sup class="tv-screener-toolbar__interval-sup">${i.t(null, {
                    context: "interval_short"
                }, o(307408))}</sup>`,
                value: "1W"
            }, {
                id: "1M",
                title: i.t(null, {
                    plural: "{number} months",
                    count: 1,
                    replace: {
                        number: String(1)
                    }
                }, o(277186)),
                shortTitle: `1<sup class="tv-screener-toolbar__interval-sup">${i.t(null, {
                    context: "interval_short"
                }, o(977995))}</sup>`,
                value: "1M"
            }]
        }
    }
    ,
    368270: (e, t, o) => {
        "use strict";
        o.d(t, {
            mutateSimpleDate: () => s
        });
        var i = o(150335)
          , n = o(608571)
          , r = o(532442);
        function s(e) {
            return e && (0,
            i.isNumber)(e) ? n.dateFormatFunctions["yyyy-MM-dd"]((0,
            r.getDateFromYYYYMMDD)(e), !0) : "—"
        }
    }
    ,
    779e3: (e, t, o) => {
        "use strict";
        function i(e) {
            return {
                standalone: Boolean(e.standalone),
                originalStandalone: Boolean(e.originalStandalone),
                onWidget: Boolean(e.onWidget)
            }
        }
        function n(e) {
            const t = i(e);
            return t.standalone && t.originalStandalone && !t.onWidget
        }
        function r(e) {
            const t = i(e);
            return t.standalone && !t.originalStandalone && !t.onWidget
        }
        function s(e) {
            const t = i(e);
            return !t.standalone && t.originalStandalone && !t.onWidget
        }
        function l(e) {
            return i(e).onWidget
        }
        function a(e) {
            return n(e) ? "screener" : r(e) ? "market" : s(e) ? "chart" : "widget"
        }
        o.d(t, {
            getScreenerPage: () => a,
            isChartPage: () => s,
            isExternalWidget: () => l,
            isMarketPage: () => r,
            isScreenerPage: () => n
        })
    }
    ,
    957931: (e, t, o) => {
        "use strict";
        var i;
        o.d(t, {
            UserActionState: () => i
        }),
        function(e) {
            e.Click = "clicked",
            e.ApplyFilters = "filters_applied",
            e.Type = "typed",
            e.Slide = "slided",
            e.Drag = "drag"
        }(i || (i = {}))
    }
    ,
    990266: (e, t, o) => {
        "use strict";
        o.d(t, {
            DispatchContextMenuActionEvent: () => n
        });
        var i = o(957931);
        class n {
            constructor(e, t, o) {
                this.event = "context_menu_action",
                this.state = i.UserActionState.Click,
                this.source = e,
                this.value = o.toString(),
                this.location = t
            }
        }
    }
    ,
    508822: (e, t, o) => {
        "use strict";
        o.d(t, {
            ChangeMarketEvent: () => i,
            ChangeMarketSelectionModeEvent: () => n
        });
        class i {
            constructor(e) {
                this.event = "change_market",
                this.source = "market_selector",
                this.location = "toolbar",
                this.state = "",
                this.value = e
            }
        }
        class n {
            constructor(e) {
                this.event = "change_market_selection_mode",
                this.source = "market_selection_mode_switch",
                this.location = "market_dialog",
                this.state = "",
                this.value = e
            }
        }
    }
    ,
    518643: (e, t, o) => {
        "use strict";
        o.d(t, {
            getColumnSetNameForSnowPlow: () => c,
            getFilterSetNameForSnowPlow: () => d,
            getSnowPlowRefreshInterval: () => a,
            initScreenerInstance: () => s,
            sendSnowPlowData: () => l
        });
        var i = o(776734)
          , n = o(779e3);
        let r;
        function s(e) {
            r = e
        }
        function l(e) {
            let t = ""
              , o = "";
            r && (t = (0,
            n.getScreenerPage)(r.screenerBridge),
            o = r.screenerType);
            (!r || !(0,
            n.isExternalWidget)(r.screenerBridge)) && (0,
            i.getTracker)().then((i => {
                i && i.trackScreenerHighLevel(e, o, t)
            }
            ))
        }
        function a(e) {
            return 1 === e ? "auto" : -1 === e ? "manual" : `${e}`
        }
        function c(e) {
            return r.defaultFieldSets.find((t => t.id === e)) ? e : "custom"
        }
        function d(e) {
            return r.defaultFilterSets.find((t => t.id === e)) ? e : "custom"
        }
    }
    ,
    554620: (e, t, o) => {
        "use strict";
        o.d(t, {
            getDefaultMarketForLocale: () => _,
            getDefaultStockMarket: () => g,
            getExchangesByMarkets: () => k,
            getMarketFieldValuesByScreenerType: () => S,
            getMarketsByScreenerType: () => v,
            getUnavailableWidgetExchangesMap: () => F,
            getUnavailableWidgetMarkets: () => M,
            marketFilterValues: () => C
        });
        var i = o(688706)
          , n = o(85436);
        const r = o(158841)
          , s = o(320880)
          , l = {}
          , a = new Map([["uae", () => o.i18next(null, void 0, o(879479))]]);
        for (const e of s) {
            const t = r[e];
            if (t && t.screenerName) {
                const o = a.has(t.screenerName) ? a.get(t.screenerName) : () => (0,
                i.triesTranslateCountrieName)(t.title);
                l[t.screenerName] = {
                    flag: e,
                    get title() {
                        return o()
                    },
                    stocks: t.exchangesStocks || [],
                    timezone: t.screenerTimezone,
                    group: t.group,
                    country: e
                }
            }
        }
        const c = o(161379)
          , d = {
            forex: {
                icon: `<span class="tv-screener-market-select__item-forex">${o(890756)}</span>`,
                get title() {
                    return o.i18next(null, void 0, o(442370))
                },
                stocks: []
            }
        }
          , u = {
            crypto: {
                icon: `<span class="tv-screener-market-select__item-bitcoin">${c}</span>`,
                get title() {
                    return o.i18next(null, void 0, o(322929))
                },
                stocks: []
            }
        }
          , h = "america"
          , p = "forex"
          , m = "crypto";
        function _(e, t="stock") {
            return "forex" === t ? p : "crypto" === t ? m : (0,
            n.getMarketByLocale)(e)
        }
        function g() {
            return h
        }
        function v(e) {
            return "stock" === e ? l : "forex" === e ? d : "crypto" === e ? u : l
        }
        const f = {
            america: {
                market_cap_basic: [5e7, 3e8, 2e9, 1e10, 5e10, 1e11, 2e12],
                volume: [5e4, 1e5, 5e5, 75e4, 1e6, 2e6, 5e6, 1e7, 2e7, 5e7],
                average_volume_10d_calc: [5e4, 1e5, 5e5, 75e4, 1e6, 2e6, 5e6, 1e7, 2e7, 5e7],
                average_volume_30d_calc: [5e4, 1e5, 5e5, 75e4, 1e6, 2e6, 5e6, 1e7, 2e7, 5e7],
                average_volume_60d_calc: [5e4, 1e5, 5e5, 75e4, 1e6, 2e6, 5e6, 1e7, 2e7, 5e7],
                average_volume_90d_calc: [5e4, 1e5, 5e5, 75e4, 1e6, 2e6, 5e6, 1e7, 2e7, 5e7],
                relative_volume_10d_calc: [0, 5, 10, 15, 20, 50, 75, 100],
                premarket_volume: [5e4, 1e5, 5e5, 75e4, 1e6, 2e6, 5e6, 1e7, 2e7, 5e7],
                postmarket_volume: [5e4, 1e5, 5e5, 75e4, 1e6, 2e6, 5e6, 1e7, 2e7, 5e7],
                change_abs: [-100, -50, -20, -10, 0, 10, 20, 50, 100],
                change: [-50, -20, -10, 0, 10, 20, 50],
                open: [10, 20, 50, 100],
                close: [10, 20, 50, 100],
                high: [10, 20, 50, 100],
                low: [10, 20, 50, 100],
                gap: [-50, -20, -10, 0, 10, 20, 50],
                price_earnings_ttm: [0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50],
                price_earnings_to_growth_ttm: [0, 1, 2, 3],
                price_sales_ratio: [0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50],
                return_on_assets: [-50, -30, -20, -15, -10, -5, 0, 5, 10, 15, 20, 30, 50],
                return_on_equity: [-50, -30, -20, -15, -10, -5, 0, 5, 10, 15, 20, 30, 50],
                debt_to_equity: [.1, .2, .3, .4, .5, .6, .7, .8, .9, 1],
                current_ratio: [0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50],
                quick_ratio: [0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50],
                price_book_fq: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
                price_book_ratio: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
                price_free_cash_flow_ttm: [0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 60, 70, 80, 90, 100],
                beta_1_year: [-2, -1.5, -1, -.5, 0, .5, 1, 1.5, 2],
                operating_margin: [-50, -20, -10, 0, 10, 20, 50],
                earnings_per_share_basic_ttm: [-100, -50, -20, -10, 0, 10, 20, 50, 100],
                ebitda: [5e5, 1e6, 5e6, 1e7, 5e7, 1e8, 5e8, 1e9, 2e9, 5e9, 1e10, 25e9, 5e10],
                change_from_open: [-50, -20, -10, 0, 10, 20, 50],
                "Perf.W": [-50, -20, -10, 0, 10, 20, 50],
                "Perf.1M": [-50, -20, -10, 0, 10, 20, 50],
                "Perf.3M": [-50, -20, -10, 0, 10, 20, 50],
                "Perf.6M": [-50, -20, -10, 0, 10, 20, 50],
                "Perf.Y": [-50, -20, -10, 0, 10, 20, 50],
                "Perf.YTD": [-50, -20, -10, 0, 10, 20, 50],
                "Volatility.W": [0, 5, 10, 15, 20, 30, 50, 70],
                "Volatility.M": [0, 5, 10, 15, 20, 30, 50, 70],
                "Volatility.D": [0, 5, 10, 15, 20, 30, 50, 70],
                ADX: [10, 20, 30, 40, 50, 60, 70, 80, 90],
                ATR: [.25, .5, .75, 1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5],
                Mom: [-30, -20, -15, -10, -5, 0, 5, 10, 15, 20, 30],
                goodwill: [5e7, 3e8, 2e9, 1e10, 2e11],
                net_debt: [-2e11, -1e10, -2e9, -3e8, -5e7, 5e7, 3e8, 2e9, 1e10, 2e11],
                total_debt: [5e7, 3e8, 2e9, 1e10, 2e11],
                revenue_per_employee: [5e4, 1e5, 5e5, 75e4, 1e6, 2e6, 5e6, 1e7, 2e7, 5e7],
                return_on_invested_capital: [-100, -50, -20, -10, 0, 10, 20, 50, 100],
                after_tax_margin: [-100, -50, -20, -10, 0, 10, 20, 50, 100],
                pre_tax_margin: [-100, -50, -20, -10, 0, 10, 20, 50, 100],
                gross_margin: [-100, -50, -20, -10, 0, 10, 20, 50, 100],
                dividends_paid: [-2e11, -1e10, -2e9, -3e8, -5e7, 0],
                dividend_yield_recent: [0, 5, 10, 15, 20, 25, 50, 100],
                basic_eps_net_income: [-100, -50, -20, -10, 0, 10, 20, 50, 100],
                net_income: [-5e10, -1e10, -2e9, -3e8, -5e7, 5e7, 3e8, 2e9, 1e10, 2e11],
                gross_profit: [-2e11, -1e10, -2e9, -3e8, -5e7, 5e7, 3e8, 2e9, 1e10, 2e11],
                gross_profit_fq: [-2e11, -1e10, -2e9, -3e8, -5e7, 5e7, 3e8, 2e9, 1e10, 2e11],
                number_of_shareholders: [100, 500, 1e3, 1e4, 1e5, 1e6],
                float_shares_outstanding: [5e7, 3e8, 2e9, 1e10, 2e11],
                total_shares_outstanding_fundamental: [5e7, 3e8, 2e9, 1e10, 2e11],
                total_assets: [5e7, 3e8, 2e9, 1e10, 2e11],
                total_current_assets: [5e7, 3e8, 2e9, 1e10, 2e11],
                total_revenue: [0, 5e7, 3e8, 2e9, 1e10, 2e11, 5e11],
                total_liabilities_fy: [5e7, 3e8, 2e9, 1e10, 2e11],
                total_liabilities_fq: [5e7, 3e8, 2e9, 1e10, 2e11],
                earnings_per_share_diluted_ttm: [-100, -50, -20, -10, 0, 10, 20, 50, 100],
                earnings_per_share_forecast_next_fq: [-100, -50, -20, -10, 0, 10, 20, 50, 100],
                earnings_per_share_fq: [-100, -50, -20, -10, 0, 10, 20, 50, 100],
                enterprise_value_ebitda_ttm: [-5e3, -1e3, 0, 1e3, 5e3],
                enterprise_value_fq: [-2e11, -1e10, -2e9, -3e8, -5e7, 5e7, 3e8, 2e9, 1e10, 2e11],
                eps_surprise_fq: [-100, -50, -20, -10, 0, 10, 20, 50, 100],
                eps_surprise_percent_fq: [-30, -20, -15, -10, -5, 0, 5, 10, 15, 20, 30],
                price_revenue_ttm: [0, 5, 10, 50, 100, 1e3, 5e3, 1e4],
                number_of_employees: [100, 500, 1e3, 1e4, 1e5, 1e6],
                last_annual_eps: [-100, -50, -20, -10, 0, 10, 20, 50, 100],
                last_annual_revenue: [5e7, 3e8, 2e9, 1e10, 2e11],
                CCI20: [-100, -50, -20, -10, 0, 10, 20, 50, 100],
                ChaikinMoneyFlow: [-1, -.9, -.8, -.7, -.6, -.5, -.4, -.3, -.2, -.1, 0, .1, .2, .3, .4, .5, .6, .7, .8, .9, 1],
                MoneyFlow: [0, 5, 10, 15, 25, 50, 100],
                "Value.Traded": [5e4, 1e5, 5e5, 75e4, 1e6, 2e6, 5e6, 1e7, 2e7, 5e7, 1e8, 5e8, 75e7]
            },
            uk: {
                average_volume_10d_calc: [5e4, 1e5, 5e5, 75e4, 1e6, 2e6, 5e6, 1e7, 2e7, 5e7, 1e8],
                open: [10, 20, 50, 100, 200, 500, 1e3, 2e3, 5e3, 1e4, 2e4],
                close: [10, 20, 50, 100, 200, 500, 1e3, 2e3, 5e3, 1e4, 2e4],
                high: [10, 20, 50, 100, 200, 500, 1e3, 2e3, 5e3, 1e4, 2e4],
                low: [10, 20, 50, 100, 200, 500, 1e3, 2e3, 5e3, 1e4, 2e4],
                current_ratio: [0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 75, 100],
                total_shares_outstanding_fundamental: [5e6, 1e7, 5e7, 3e8, 2e9, 1e10, 5e10, 1e11],
                dividends_paid: [-2e11, -15e10, -5e10, -1e10, -2e9, -3e8, -1e8, -5e7, 0],
                gross_profit: [-1e10, -2e9, -3e8, -5e7, 5e7, 3e8, 2e9, 1e10, 2e11]
            },
            india: {
                market_cap_basic: [1e7, 5e7, 3e8, 2e9, 1e10, 2e11, 5e11, 1e12, 2e12],
                open: [10, 20, 50, 100, 200, 500, 1e3, 2e3, 5e3, 1e4, 2e4],
                close: [10, 20, 50, 100, 200, 500, 1e3, 2e3, 5e3, 1e4, 2e4],
                high: [10, 20, 50, 100, 200, 500, 1e3, 2e3, 5e3, 1e4, 2e4],
                low: [10, 20, 50, 100, 200, 500, 1e3, 2e3, 5e3, 1e4, 2e4],
                quick_ratio: [0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 100, 500],
                change_from_open: [-20, -10, 0, 10, 20, 50],
                revenue_per_employee: [5e4, 1e5, 5e5, 75e4, 1e6, 2e6, 5e6, 1e7, 2e7, 5e7, 1e8, 3e8, 5e8],
                dividends_paid: [-5e10, -1e10, -2e9, -3e8, -1e8, -5e7, 0],
                gross_profit: [-1e10, -2e9, -3e8, -5e7, 5e7, 3e8, 2e9, 1e10, 2e11],
                total_shares_outstanding_fundamental: [5e7, 3e8, 2e9, 5e9, 1e10],
                number_of_employees: [100, 500, 1e3, 1e4, 1e5, 2e5]
            },
            spain: {
                market_cap_basic: [1e7, 3e7, 5e7, 1e8, 3e8, 5e8, 1e9, 1e10, 5e10],
                volume: [5e4, 1e5, 5e5, 75e4, 1e6, 2e6, 5e6, 1e7],
                relative_volume_10d_calc: [0, 1, 2, 3, 4, 5, 10],
                change: [-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 10],
                gap: [-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 10],
                quick_ratio: [0, 1, 2, 3, 4, 5, 10],
                ebitda: [5e5, 1e6, 5e6, 1e7, 5e7, 1e8, 5e8, 1e9, 2e9, 5e9, 1e10, 15e9],
                "Volatility.W": [0, 5, 10, 15, 20],
                "Volatility.M": [0, 5, 10, 15, 20],
                "Volatility.D": [0, 5, 10, 15, 20],
                Mom: [-15, -10, -5, 0, 5, 10, 15],
                goodwill: [5e7, 3e8, 2e9, 1e10, 25e9],
                revenue_per_employee: [1e5, 5e5, 75e4, 1e6, 2e6, 5e6, 1e7, 2e7],
                dividends_paid: [-5e9, -2e9, -3e8, -1e8, -5e7, 0],
                gross_profit: [-2e9, -3e8, -5e7, 5e7, 3e8, 2e9, 1e10, 2e10],
                price_revenue_ttm: [0, 5, 10, 50, 100]
            },
            russia: {
                market_cap_basic: [1e7, 5e7, 3e8, 2e9, 1e10, 2e11, 5e11, 1e12, 2e12],
                volume: [5e4, 1e5, 5e5, 75e4, 1e6, 2e6, 5e6, 1e7, 2e7, 5e7, 1e8, 25e7, 5e8, 1e9],
                average_volume_10d_calc: [5e4, 1e5, 5e5, 75e4, 1e6, 2e6, 5e6, 1e7, 2e7, 5e7, 1e8, 25e7, 5e8, 1e9],
                relative_volume_10d_calc: [0, 1, 2, 3, 4, 5, 10, 15, 20, 50],
                change: [-30, -20, -15, -10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 10, 15, 20, 30],
                open: [10, 20, 50, 100, 200, 500, 1e3, 2e3, 5e3],
                close: [10, 20, 50, 100, 200, 500, 1e3, 2e3, 5e3],
                high: [10, 20, 50, 100, 200, 500, 1e3, 2e3, 5e3],
                low: [10, 20, 50, 100, 200, 500, 1e3, 2e3, 5e3],
                gap: [-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 10],
                quick_ratio: [0, 1, 2, 3, 4, 5, 10, 15, 20],
                price_free_cash_flow_ttm: [0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50],
                change_from_open: [-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 10],
                "Volatility.W": [0, 5, 10, 15, 20, 30, 50],
                "Volatility.M": [0, 5, 10, 15, 20, 30, 50],
                "Volatility.D": [0, 5, 10, 15, 20, 30, 50],
                goodwill: [1e7, 5e7, 3e8, 2e9, 1e10, 1e11],
                revenue_per_employee: [1e5, 5e5, 75e4, 1e6, 2e6, 5e6, 1e7, 2e7, 3e7],
                dividends_paid: [-15e10, -5e10, -1e10, -2e9, -3e8, -1e8, -5e7, 0],
                gross_profit: [-1e10, -2e9, -3e8, -5e7, 5e7, 3e8, 2e9, 1e10, 2e11],
                price_revenue_ttm: [0, 5, 10, 50, 100],
                number_of_employees: [100, 500, 1e3, 1e4, 1e5, 5e5],
                last_annual_eps: [-100, -50, -20, -10, 0, 10, 20, 50, 100, 500, 1e3]
            },
            australia: {
                market_cap_basic: [5e7, 3e8, 2e9, 1e10, 5e10, 1e11, 15e10],
                earnings_per_share_basic_ttm: [-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 10],
                ebitda: [5e5, 1e6, 5e6, 1e7, 5e7, 1e8, 5e8, 1e9, 2e9, 5e9, 1e10, 2e10],
                dividends_paid: [-5e9, -2e9, -3e8, -5e7, 0]
            },
            brazil: {
                market_cap_basic: [1e7, 5e7, 3e8, 2e9, 1e10, 2e11, 5e11, 1e12],
                volume: [5e4, 1e5, 5e5, 75e4, 1e6, 2e6, 5e6, 1e7, 2e7],
                average_volume_10d_calc: [5e4, 1e5, 5e5, 75e4, 1e6, 2e6, 5e6, 1e7, 2e7],
                relative_volume_10d_calc: [0, 1, 2, 3, 4, 5, 10, 15, 20, 50],
                open: [10, 20, 50, 100, 200, 500, 1e3],
                close: [10, 20, 50, 100, 200, 500, 1e3],
                high: [10, 20, 50, 100, 200, 500, 1e3],
                low: [10, 20, 50, 100, 200, 500, 1e3],
                earnings_per_share_basic_ttm: [-50, -20, -10, 0, 10, 20, 50],
                change_from_open: [-20, -10, 0, 10, 20],
                "Volatility.W": [0, 5, 10, 15, 20],
                "Volatility.M": [0, 5, 10, 15, 20],
                goodwill: [5e7, 3e8, 2e9, 1e10],
                revenue_per_employee: [5e4, 1e5, 5e5, 75e4, 1e6, 2e6, 5e6],
                dividends_paid: [-1e10, -2e9, -3e8, -1e8, -5e7, 0],
                net_income: [-2e10, -1e10, -2e9, -3e8, -5e7, 5e7, 3e8, 2e9, 1e10, 2e10],
                gross_profit: [-1e8, -5e7, 5e7, 3e8, 2e9, 1e10, 1e11],
                total_shares_outstanding_fundamental: [5e7, 3e8, 2e9, 5e9, 1e10],
                total_current_assets: [5e7, 3e8, 2e9, 1e10, 1e11],
                total_revenue: [0, 5e7, 3e8, 2e9, 1e10, 2e11],
                price_revenue_ttm: [0, 5, 10, 50, 100, 1e3],
                number_of_employees: [100, 500, 1e3, 1e4, 1e5],
                last_annual_eps: [-100, -50, -20, -10, 0, 10, 20]
            },
            japan: {
                market_cap_basic: [1e7, 5e7, 3e8, 2e9, 1e10, 2e11, 5e11, 1e12, 2e12, 5e12],
                price_revenue_ttm: [0, 5, 10, 50, 100],
                relative_volume_10d_calc: [0, 5, 10, 15, 20, 50],
                change: [-30, -20, -10, 0, 10, 20, 30],
                open: [10, 20, 50, 100, 200, 500, 1e3, 1e4, 1e5],
                close: [10, 20, 50, 100, 200, 500, 1e3, 1e4, 1e5],
                high: [10, 20, 50, 100, 200, 500, 1e3, 1e4, 1e5],
                low: [10, 20, 50, 100, 200, 500, 1e3, 1e4, 1e5],
                gap: [-20, -10, 0, 10, 20],
                ebitda: [5e5, 1e6, 5e6, 1e7, 5e7, 1e8, 5e8, 1e9, 2e9, 5e9, 1e10, 25e9, 5e10, 1e11, 2e11, 5e11],
                change_from_open: [-20, -10, -5, 0, 5, 10, 20],
                "Volatility.W": [0, 5, 10, 15, 20, 30],
                "Volatility.M": [0, 5, 10, 15, 20, 30],
                "Volatility.D": [0, 5, 10, 15, 20, 30],
                revenue_per_employee: [5e4, 1e5, 5e5, 75e4, 1e6, 2e6, 5e6, 1e7, 5e7]
            },
            newzealand: {
                market_cap_basic: [5e7, 3e8, 2e9, 1e10, 5e10, 1e11],
                volume: [5e4, 1e5, 5e5, 75e4, 1e6, 2e6, 5e6, 1e7],
                average_volume_10d_calc: [5e4, 1e5, 5e5, 75e4, 1e6, 2e6, 5e6, 1e7],
                relative_volume_10d_calc: [0, 1, 2, 3, 4, 5, 10, 15],
                open: [5, 10, 20, 50],
                close: [5, 10, 20, 50],
                high: [5, 10, 20, 50],
                low: [5, 10, 20, 50],
                current_ratio: [0, 5, 10, 15, 20, 25],
                quick_ratio: [0, 5, 10, 15, 20, 25],
                earnings_per_share_basic_ttm: [-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 10],
                ebitda: [5e5, 1e6, 5e6, 1e7, 5e7, 1e8, 5e8, 1e9, 2e9, 5e9, 1e10, 2e10],
                change_from_open: [-20, -15, -10, -5, 0, 5, 10, 15, 20],
                "Volatility.W": [0, 1, 2, 3, 4, 5, 10, 15, 20, 30],
                "Volatility.M": [0, 1, 2, 3, 4, 5, 10, 15, 20, 30],
                "Volatility.D": [0, 1, 2, 3, 4, 5, 10, 15, 20, 30],
                ATR: [.25, .5, .75, 1, 1.5, 2],
                Mom: [-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5],
                goodwill: [25e6, 5e7, 1e8, 25e7, 5e8, 2e9],
                revenue_per_employee: [5e4, 1e5, 5e5, 75e4, 1e6, 2e6, 5e6],
                dividends_paid: [-5e9, -2e9, -3e8, -5e7, 0],
                basic_eps_net_income: [-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5],
                net_income: [-5e10, -1e10, -2e9, -3e8, -5e7, 5e7, 3e8, 2e9, 5e9],
                gross_profit: [0, 25e6, 5e7, 25e7, 5e8, 2e9, 1e10],
                total_shares_outstanding_fundamental: [5e7, 3e8, 2e9, 1e10],
                total_current_assets: [5e7, 3e8, 2e9, 1e10],
                total_revenue: [0, 5e7, 3e8, 2e9, 1e10, 25e9],
                earnings_per_share_diluted_ttm: [-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5],
                earnings_per_share_forecast_next_fq: [-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5],
                earnings_per_share_fq: [-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5],
                price_revenue_ttm: [0, 5, 10, 50, 100],
                number_of_employees: [100, 500, 1e3, 1e4, 5e4],
                last_annual_eps: [-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5],
                "Value.Traded": [5e4, 1e5, 5e5, 75e4, 1e6, 2e6, 5e6, 1e7, 2e7]
            },
            turkey: {
                market_cap_basic: [5e6, 1e7, 5e7, 3e8, 2e9, 1e10, 3e10, 5e10],
                relative_volume_10d_calc: [0, 1, 2, 3, 4, 5, 10, 15],
                change: [-20, -15, -10, -5, 0, 5, 10, 15, 20],
                gap: [-20, -10, -5, 0, 5, 10, 20],
                "Volatility.W": [0, 1, 2, 3, 4, 5, 10, 15, 20, 30],
                "Volatility.M": [0, 1, 2, 3, 4, 5, 10, 15, 20, 30],
                "Volatility.D": [0, 1, 2, 3, 4, 5, 10, 15, 20, 30],
                "Value.Traded": [5e4, 1e5, 5e5, 75e4, 1e6, 2e6, 5e6, 1e7, 2e7, 5e7]
            },
            switzerland: {
                volume: [5e4, 1e5, 25e4, 5e5, 75e4, 1e6, 2e6, 5e6],
                average_volume_10d_calc: [5e4, 1e5, 25e4, 5e5, 75e4, 1e6, 2e6, 5e6],
                change: [-20, -15, -10, -5, 0, 5, 10, 15, 20]
            },
            hongkong: {
                market_cap_basic: [5e7, 3e8, 2e9, 1e10, 5e10, 1e11, 2e11, 25e10, 5e11, 75e10, 1e12],
                volume: [5e4, 1e5, 5e5, 75e4, 1e6, 2e6, 5e6, 1e7, 2e7, 5e7, 1e8, 25e7],
                average_volume_10d_calc: [5e4, 1e5, 5e5, 75e4, 1e6, 2e6, 5e6, 1e7, 2e7, 5e7, 1e8, 25e7]
            },
            taiwan: {
                change: [-10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
                "Volatility.W": [0, 1, 2, 3, 4, 5, 10, 15, 20, 30],
                "Volatility.M": [0, 1, 2, 3, 4, 5, 10, 15, 20, 30],
                "Volatility.D": [0, 1, 2, 3, 4, 5, 10, 15, 20, 30]
            },
            netherlands: {},
            belgium: {},
            portugal: {},
            france: {},
            mexico: {
                market_cap_basic: [1e7, 5e7, 3e8, 2e9, 1e10, 2e11, 5e11, 1e12, 2e12],
                change: [-30, -20, -15, -10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 10, 15, 20, 30],
                open: [10, 20, 50, 100, 200, 500, 1e3, 2e3, 5e3],
                close: [10, 20, 50, 100, 200, 500, 1e3, 2e3, 5e3],
                high: [10, 20, 50, 100, 200, 500, 1e3, 2e3, 5e3],
                low: [10, 20, 50, 100, 200, 500, 1e3, 2e3, 5e3]
            },
            canada: {
                volume: [5e4, 1e5, 5e5, 75e4, 1e6, 2e6, 5e6, 1e7]
            },
            colombia: {},
            uae: {},
            nigeria: {},
            singapore: {},
            germany: {
                volume: [5e4, 1e5, 5e5, 75e4, 1e6, 2e6, 5e6, 1e7, 25e6]
            },
            pakistan: {},
            peru: {},
            poland: {
                volume: [5e4, 1e5, 2e5, 5e5, 75e4, 1e6, 2e6]
            },
            italy: {},
            argentina: {
                volume: [5e4, 1e5, 2e5, 5e5, 75e4, 1e6, 2e6, 5e6, 1e7]
            },
            israel: {},
            ireland: {},
            egypt: {},
            srilanka: {},
            serbia: {},
            chile: {},
            china: {},
            malaysia: {},
            morocco: {},
            ksa: {},
            bahrain: {},
            qatar: {},
            indonesia: {},
            finland: {},
            iceland: {},
            denmark: {},
            romania: {},
            hungary: {},
            sweden: {},
            slovakia: {},
            lithuania: {},
            luxembourg: {},
            estonia: {},
            latvia: {},
            vietnam: {},
            rsa: {},
            thailand: {},
            tunisia: {},
            korea: {},
            kenya: {},
            kuwait: {},
            norway: {},
            philippines: {},
            greece: {},
            venezuela: {},
            cyprus: {},
            bangladesh: {},
            austria: {},
            czech: {}
        }
          , y = {
            forex: {
                change_abs: [-50, -20, -10, 0, 10, 20, 50],
                change: [-5, -1, -.5, -.4, -.3, -.2, -.1, 0, -.1, .2, .3, .4, .5, 1, 5],
                bid: [5, 10, 20, 50, 100, 500, 1e3, 5e3],
                ask: [5, 10, 20, 50, 100, 500, 1e3, 5e3],
                open: [5, 10, 20, 50, 100, 500, 1e3, 5e3],
                close: [5, 10, 20, 50, 100, 500, 1e3, 5e3],
                high: [5, 10, 20, 50, 100, 500, 1e3, 5e3],
                low: [5, 10, 20, 50, 100, 500, 1e3, 5e3],
                change_from_open: [-5, -2.5, -1, -.5, -.4, -.3, -.2, -.1, 0, -.1, .2, .3, .4, .5, 1, 2.5, 5],
                "Perf.W": [-50, -20, -10, 0, 10, 20, 50],
                "Perf.1M": [-50, -20, -10, 0, 10, 20, 50],
                "Perf.3M": [-50, -20, -10, 0, 10, 20, 50],
                "Perf.6M": [-50, -20, -10, 0, 10, 20, 50],
                "Perf.Y": [-50, -20, -10, 0, 10, 20, 50],
                "Perf.YTD": [-50, -20, -10, 0, 10, 20, 50],
                "Volatility.W": [0, 5, 10, 15, 20, 30, 50, 70],
                "Volatility.M": [0, 5, 10, 15, 20, 30, 50, 70],
                "Volatility.D": [0, 5, 10, 15, 20, 30, 50, 70],
                ADX: [10, 20, 30, 40, 50, 60, 70, 80, 90],
                ATR: [.25, .5, .75, 1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5],
                Mom: [-30, -20, -15, -10, -5, 0, 5, 10, 15, 20, 30],
                CCI20: [-100, -50, -20, -10, 0, 10, 20, 50, 100]
            }
        }
          , b = {
            crypto: {
                market_cap_calc: [1e4, 1e5, 5e5, 1e6, 1e7, 3e8, 2e9, 1e10, 5e10, 1e11],
                market_cap_diluted_calc: [1e4, 1e5, 5e5, 1e6, 1e7, 3e8, 2e9, 1e10, 5e10, 1e11],
                total_shares_outstanding: [1e6, 5e6, 1e7, 5e7, 1e8, 5e8, 1e9, 5e9, 1e10, 5e10, 1e11],
                total_shares_diluted: [1e6, 5e6, 1e7, 5e7, 1e8, 5e8, 1e9, 5e9, 1e10, 5e10, 1e11],
                total_value_traded: [1e4, 1e5, 5e5, 1e6, 1e7, 3e8, 2e9, 1e10, 5e10],
                volume: [5e4, 1e5, 5e5, 75e4, 1e6, 2e6, 5e6, 1e7, 2e7, 5e7],
                average_volume_10d_calc: [5e4, 1e5, 5e5, 75e4, 1e6, 2e6, 5e6, 1e7, 2e7, 5e7, 3e8, 5e8, 2e9],
                relative_volume_10d_calc: [0, .5, 1, 1.5, 2, 2.5, 5],
                change_abs: [-100, -50, -20, -10, 0, 10, 20, 50, 100],
                change: [-50, -20, -10, 0, 10, 20, 50],
                bid: [5, 10, 20, 50, 100, 500, 1e3, 5e3],
                ask: [5, 10, 20, 50, 100, 500, 1e3, 5e3],
                open: [5, 10, 20, 50, 100, 500, 1e3, 5e3],
                close: [5, 10, 20, 50, 100, 500, 1e3, 5e3],
                high: [5, 10, 20, 50, 100, 500, 1e3, 5e3],
                low: [5, 10, 20, 50, 100, 500, 1e3, 5e3],
                change_from_open: [-10, -5, -4, -3, -2, -1, -.5, 0, .5, 1, 2, 3, 4, 5, 10],
                "Perf.W": [-50, -20, -10, 0, 10, 20, 50],
                "Perf.1M": [-50, -20, -10, 0, 10, 20, 50],
                "Perf.3M": [-50, -20, -10, 0, 10, 20, 50],
                "Perf.6M": [-50, -20, -10, 0, 10, 20, 50],
                "Perf.Y": [-50, -20, -10, 0, 10, 20, 50],
                "Perf.YTD": [-50, -20, -10, 0, 10, 20, 50],
                "Volatility.W": [0, 5, 10, 15, 20, 30, 50, 70],
                "Volatility.M": [0, 5, 10, 15, 20, 30, 50, 70],
                "Volatility.D": [0, 5, 10, 15, 20, 30, 50, 70],
                ADX: [10, 20, 30, 40, 50, 60, 70, 80, 90],
                ATR: [.25, .5, .75, 1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5],
                Mom: [-30, -20, -15, -10, -5, 0, 5, 10, 15, 20, 30],
                CCI20: [-100, -50, -20, -10, 0, 10, 20, 50, 100],
                "24h_vol|5": [5e4, 1e5, 5e5, 75e4, 1e6, 2e6, 5e6, 1e7, 2e7, 5e7]
            }
        }
          , w = {
            cfd: {
                volume: [1e3, 5e3, 1e4, 5e4, 1e5],
                average_volume_10d_calc: [5e3, 1e4, 5e4, 1e5, 1e6, 1e7, 1e8, 1e9],
                relative_volume_10d_calc: [0, .1, .2, .3, .4, .5, .6, .7, .8, .9, 1],
                change_abs: [-50, -20, -10, 0, 10, 20, 50],
                change: [-5, -1, -.5, -.4, -.3, -.2, -.1, 0, -.1, .2, .3, .4, .5, 1, 5],
                bid: [5, 10, 20, 50, 100, 500, 1e3, 5e3],
                ask: [5, 10, 20, 50, 100, 500, 1e3, 5e3],
                open: [5, 10, 20, 50, 100, 500, 1e3, 5e3],
                close: [5, 10, 20, 50, 100, 500, 1e3, 5e3],
                high: [5, 10, 20, 50, 100, 500, 1e3, 5e3],
                low: [5, 10, 20, 50, 100, 500, 1e3, 5e3],
                change_from_open: [-5, -4, -3, -2, -1, -.5, 0, .5, 1, 2, 3, 4, 5],
                "Perf.W": [-50, -20, -10, 0, 10, 20, 50],
                "Perf.1M": [-50, -20, -10, 0, 10, 20, 50],
                "Perf.3M": [-50, -20, -10, 0, 10, 20, 50],
                "Perf.6M": [-50, -20, -10, 0, 10, 20, 50],
                "Perf.Y": [-50, -20, -10, 0, 10, 20, 50],
                "Perf.YTD": [-50, -20, -10, 0, 10, 20, 50],
                "Volatility.W": [0, 5, 10, 15, 20, 30, 50, 70],
                "Volatility.M": [0, 5, 10, 15, 20, 30, 50, 70],
                "Volatility.D": [0, 5, 10, 15, 20, 30, 50, 70],
                ADX: [10, 20, 30, 40, 50, 60, 70, 80, 90],
                ATR: [.25, .5, .75, 1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5],
                Mom: [-30, -20, -15, -10, -5, 0, 5, 10, 15, 20, 30],
                CCI20: [-100, -50, -20, -10, 0, 10, 20, 50, 100]
            }
        };
        function S(e) {
            switch (e) {
            case "stock":
            case "futures":
                return f;
            case "forex":
                return y;
            case "crypto":
            case "crypto_mkt":
                return b;
            case "cfd":
                return w
            }
            return f
        }
        const C = {
            america: {
                top_gainers: {
                    close: [2, 1e4]
                },
                top_losers: {
                    close: [2, 1e4]
                },
                unusual_volume: {
                    relative_volume_10d_calc: {
                        operator: "greater",
                        value: 1
                    }
                },
                earnings_this_week: {
                    get earnings_release_next_date() {
                        return o.i18next(null, void 0, o(847228))
                    }
                }
            },
            uk: {
                top_gainers: {
                    close: [2, 1e4]
                },
                top_losers: {
                    close: [2, 1e4]
                }
            },
            india: {
                top_gainers: {
                    close: [2, 1e4]
                },
                top_losers: {
                    close: [2, 1e4]
                },
                unusual_volume: {
                    relative_volume_10d_calc: {
                        operator: "greater",
                        value: 2
                    }
                }
            },
            spain: {
                top_gainers: {
                    close: [1, 1e4]
                },
                top_losers: {
                    close: [1, 1e4]
                },
                unusual_volume: {
                    relative_volume_10d_calc: {
                        operator: "greater",
                        value: .1
                    }
                }
            },
            russia: {
                top_gainers: {
                    close: null
                },
                top_losers: {
                    close: null
                },
                unusual_volume: {
                    relative_volume_10d_calc: {
                        operator: "greater",
                        value: .5
                    }
                }
            },
            australia: {
                top_gainers: {
                    close: null
                },
                top_losers: {
                    close: null
                }
            },
            brazil: {
                top_gainers: {
                    close: null
                },
                top_losers: {
                    close: null
                },
                unusual_volume: {
                    relative_volume_10d_calc: {
                        operator: "greater",
                        value: .5
                    }
                }
            },
            japan: {
                top_gainers: {
                    close: [2, 1e4]
                },
                top_losers: {
                    close: [2, 1e4]
                }
            },
            newzealand: {
                top_gainers: {
                    close: [2, 1e4]
                },
                top_losers: {
                    close: [2, 1e4]
                },
                unusual_volume: {
                    relative_volume_10d_calc: {
                        operator: "greater",
                        value: .2
                    }
                }
            },
            turkey: {
                top_gainers: {
                    close: null
                },
                top_losers: {
                    close: null
                },
                unusual_volume: {
                    relative_volume_10d_calc: {
                        operator: "greater",
                        value: .2
                    }
                }
            },
            switzerland: {
                top_gainers: {
                    close: [.1, 1e4]
                },
                top_losers: {
                    close: [.1, 1e4]
                }
            },
            hongkong: {
                top_gainers: {
                    close: [2, 1e4]
                },
                top_losers: {
                    close: [2, 1e4]
                }
            },
            taiwan: {
                top_gainers: {
                    close: [2, 1e4]
                },
                top_losers: {
                    close: [2, 1e4]
                }
            },
            netherlands: {
                top_gainers: {
                    close: [2, 1e4]
                },
                top_losers: {
                    close: [2, 1e4]
                }
            },
            belgium: {
                top_gainers: {
                    close: [2, 1e4]
                },
                top_losers: {
                    close: [2, 1e4]
                }
            },
            portugal: {
                top_gainers: {
                    close: [2, 1e4]
                },
                top_losers: {
                    close: [2, 1e4]
                }
            },
            france: {
                top_gainers: {
                    close: [2, 1e4]
                },
                top_losers: {
                    close: [2, 1e4]
                }
            },
            mexico: {
                top_gainers: {
                    close: [2, 1e4]
                },
                top_losers: {
                    close: [2, 1e4]
                },
                unusual_volume: {
                    relative_volume_10d_calc: {
                        operator: "greater",
                        value: .5
                    }
                }
            },
            canada: {
                top_gainers: {
                    close: [2, 1e4]
                },
                top_losers: {
                    close: [2, 1e4]
                }
            },
            singapore: {
                top_gainers: {
                    close: [2, 1e4]
                },
                top_losers: {
                    close: [2, 1e4]
                }
            },
            germany: {
                top_gainers: {
                    close: [1, 1e4]
                },
                top_losers: {
                    close: [1, 1e4]
                }
            },
            poland: {
                top_gainers: {
                    close: [1, 1e4]
                },
                top_losers: {
                    close: [1, 1e4]
                },
                unusual_volume: {
                    relative_volume_10d_calc: {
                        operator: "greater",
                        value: .5
                    }
                }
            },
            israel: {
                top_gainers: {
                    close: [2, 1e4]
                },
                top_losers: {
                    close: [2, 1e4]
                },
                unusual_volume: {
                    relative_volume_10d_calc: {
                        operator: "greater",
                        value: .5
                    }
                }
            },
            italy: {
                top_gainers: {
                    close: [2, 1e4]
                },
                top_losers: {
                    close: [2, 1e4]
                },
                unusual_volume: {
                    relative_volume_10d_calc: {
                        operator: "greater",
                        value: .5
                    }
                }
            },
            argentina: {
                top_gainers: {
                    close: [2, 1e4]
                },
                top_losers: {
                    close: [2, 1e4]
                },
                unusual_volume: {
                    relative_volume_10d_calc: {
                        operator: "greater",
                        value: .2
                    }
                }
            },
            forex: {
                top_gainers: {
                    close: null
                },
                top_losers: {
                    close: null
                },
                most_capitalized: null,
                earnings_this_week: null,
                volume_leaders: null,
                most_volatile: {
                    "Volatility.D": {
                        operator: "greater",
                        value: 1
                    }
                },
                unusual_volume: null,
                high_dividend: null
            },
            crypto: {
                top_gainers: {
                    close: null
                },
                top_losers: {
                    close: null
                },
                most_capitalized: null,
                earnings_this_week: null,
                volume_leaders: null,
                most_volatile: {
                    "Volatility.D": {
                        operator: "greater",
                        value: 1
                    }
                },
                unusual_volume: null,
                high_dividend: null
            },
            china: {
                top_gainers: {
                    close: [2, 1e4]
                },
                top_losers: {
                    close: [2, 1e4]
                }
            },
            chile: {
                top_gainers: {
                    close: [1, 1e4]
                },
                top_losers: {
                    close: [1, 1e4]
                }
            },
            bahrain: {
                top_gainers: {
                    close: [.01, 1e4]
                },
                top_losers: {
                    close: [.01, 1e4]
                }
            },
            malaysia: {
                top_gainers: {
                    close: [.01, 1e4]
                },
                top_losers: {
                    close: [.01, 1e4]
                }
            },
            serbia: {
                top_gainers: {
                    close: [.1, 1e4]
                },
                top_losers: {
                    close: [.1, 1e4]
                }
            },
            ksa: {
                top_gainers: {
                    close: [1, 1e4]
                },
                top_losers: {
                    close: [1, 1e4]
                }
            },
            egypt: {
                top_gainers: {
                    close: [1, 1e4]
                },
                top_losers: {
                    close: [1, 1e4]
                }
            }
        };
        function k(e) {
            return e.reduce(( (e, t) => e.concat(function(e) {
                return l[e] && l[e].stocks || []
            }(t))), [])
        }
        const x = ["uk", "luxembourg", "norway", "slovakia", "sweden", "philippines", "korea"];
        function M() {
            return x
        }
        const E = {
            india: ["NSE"]
        };
        function F() {
            return E
        }
    }
    ,
    696788: (e, t, o) => {
        "use strict";
        o.d(t, {
            SIGNAL: () => r,
            generateRecommendsRequest: () => u,
            getRecommendsRange: () => c,
            signalComputationFunctions: () => l,
            signalDisplayFunctions: () => a
        });
        var i = o(536794)
          , n = o(444372);
        const r = {
            STRONG_BUY: {
                key: "Strong Buy",
                get title() {
                    return n.t(null, {
                        context: "screener_rating"
                    }, o(632309))
                },
                get shortTitle() {
                    return n.t(null, {
                        context: "screener_rating"
                    }, o(632309))
                },
                cssClass: "tv-screener-table__signal--strong-buy"
            },
            BUY: {
                key: "Buy",
                get title() {
                    return n.t(null, {
                        context: "screener_rating"
                    }, o(280903))
                },
                get shortTitle() {
                    return n.t(null, {
                        context: "first_letter_of_Buy"
                    }, o(355777))
                },
                cssClass: "tv-screener-table__signal--buy"
            },
            STRONG_SELL: {
                key: "Strong Sell",
                get title() {
                    return n.t(null, {
                        context: "screener_rating"
                    }, o(488234))
                },
                get shortTitle() {
                    return n.t(null, {
                        context: "screener_rating"
                    }, o(488234))
                },
                cssClass: "tv-screener-table__signal--strong-sell"
            },
            SELL: {
                key: "Sell",
                get title() {
                    return n.t(null, {
                        context: "screener_rating"
                    }, o(71780))
                },
                get shortTitle() {
                    return n.t(null, {
                        context: "first_letter_of_Sell"
                    }, o(992949))
                },
                cssClass: "tv-screener-table__signal--sell"
            },
            NEUTRAL: {
                key: "Neutral",
                get title() {
                    return n.t(null, {
                        context: "screener_rating"
                    }, o(147094))
                },
                get shortTitle() {
                    return n.t(null, {
                        context: "first_letter_of_Neutral"
                    }, o(695879))
                },
                cssClass: "tv-screener-table__signal--neutral"
            }
        }
          , s = (e, t=!1, o=!1) => {
            const i = t ? "" : " i-hidden";
            return o ? `<span title="${e.title}" class="tv-screener-table__signal apply-common-tooltip ${e.cssClass}${i}">${e.shortTitle}</span>` : `<span class="tv-screener-table__signal ${e.cssClass}${i}">${e.title}</span>`
        }
          , l = {
            computeMASignal: (e, t) => {
                let o = r.NEUTRAL;
                return e < t && (o = r.BUY),
                e > t && (o = r.SELL),
                o
            }
            ,
            computeRSISignal: (e, t) => {
                let o = r.NEUTRAL;
                return e < 30 && t < e && (o = r.BUY),
                e > 70 && t > e && (o = r.SELL),
                o
            }
            ,
            computeStochSignal: (e, t, o, i) => {
                let n = r.NEUTRAL;
                return e < 20 && t < 20 && e > t && o < i && (n = r.BUY),
                e > 80 && t > 80 && e < t && o > i && (n = r.SELL),
                n
            }
            ,
            computeCCI20Signal: (e, t) => {
                let o = r.NEUTRAL;
                return e < -100 && e > t && (o = r.BUY),
                e > 100 && e < t && (o = r.SELL),
                o
            }
            ,
            computeADXSignal: (e, t, o, i, n) => {
                let s = r.NEUTRAL;
                return e > 20 && i < n && t > o && (s = r.BUY),
                e > 20 && i > n && t < o && (s = r.SELL),
                s
            }
            ,
            computeAOSignal: (e, t, o) => {
                let i = r.NEUTRAL;
                return (e > 0 && t < 0 || e > 0 && t > 0 && e > t && o > t) && (i = r.BUY),
                (e < 0 && t > 0 || e < 0 && t < 0 && e < t && o < t) && (i = r.SELL),
                i
            }
            ,
            computeMomSignal: (e, t) => {
                let o = r.NEUTRAL;
                return e > t && (o = r.BUY),
                e < t && (o = r.SELL),
                o
            }
            ,
            computeMACDSignal: (e, t) => {
                let o = r.NEUTRAL;
                return e > t && (o = r.BUY),
                e < t && (o = r.SELL),
                o
            }
            ,
            computeBBBuySignal: (e, t) => {
                let o = r.NEUTRAL;
                return e < t && (o = r.BUY),
                o
            }
            ,
            computeBBSellSignal: (e, t) => {
                let o = r.NEUTRAL;
                return e > t && (o = r.SELL),
                o
            }
            ,
            computePSARSignal: (e, t) => {
                let o = r.NEUTRAL;
                return e < t && (o = r.BUY),
                e > t && (o = r.SELL),
                o
            }
            ,
            computeRecommendSignal: e => {
                let t;
                return e >= -1 && e < -.5 && (t = r.STRONG_SELL),
                e >= -.5 && e < -.1 && (t = r.SELL),
                e >= -.1 && e <= .1 && (t = r.NEUTRAL),
                e > .1 && e <= .5 && (t = r.BUY),
                e > .5 && e <= 1 && (t = r.STRONG_BUY),
                t
            }
            ,
            computeSimpleSignal: e => {
                let t = r.NEUTRAL;
                return -1 === e && (t = r.SELL),
                1 === e && (t = r.BUY),
                t
            }
        }
          , a = {
            processMASignal: (e, t, o, i) => {
                if (null === t || null === o)
                    return e;
                const n = l.computeMASignal(t, o);
                return `${e} ${s(n, i.displaySignal, !0)}`
            }
            ,
            processRSISignal: (e, t, o, i) => {
                if (null === t)
                    return e;
                const n = l.computeRSISignal(t, o);
                return `${e} ${s(n, i.displaySignal, !0)}`
            }
            ,
            processStochSignal: (e, t, o, i, n, r) => {
                if (null === t || null === o)
                    return e;
                const a = l.computeStochSignal(t, o, i, n);
                return `${e} ${s(a, r.displaySignal, !0)}`
            }
            ,
            processCCI20Signal: (e, t, o, i) => {
                if (null === t || null === o)
                    return e;
                const n = l.computeCCI20Signal(t, o);
                return `${e} ${s(n, i.displaySignal, !0)}`
            }
            ,
            processADXSignal: (e, t, o, i, n, r, a) => {
                if (null === t || null === o || null === i)
                    return e;
                const c = l.computeADXSignal(t, o, i, n, r);
                return `${e} ${s(c, a.displaySignal, !0)}`
            }
            ,
            processAOSignal: (e, t, o, i, n) => {
                if (null === t || null === o || null === i)
                    return e;
                const r = l.computeAOSignal(t, o, i);
                return `${e} ${s(r, n.displaySignal, !0)}`
            }
            ,
            processMomSignal: (e, t, o, i) => {
                if (null === t || null === o)
                    return e;
                const n = l.computeMomSignal(t, o);
                return `${e} ${s(n, i.displaySignal, !0)}`
            }
            ,
            processMACDSignal: (e, t, o, i) => {
                if (null === t || null === o)
                    return e;
                const n = l.computeMACDSignal(t, o);
                return `${e} ${s(n, i.displaySignal, !0)}`
            }
            ,
            processBBBuySignal: (e, t, o, i) => {
                if (null === t || null === o)
                    return e;
                const n = l.computeBBBuySignal(t, o);
                return `${e} ${s(n, i.displaySignal, !0)}`
            }
            ,
            processBBSellSignal: (e, t, o, i) => {
                if (null === t || null === o)
                    return e;
                const n = l.computeBBSellSignal(t, o);
                return `${e} ${s(n, i.displaySignal, !0)}`
            }
            ,
            processPSARSignal: (e, t, o, i) => {
                if (null === t || null === o)
                    return e;
                const n = l.computePSARSignal(t, o);
                return `${e} ${s(n, i.displaySignal, !0)}`
            }
            ,
            processRecommendSignal: e => {
                if (null === e || !(0,
                i.isNumber)(e))
                    return e;
                const t = l.computeRecommendSignal(e);
                return void 0 === t ? e : `${s(t, !0)}`
            }
            ,
            processSimpleSignal: (e, t, o) => {
                if (null === t || "&mdash;" === e)
                    return e;
                const i = l.computeSimpleSignal(t);
                return `${e} ${s(i, o.displaySignal, !0)}`
            }
        }
          , c = () => [r.STRONG_BUY.title, r.BUY.title, r.NEUTRAL.title, r.SELL.title, r.STRONG_SELL.title]
          , d = e => {
            let t, o;
            return e === r.STRONG_SELL.title && (t = [-1, -.5],
            o = -.5),
            e === r.SELL.title && (t = [-.5, -.1],
            o = -.1),
            e === r.NEUTRAL.title && (t = [-.1, .1]),
            e === r.BUY.title && (t = [.1, .5],
            o = .1),
            e === r.STRONG_BUY.title && (t = [.5, 1],
            o = .5),
            {
                right: t,
                notEqual: o
            }
        }
          , u = (e, t) => {
            if (Array.isArray(e)) {
                const o = e.map((e => d(e)))
                  , i = []
                  , n = [];
                for (const e of o) {
                    if (void 0 !== e.notEqual) {
                        o.filter((t => t.notEqual !== e.notEqual && (t.equal === e.notEqual || t.right && (t.right[0] === e.notEqual || t.right[1] === e.notEqual)))).length || i.push({
                            left: t,
                            operation: "nequal",
                            right: e.notEqual
                        })
                    }
                    e.right && n.push({
                        left: t,
                        operation: "in_range",
                        right: e.right
                    }),
                    void 0 !== e.equal && n.push({
                        left: t,
                        operation: "equal",
                        right: e.equal
                    })
                }
                return {
                    filter: i,
                    filter2AndPart: n,
                    filter2Flag: !0
                }
            }
            const o = d(e);
            if (0 === o.equal)
                return {
                    left: t,
                    operation: "equal",
                    right: 0
                };
            const i = [{
                left: t,
                operation: "in_range",
                right: o.right
            }];
            return void 0 !== o.notEqual && i.push({
                left: t,
                operation: "nequal",
                right: o.notEqual
            }),
            i
        }
    }
    ,
    104461: (e, t, o) => {
        "use strict";
        o.d(t, {
            getProductIdFromStockExchange: () => l,
            hasStockScannerExchange: () => s,
            isEmbedUnrestrictedExchange: () => a
        });
        var i = o(158841)
          , n = o(772187);
        const r = [];
        for (const e in i)
            i.hasOwnProperty(e) && i[e].hasOwnProperty("exchangesStocks") && i[e].exchangesStocks.forEach((e => {
                r.push(e)
            }
            ));
        const s = e => (e = {
            OSL: "EURONEXTOSE",
            BCBA: "BYMA",
            AMEX: "NYSE ARCA"
        }[e] || e,
        r.includes(e));
        function l(e) {
            return n[e] || null
        }
        function a(e) {
            return ["ASX", "ATHEX"].includes(e)
        }
    }
    ,
    993815: (e, t, o) => {
        "use strict";
        o.d(t, {
            defaultStockMarket: () => r,
            markets: () => n
        });
        var i = o(554620);
        const n = (0,
        o(261091).getMarkets)()
          , r = n.find((e => e.value === (0,
        i.getDefaultStockMarket)()))
    }
    ,
    261091: (e, t, o) => {
        "use strict";
        o.d(t, {
            getMarkets: () => n
        });
        var i = o(554620);
        function n() {
            return e = (0,
            i.getMarketsByScreenerType)("stock"),
            Object.entries(e).map(( ([e,t]) => {
                const o = t.group;
                return {
                    flag: t.flag,
                    get name() {
                        return t.title
                    },
                    desc: t.stocks.join(", "),
                    country: t.country,
                    group: o,
                    value: e
                }
            }
            ));
            var e
        }
    }
    ,
    547465: (e, t, o) => {
        "use strict";
        o.r(t),
        o.d(t, {
            Delegate: () => i.Delegate
        });
        var i = o(978956)
    }
    ,
    688706: (e, t, o) => {
        "use strict";
        o.d(t, {
            triesTranslateCountrieName: () => n
        });
        var i = o(444372);
        function n(e) {
            const t = r.get(e);
            return void 0 !== t ? t() : e
        }
        const r = new Map([["Africa", () => i.t(null, void 0, o(578163))], ["Americas", () => i.t(null, void 0, o(615493))], ["Asia", () => i.t(null, void 0, o(360389))], ["Europe", () => i.t(null, void 0, o(546890))], ["Pacific", () => i.t(null, void 0, o(847081))], ["Middle East", () => i.t(null, void 0, o(64614))], ["Afghanistan", () => i.t(null, void 0, o(641527))], ["Åland Islands", () => i.t(null, void 0, o(831928))], ["Aland Islands", () => i.t(null, void 0, o(831928))], ["Albania", () => i.t(null, void 0, o(959086))], ["Algeria", () => i.t(null, void 0, o(856683))], ["American Samoa", () => i.t(null, void 0, o(61015))], ["Andorra", () => i.t(null, void 0, o(673791))], ["Angola", () => i.t(null, void 0, o(512563))], ["Anguilla", () => i.t(null, void 0, o(372813))], ["Antarctica", () => i.t(null, void 0, o(166557))], ["Antigua and Barbuda", () => i.t(null, void 0, o(817607))], ["Argentina", () => i.t(null, void 0, o(106226))], ["Armenia", () => i.t(null, void 0, o(533146))], ["Aruba", () => i.t(null, void 0, o(100499))], ["Australia", () => i.t(null, void 0, o(722157))], ["Austria", () => i.t(null, void 0, o(696600))], ["Azerbaijan", () => i.t(null, void 0, o(692604))], ["Bahamas", () => i.t(null, void 0, o(1096))], ["Bahrain", () => i.t(null, void 0, o(290594))], ["Bangladesh", () => i.t(null, void 0, o(225040))], ["Barbados", () => i.t(null, void 0, o(907853))], ["Belarus", () => i.t(null, void 0, o(58753))], ["Belgium", () => i.t(null, void 0, o(795521))], ["Belize", () => i.t(null, void 0, o(73958))], ["Benin", () => i.t(null, void 0, o(59986))], ["Bermuda", () => i.t(null, void 0, o(155340))], ["Bhutan", () => i.t(null, void 0, o(264708))], ["Bolivia", () => i.t(null, void 0, o(568977))], ["Bonaire, Sint Eustatius and Saba", () => i.t(null, void 0, o(717326))], ["Bosnia and Herzegovina", () => i.t(null, void 0, o(749972))], ["Botswana", () => i.t(null, void 0, o(682635))], ["Bouvet Island", () => i.t(null, void 0, o(987629))], ["Brazil", () => i.t(null, void 0, o(497100))], ["British Indian Ocean Territory", () => i.t(null, void 0, o(695239))], ["British Virgin Islands", () => i.t(null, void 0, o(179027))], ["Brunei", () => i.t(null, void 0, o(44542))], ["Bulgaria", () => i.t(null, void 0, o(734548))], ["Burkina Faso", () => i.t(null, void 0, o(691063))], ["Burundi", () => i.t(null, void 0, o(395606))], ["Cabo Verde", () => i.t(null, void 0, o(835641))], ["Cambodia", () => i.t(null, void 0, o(68997))], ["Cameroon", () => i.t(null, void 0, o(213250))], ["Canada", () => i.t(null, void 0, o(588590))], ["Cayman Islands", () => i.t(null, void 0, o(847135))], ["Central African Republic", () => i.t(null, void 0, o(907024))], ["Chad", () => i.t(null, void 0, o(556572))], ["Chile", () => i.t(null, void 0, o(887583))], ["China", () => i.t(null, void 0, o(226207))], ["Christmas Island", () => i.t(null, void 0, o(192739))], ["Cocos (Keeling) Islands", () => i.t(null, void 0, o(777344))], ["Colombia", () => i.t(null, void 0, o(882104))], ["Comoros", () => i.t(null, void 0, o(84472))], ["Congo", () => i.t(null, void 0, o(796825))], ["Congo (the Democratic Republic of the)", () => i.t(null, void 0, o(179502))], ["Cook Islands", () => i.t(null, void 0, o(366326))], ["Curacao", () => i.t(null, void 0, o(738609))], ["Costa Rica", () => i.t(null, void 0, o(153161))], ["Côte d'Ivoire", () => i.t(null, void 0, o(430952))], ["Croatia", () => i.t(null, void 0, o(96747))], ["Cuba", () => i.t(null, void 0, o(909463))], ["Curaçao", () => i.t(null, void 0, o(429420))], ["Cyprus", () => i.t(null, void 0, o(935415))], ["Czechia", () => i.t(null, void 0, o(659645))], ["Czech Republic", () => i.t(null, void 0, o(728962))], ["Denmark", () => i.t(null, void 0, o(877527))], ["Djibouti", () => i.t(null, void 0, o(44760))], ["Dominica", () => i.t(null, void 0, o(224496))], ["Dominican Republic", () => i.t(null, void 0, o(213047))], ["Ecuador", () => i.t(null, void 0, o(236580))], ["Egypt", () => i.t(null, void 0, o(324432))], ["El Salvador", () => i.t(null, void 0, o(561191))], ["Equatorial Guinea", () => i.t(null, void 0, o(161980))], ["Eritrea", () => i.t(null, void 0, o(429824))], ["Estonia", () => i.t(null, void 0, o(714153))], ["Falkland Islands", () => i.t(null, void 0, o(455450))], ["Eswatini", () => i.t(null, void 0, o(544127))], ["Ethiopia", () => i.t(null, void 0, o(634249))], ["European Union", () => i.t(null, void 0, o(256596))], ["Falkland Islands (Malvinas)", () => i.t(null, void 0, o(357436))], ["Faroe Islands", () => i.t(null, void 0, o(330249))], ["Fiji", () => i.t(null, void 0, o(883259))], ["Finland", () => i.t(null, void 0, o(223442))], ["France", () => i.t(null, void 0, o(891160))], ["French Guiana", () => i.t(null, void 0, o(438361))], ["French Polynesia", () => i.t(null, void 0, o(886670))], ["French Southern Territories", () => i.t(null, void 0, o(366930))], ["Gabon", () => i.t(null, void 0, o(226211))], ["Gambia", () => i.t(null, void 0, o(952020))], ["Georgia", () => i.t(null, void 0, o(43846))], ["Germany", () => i.t(null, void 0, o(403447))], ["Ghana", () => i.t(null, void 0, o(573817))], ["Gibraltar", () => i.t(null, void 0, o(656047))], ["Greece", () => i.t(null, void 0, o(327434))], ["Greenland", () => i.t(null, void 0, o(1235))], ["Grenada", () => i.t(null, void 0, o(881641))], ["Guadeloupe", () => i.t(null, void 0, o(473562))], ["Guam", () => i.t(null, void 0, o(567540))], ["Guatemala", () => i.t(null, void 0, o(961914))], ["Guernsey", () => i.t(null, void 0, o(681937))], ["Guinea", () => i.t(null, void 0, o(317252))], ["Guinea-Bissau", () => i.t(null, void 0, o(967090))], ["Guyana", () => i.t(null, void 0, o(855033))], ["Haiti", () => i.t(null, void 0, o(887765))], ["Heard Island and McDonald Islands", () => i.t(null, void 0, o(80508))], ["Holy See", () => i.t(null, void 0, o(99838))], ["Honduras", () => i.t(null, void 0, o(282792))], ["Hong Kong", () => i.t(null, void 0, o(357640))], ["Hungary", () => i.t(null, void 0, o(893317))], ["Iceland", () => i.t(null, void 0, o(217499))], ["India", () => i.t(null, void 0, o(719912))], ["Indonesia", () => i.t(null, void 0, o(532355))], ["Iraq", () => i.t(null, void 0, o(128295))], ["Ireland", () => i.t(null, void 0, o(501759))], ["Isle of Man", () => i.t(null, void 0, o(521579))], ["Israel", () => i.t(null, void 0, o(368291))], ["Italy", () => i.t(null, void 0, o(35146))], ["Jamaica", () => i.t(null, void 0, o(503861))], ["Japan", () => i.t(null, void 0, o(200186))], ["Jersey", () => i.t(null, void 0, o(645271))], ["Jordan", () => i.t(null, void 0, o(75447))], ["Kazakhstan", () => i.t(null, void 0, o(892613))], ["Kenya", () => i.t(null, void 0, o(981233))], ["Kiribati", () => i.t(null, void 0, o(184523))], ["Kosovo", () => i.t(null, void 0, o(757671))], ["Kuwait", () => i.t(null, void 0, o(76614))], ["Kyrgyzstan", () => i.t(null, void 0, o(35025))], ["Laos", () => i.t(null, void 0, o(185682))], ["Latvia", () => i.t(null, void 0, o(262063))], ["Lebanon", () => i.t(null, void 0, o(516210))], ["Lesotho", () => i.t(null, void 0, o(365317))], ["Liberia", () => i.t(null, void 0, o(710525))], ["Libya", () => i.t(null, void 0, o(301115))], ["Liechtenstein", () => i.t(null, void 0, o(813250))], ["Lithuania", () => i.t(null, void 0, o(868380))], ["Luxembourg", () => i.t(null, void 0, o(681038))], ["Macau", () => i.t(null, void 0, o(107872))], ["Macao", () => i.t(null, void 0, o(978374))], ["Macedonia", () => i.t(null, void 0, o(739008))], ["Madagascar", () => i.t(null, void 0, o(133712))], ["Malawi", () => i.t(null, void 0, o(546923))], ["Malaysia", () => i.t(null, void 0, o(910613))], ["Maldives", () => i.t(null, void 0, o(39656))], ["Mali", () => i.t(null, void 0, o(365226))], ["Malta", () => i.t(null, void 0, o(638365))], ["Marshall Islands", () => i.t(null, void 0, o(218866))], ["Martinique", () => i.t(null, void 0, o(933381))], ["Mauritania", () => i.t(null, void 0, o(579706))], ["Mauritius", () => i.t(null, void 0, o(635743))], ["Mayotte", () => i.t(null, void 0, o(213187))], ["Mexico", () => i.t(null, void 0, o(774951))], ["Micronesia (Federated States of)", () => i.t(null, void 0, o(56829))], ["Moldova", () => i.t(null, void 0, o(150883))], ["Monaco", () => i.t(null, void 0, o(440019))], ["Mongolia", () => i.t(null, void 0, o(770187))], ["Montenegro", () => i.t(null, void 0, o(641357))], ["Montserrat", () => i.t(null, void 0, o(498609))], ["Morocco", () => i.t(null, void 0, o(224794))], ["Mozambique", () => i.t(null, void 0, o(579468))], ["Myanmar", () => i.t(null, void 0, o(9877))], ["Namibia", () => i.t(null, void 0, o(12872))], ["Nauru", () => i.t(null, void 0, o(342666))], ["Nepal", () => i.t(null, void 0, o(512503))], ["Netherlands", () => i.t(null, void 0, o(376970))], ["New Caledonia", () => i.t(null, void 0, o(364389))], ["New Zealand", () => i.t(null, void 0, o(866103))], ["Nicaragua", () => i.t(null, void 0, o(227276))], ["Niger", () => i.t(null, void 0, o(966217))], ["Nigeria", () => i.t(null, void 0, o(591520))], ["Niue", () => i.t(null, void 0, o(304944))], ["Norfolk Island", () => i.t(null, void 0, o(467891))], ["North Macedonia", () => i.t(null, void 0, o(163654))], ["Northern Mariana Islands", () => i.t(null, void 0, o(201209))], ["Norway", () => i.t(null, void 0, o(723309))], ["Oman", () => i.t(null, void 0, o(349693))], ["Pakistan", () => i.t(null, void 0, o(917892))], ["Palau", () => i.t(null, void 0, o(399553))], ["Palestine, State of", () => i.t(null, void 0, o(997622))], ["Panama", () => i.t(null, void 0, o(614586))], ["Papua New Guinea", () => i.t(null, void 0, o(639272))], ["Paraguay", () => i.t(null, void 0, o(449486))], ["Peru", () => i.t(null, void 0, o(184677))], ["Philippines", () => i.t(null, void 0, o(728919))], ["Pitcairn", () => i.t(null, void 0, o(292752))], ["Poland", () => i.t(null, void 0, o(15112))], ["Portugal", () => i.t(null, void 0, o(958902))], ["Puerto Rico", () => i.t(null, void 0, o(162916))], ["Qatar", () => i.t(null, void 0, o(328756))], ["Réunion", () => i.t(null, void 0, o(907816))], ["La Reunion", () => i.t(null, void 0, o(907816))], ["Romania", () => i.t(null, void 0, o(700102))], ["Russia", () => i.t(null, void 0, o(859546))], ["Russian Federation", () => i.t(null, void 0, o(115446))], ["SINT MAARTEN (DUTCH PART)", () => i.t(null, void 0, o(404421))], ["Rwanda", () => i.t(null, void 0, o(260044))], ["Saint Barthélemy", () => i.t(null, void 0, o(19774))], ["Saint Helena, Ascension and Tristan da Cunha", () => i.t(null, void 0, o(936924))], ["Saint Kitts and Nevis", () => i.t(null, void 0, o(714742))], ["Saint Lucia", () => i.t(null, void 0, o(556268))], ["Saint Martin (French part)", () => i.t(null, void 0, o(653833))], ["Saint Pierre and Miquelon", () => i.t(null, void 0, o(438490))], ["Saint Vincent and the Grenadines", () => i.t(null, void 0, o(283190))], ["Samoa", () => i.t(null, void 0, o(552348))], ["San Marino", () => i.t(null, void 0, o(303407))], ["Sao Tome and Principe", () => i.t(null, void 0, o(890812))], ["Saudi Arabia", () => i.t(null, void 0, o(605991))], ["Senegal", () => i.t(null, void 0, o(444125))], ["Serbia", () => i.t(null, void 0, o(428819))], ["Seychelles", () => i.t(null, void 0, o(650985))], ["Sierra Leone", () => i.t(null, void 0, o(28461))], ["Singapore", () => i.t(null, void 0, o(977377))], ["Sint Maarten (Dutch part)", () => i.t(null, void 0, o(145578))], ["Slovakia", () => i.t(null, void 0, o(742494))], ["Slovenia", () => i.t(null, void 0, o(721687))], ["Solomon Islands", () => i.t(null, void 0, o(761110))], ["Somalia", () => i.t(null, void 0, o(34194))], ["South Africa", () => i.t(null, void 0, o(663647))], ["South Georgia and the South Sandwich Islands", () => i.t(null, void 0, o(826082))], ["South Korea", () => i.t(null, void 0, o(617661))], ["South Sudan", () => i.t(null, void 0, o(998037))], ["Spain", () => i.t(null, void 0, o(174897))], ["Sri Lanka", () => i.t(null, void 0, o(308201))], ["Sudan", () => i.t(null, void 0, o(18118))], ["Suriname", () => i.t(null, void 0, o(729068))], ["Svalbard and Jan Mayen", () => i.t(null, void 0, o(562457))], ["Sweden", () => i.t(null, void 0, o(73412))], ["Switzerland", () => i.t(null, void 0, o(508058))], ["Syria", () => i.t(null, void 0, o(717325))], ["Taiwan", () => i.t(null, void 0, o(470947))], ["Tajikistan", () => i.t(null, void 0, o(434058))], ["Tanzania", () => i.t(null, void 0, o(635623))], ["Thailand", () => i.t(null, void 0, o(215786))], ["Timor-Leste", () => i.t(null, void 0, o(367129))], ["Togo", () => i.t(null, void 0, o(631945))], ["Tokelau", () => i.t(null, void 0, o(298549))], ["Tonga", () => i.t(null, void 0, o(435125))], ["Trinidad and Tobago", () => i.t(null, void 0, o(390103))], ["Tunisia", () => i.t(null, void 0, o(420349))], ["Turkey", () => i.t(null, void 0, o(929826))], ["Turkmenistan", () => i.t(null, void 0, o(650800))], ["Turks and Caicos Islands", () => i.t(null, void 0, o(606372))], ["Tuvalu", () => i.t(null, void 0, o(747680))], ["U.S. Virgin Islands", () => i.t(null, void 0, o(2120))], ["UAE", () => i.t(null, void 0, o(879479))], ["USA", () => i.t(null, void 0, o(232240))], ["Uganda", () => i.t(null, void 0, o(87849))], ["Ukraine", () => i.t(null, void 0, o(364971))], ["United Arab Emirates", () => i.t(null, void 0, o(770695))], ["United Kingdom", () => i.t(null, void 0, o(460411))], ["United States", () => i.t(null, void 0, o(415459))], ["United States Minor Outlying Islands", () => i.t(null, void 0, o(266635))], ["Uruguay", () => i.t(null, void 0, o(931315))], ["USA", () => i.t(null, void 0, o(232240))], ["Uzbekistan", () => i.t(null, void 0, o(552979))], ["Vanuatu", () => i.t(null, void 0, o(105598))], ["Venezuela", () => i.t(null, void 0, o(250614))], ["Vietnam", () => i.t(null, void 0, o(403944))], ["Virgin Islands (British)", () => i.t(null, void 0, o(960580))], ["Virgin Islands (U.S.)", () => i.t(null, void 0, o(914315))], ["Wallis and Futuna", () => i.t(null, void 0, o(57056))], ["Western Sahara", () => i.t(null, void 0, o(75648))], ["Yemen", () => i.t(null, void 0, o(510588))], ["Zambia", () => i.t(null, void 0, o(652361))], ["Zimbabwe", () => i.t(null, void 0, o(42386))]])
    }
    ,
    291066: (e, t, o) => {
        "use strict";
        o.d(t, {
            isCFDSymbol: () => i,
            isStockSymbol: () => n
        });
        function i(e, t) {
            return Boolean(t?.includes("cfd")) && ["commodity", "futures", "index", "stock", "fund"].includes(e)
        }
        function n(e, t) {
            return "stock" === e && void 0 !== t && !t.includes("cfd") && !t.includes("ndf")
        }
    }
    ,
    212363: e => {
        "use strict";
        var t = [{
            d: "E-Mini S&P 500",
            t: "ES"
        }, {
            d: "E-Mini Nasdaq 100",
            t: "NQ"
        }, {
            d: "Gold",
            t: "GC"
        }, {
            d: "Silver",
            t: "SI"
        }, {
            d: "Crude Oil WTI",
            t: "CL"
        }, {
            d: "Natural Gas",
            t: "NG"
        }, {
            d: "Australian Dollar",
            t: "6A"
        }, {
            d: "Australian Dollar (Floor)",
            t: "AD"
        }, {
            d: "Euro FX",
            t: "6E"
        }, {
            d: "Euro FX (Floor)",
            t: "EC"
        }, {
            d: "Corn",
            t: "ZC"
        }, {
            d: "Corn (Floor)",
            t: "C"
        }, {
            d: "Eurodollar",
            t: "GE"
        }, {
            d: "Eurodollar (Floor)",
            t: "ED"
        }]
          , o = function() {
            var e = [{
                pattern: "(",
                ctor: r
            }, {
                pattern: ")",
                ctor: s
            }, {
                pattern: "+",
                ctor: a
            }, {
                pattern: "-",
                ctor: c
            }, {
                pattern: "*",
                ctor: d
            }, {
                pattern: "/",
                ctor: u
            }, {
                pattern: "^",
                ctor: h
            }, {
                pattern: /\d+(?:\.\d*|(?![a-zA-Z0-9_!:.&]))|\.\d+/,
                ctor: g
            }, {
                pattern: /\./,
                ctor: y
            }, {
                pattern: /[a-zA-Z0-9_\u0370-\u1FFF_\u2E80-\uFFFF][a-zA-Z0-9_\u0020\u0370-\u1FFF_\u2E80-\uFFFF_!|:.&]*|'.+?'/,
                ctor: _
            }, {
                pattern: /'[^']*/,
                ctor: f
            }, {
                pattern: /[\0-\x20\s]+/,
                ctor: n
            }];
            function o(e, t) {
                var o = function() {};
                return o.prototype = t.prototype,
                e.prototype = new o,
                e
            }
            function i() {}
            function n(e) {
                this.value = e
            }
            function r() {}
            function s() {}
            function l() {}
            function a() {}
            function c() {}
            function d() {}
            function u() {}
            function h() {}
            i.prototype.toString = function() {
                return this.value
            }
            ,
            o(n, i),
            o(r, i),
            r.prototype.value = "(",
            o(s, i),
            s.prototype.value = ")",
            o(l, i),
            o(a, l),
            a.prototype.value = "+",
            a.prototype.precedence = 0,
            a.prototype.commutative = !0,
            o(c, l),
            c.prototype.value = "-",
            c.prototype.precedence = 0,
            c.prototype.commutative = !1,
            o(d, l),
            d.prototype.value = "*",
            d.prototype.precedence = 1,
            d.prototype.commutative = !0,
            o(u, l),
            u.prototype.value = "/",
            u.prototype.precedence = 1,
            u.prototype.commutative = !1,
            o(h, l),
            h.prototype.value = "^",
            h.prototype.precedence = 2,
            h.prototype.commutative = !1;
            var p = /^'?(?:([A-Z0-9_]+):)?(.*?)'?$/i
              , m = /[+\-/*]/;
            function _(e) {
                this.value = e
            }
            function g(e) {
                this.value = e
            }
            function v(e) {
                this.value = e
            }
            function f() {
                _.apply(this, arguments)
            }
            function y() {
                g.apply(this, arguments)
            }
            o(_, i),
            _.prototype.toString = function() {
                if (this.hasOwnProperty("_ticker")) {
                    var e = m.test(this._ticker) ? "'" : "";
                    return e + (this._exchange ? this._exchange + ":" : "") + this._ticker + e
                }
                return this.value
            }
            ,
            _.prototype.parse = function() {
                var e = p.exec(this.value);
                e[1] && (this._exchange = e[1]),
                this._ticker = e[2]
            }
            ,
            _.prototype.parseAsFutures = function() {
                this.hasOwnProperty("_ticker") || this.parse();
                for (var e = function(e) {
                    return t.some((function(t) {
                        return t.t === e
                    }
                    ))
                }, o = 2; o >= 1; --o) {
                    var i = this._ticker.slice(0, o);
                    if (e(i)) {
                        this._root = i,
                        this._contract = this._ticker.slice(o);
                        break
                    }
                }
            }
            ,
            _.prototype.exchange = function(e) {
                if (this.hasOwnProperty("_ticker") || this.parse(),
                !(arguments.length > 0))
                    return this._exchange;
                null == e ? delete this._exchange : this._exchange = e + ""
            }
            ,
            _.prototype.ticker = function(e) {
                if (this.hasOwnProperty("_ticker") || this.parse(),
                !(arguments.length > 0))
                    return this._ticker;
                null == e ? delete this._ticker : this._ticker = e + "",
                delete this._root,
                delete this._contract
            }
            ,
            _.prototype.root = function(e) {
                if (this.hasOwnProperty("_root") || this.parseAsFutures(),
                !(arguments.length > 0))
                    return this._root;
                null == e ? delete this._root : (this._root = e + "",
                this._root && (this._ticker = this._root + (this._contract || "")))
            }
            ,
            _.prototype.contract = function(e) {
                if (this.hasOwnProperty("_contract") || this.parseAsFutures(),
                !(arguments.length > 0))
                    return this._root;
                null == e ? delete this._contract : (this._contract = e + "",
                this._root && (this._ticker = this._root + this._contract))
            }
            ,
            o(g, i),
            g.prototype.toString = function() {
                return this.hasOwnProperty("_normalizedValue") ? this._normalizedValue : this.value
            }
            ,
            g.prototype.parse = function() {
                this._normalizedValue = this.value.replace(/^0+|\.0*$/g, "").replace(/(\.\d*?)0+$/, "$1").replace(/^(\.|$)/, "0$1")
            }
            ,
            v.prototype.toString = function() {
                return this.value
            }
            ,
            o(f, _),
            f.prototype.isIncomplete = !0,
            f.prototype.incompleteSuggest = function() {
                if ("'" !== this.value)
                    return String("'")
            }
            ,
            o(y, g),
            y.prototype.isIncomplete = !0;
            var b = new RegExp(e.map((function(e) {
                return "(" + ("string" == typeof e.pattern ? e.pattern.replace(/[\^$()[\]{}*+?|\\]/g, "\\$&") : e.pattern.source) + ")"
            }
            )).concat(".").join("|"),"g");
            function w(t, o) {
                var i, r = [];
                e: for (; i = b.exec(t); ) {
                    for (var s = e.length; s--; )
                        if (i[s + 1]) {
                            if (e[s].ctor) {
                                var l = new e[s].ctor(i[s + 1]);
                                l._offset = i.index,
                                r.push(l)
                            }
                            continue e
                        }
                    var a = new v(i[0]);
                    a._offset = i.index,
                    r.push(a)
                }
                if (o && o.recover) {
                    var c;
                    for (s = r.length; s--; ) {
                        var d = r[s];
                        if (d instanceof g || d instanceof _) {
                            if (void 0 !== c) {
                                var u = new _("")
                                  , h = r.splice(s, c - s + 1, u);
                                u.value = h.map((function(e) {
                                    return e.value
                                }
                                )).join("")
                            }
                            c = s
                        } else
                            d instanceof n || (c = void 0)
                    }
                }
                return r
            }
            function S(e) {
                for (var t = [], o = 0; o < e.length; o++)
                    e[o]instanceof n || t.push(e[o]);
                return t
            }
            function C(e) {
                e = S(e);
                for (var t, o = [], i = [], n = 0; n < e.length; n++) {
                    var a = e[n];
                    if (a instanceof l)
                        i.length && i[i.length - 1].minPrecedence > a.precedence && (i[i.length - 1].minPrecedence = a.precedence);
                    else if (a instanceof r)
                        i.push(t = {
                            minPrecedence: 1 / 0,
                            openBraceIndex: n
                        });
                    else if (a instanceof s) {
                        var c = e[(t = i.pop()).openBraceIndex - 1]
                          , d = e[n + 1];
                        d instanceof l && !(d.precedence <= t.minPrecedence) || !(!(c instanceof l) || c.precedence < t.minPrecedence || c.precedence === t.minPrecedence && c.commutative) || (o.unshift(t.openBraceIndex),
                        o.push(n),
                        i.length && i[i.length - 1].minPrecedence > t.minPrecedence && (i[i.length - 1].minPrecedence = t.minPrecedence))
                    }
                }
                for (n = o.length; n--; )
                    e.splice(o[n], 1);
                return e
            }
            function k(e) {
                if ("string" != typeof e)
                    throw new TypeError("expression must be a string");
                return (e = w(e)).filter((function(e) {
                    return e instanceof _
                }
                )).map((function(e) {
                    return e.exchange()
                }
                )).filter((function(e) {
                    return e
                }
                ))
            }
            function x(e) {
                return 1 !== (e = k(e)).length ? null : e[0]
            }
            function M(e, t) {
                return (e = k(e)).some((function(e) {
                    return t.includes((e || "").toUpperCase())
                }
                ))
            }
            function E(e) {
                return e.join("")
            }
            return {
                tokenize: w,
                validate: function(e) {
                    for (var t = "init", o = "var", i = t, a = {
                        warnings: [],
                        errors: [],
                        isEmpty: !0
                    }, c = [], d = 0; d < e.length; d++) {
                        if (!((h = e[d])instanceof n)) {
                            if (delete a.isEmpty,
                            h.isIncomplete) {
                                var u = {
                                    status: "incomplete",
                                    reason: "incomplete_token",
                                    offset: h._offset,
                                    token: h
                                };
                                if (h.incompleteSuggest && (u.recover = {
                                    append: h.incompleteSuggest()
                                }),
                                a.warnings.push(u),
                                d !== e.length - 1) {
                                    u.status = "error";
                                    continue
                                }
                            }
                            if (h instanceof _ || h instanceof g) {
                                if (i === o) {
                                    a.errors.push({
                                        status: "error",
                                        reason: "unexpected_token",
                                        offset: h._offset,
                                        token: h
                                    });
                                    continue
                                }
                                i = o
                            } else if (h instanceof l) {
                                if (i !== o) {
                                    a.errors.push({
                                        status: "error",
                                        reason: "unexpected_token",
                                        offset: h._offset,
                                        token: h
                                    });
                                    continue
                                }
                                i = "operator"
                            } else if (h instanceof r) {
                                if (i === o) {
                                    a.errors.push({
                                        status: "error",
                                        reason: "unexpected_token",
                                        offset: h._offset,
                                        token: h
                                    });
                                    continue
                                }
                                c.push(h),
                                i = t
                            } else if (h instanceof s) {
                                if (i !== o) {
                                    a.errors.push({
                                        status: "error",
                                        reason: "unexpected_token",
                                        offset: h._offset,
                                        token: h
                                    });
                                    continue
                                }
                                c.pop() || a.errors.push({
                                    status: "error",
                                    reason: "unbalanced_brace",
                                    offset: h._offset,
                                    token: h,
                                    recover: {
                                        prepend: new r
                                    }
                                }),
                                i = o
                            } else
                                h instanceof v && a.errors.push({
                                    status: "error",
                                    reason: "unparsed_entity",
                                    offset: h._offset,
                                    token: h
                                })
                        }
                    }
                    for (a.braceBalance = c.length,
                    i !== o && a.warnings.push({
                        status: "incomplete"
                    }); c.length; ) {
                        var h;
                        u = {
                            status: "incomplete",
                            reason: "unbalanced_brace",
                            offset: (h = c.pop())._offset,
                            token: h
                        };
                        i === o && (u.recover = {
                            append: new s
                        }),
                        a.warnings.push(u)
                    }
                    return a.currentState = i,
                    0 === a.warnings.length && delete a.warnings,
                    0 === a.errors.length && delete a.errors,
                    a
                },
                factorOutBraces: C,
                normalizeTokens: function(e) {
                    for (var t = 0; t < e.length; t++)
                        e[t].parse && e[t].parse();
                    return e
                },
                flip: function(e) {
                    var t = function(e) {
                        for (var t, o = 0, i = 1, a = 2, c = 3, d = o, h = 0, p = 0; p < e.length; p++) {
                            var m = e[p];
                            if (!(m instanceof n))
                                switch (d) {
                                case o:
                                    if (!(m instanceof g && 1 == +m.value))
                                        return !1;
                                    d = i;
                                    break;
                                case i:
                                    if (!(d === i && m instanceof u))
                                        return !1;
                                    d = a,
                                    t = p + 1;
                                    break;
                                case a:
                                    if (m instanceof r)
                                        d = c,
                                        h = 1;
                                    else if (m instanceof l)
                                        return !1;
                                    break;
                                case c:
                                    m instanceof r ? h++ : m instanceof s && --h <= 0 && (d = a)
                                }
                        }
                        return e.slice(t)
                    }(e);
                    return C(t || [new g("1"), new u, new r].concat(e).concat(new s))
                },
                hasBatsSymbols: function(e) {
                    return M(e, ["BATS"])
                },
                hasEodSymbols: function(e) {
                    return (e = x(e)) && -1 !== e.toUpperCase().indexOf("_EOD")
                },
                hasChxjpySymbols: function(e) {
                    return M(e, ["CHXJPY"])
                },
                hasFreeDelaySymbols: function(e) {
                    return M(e, pro.getProductsByType(pro.PRODUCT_TYPES.exchange).map((function(e) {
                        return e.exchange.toUpperCase() + "_DLY"
                    }
                    )))
                },
                getExchange: x,
                getExchanges: k,
                isExchange: function(e, t) {
                    return !!(e = x(e)) && e.substring(0, t.length) === t
                },
                SymbolToken: _,
                IncompleteSymbolToken: f,
                NumberToken: g,
                BinaryOperatorToken: l,
                OpenBraceToken: r,
                CloseBraceToken: s,
                ticker: function(e) {
                    return new _(e).ticker()
                },
                shortName: function(e) {
                    if ("string" != typeof e)
                        throw new TypeError("expression must be a string");
                    var t = C(S(w(e)));
                    return t.forEach((function(e) {
                        e instanceof _ && e.exchange(null)
                    }
                    )),
                    E(t)
                },
                normalize: function(e) {
                    if ("string" != typeof e)
                        throw new TypeError("expression must be a string");
                    return E(C(S(w(e))))
                }
            }
        }();
        e.exports = o
    }
    ,
    432438: (e, t, o) => {
        "use strict";
        function i(e) {
            e.dispatchEvent(new CustomEvent("roving-tabindex:main-element"))
        }
        function n(e) {
            e.dispatchEvent(new CustomEvent("roving-tabindex:secondary-element"))
        }
        o.d(t, {
            becomeMainElement: () => i,
            becomeSecondaryElement: () => n
        })
    }
    ,
    887208: (e, t, o) => {
        "use strict";
        o.d(t, {
            mapKeyCodeToDirection: () => c,
            navigationOrderComparator: () => r,
            queryFocusableElements: () => l,
            queryTabbableElements: () => s,
            updateTabIndexes: () => a
        });
        var i = o(969680)
          , n = o(355734);
        function r(e, t) {
            return e === t ? 0 : e.compareDocumentPosition(t) & Node.DOCUMENT_POSITION_FOLLOWING ? -1 : 1
        }
        function s(e) {
            return Array.from(e.querySelectorAll('button:not([disabled]):not([aria-disabled]):not([tabindex="-1"]), [tabindex]:not([disabled]):not([aria-disabled]):not([tabindex="-1"])')).filter((0,
            n.createScopedVisibleElementFilter)(e))
        }
        function l(e) {
            return Array.from(e.querySelectorAll('button:not([disabled]):not([aria-disabled="true"]):not([aria-disabled=""]), [tabindex]:not([disabled]):not([aria-disabled="true"]):not([aria-disabled=""])')).filter((0,
            n.createScopedVisibleElementFilter)(e))
        }
        function a() {
            window.dispatchEvent(new CustomEvent("keyboard-navigation-activation",{
                bubbles: !0
            }))
        }
        function c(e) {
            const t = (0,
            i.isRtl)();
            switch (e) {
            case 38:
                return "blockPrev";
            case 40:
                return "blockNext";
            case 37:
                return t ? "inlineNext" : "inlinePrev";
            case 39:
                return t ? "inlinePrev" : "inlineNext";
            default:
                return null
            }
        }
    }
    ,
    296538: (e, t, o) => {
        "use strict";
        o.d(t, {
            allChartStyles: () => r
        });
        var i = o(931924);
        const n = (0,
        o(638456).onWidget)();
        function r() {
            return function() {
                const e = [0, 1, 9, 13, 2, 14, 15, 3, 16, 10];
                return e.push(12),
                n || e.push(17),
                n || e.push(18),
                n || e.push(20),
                n || e.push(19),
                e
            }().concat(function() {
                const e = [8];
                return i.enabled("japanese_chart_styles") && (e.push(4, 7, 5, 6),
                e.push(11)),
                e
            }())
        }
    }
    ,
    670770: (e, t, o) => {
        "use strict";
        o.d(t, {
            extractSymbolNameFromSymbolInfo: () => a
        });
        var i = o(931924);
        const n = i.enabled("pay_attention_to_ticker_not_symbol")
          , r = i.enabled("charting_library_single_symbol_request")
          , s = i.enabled("use_ticker_on_symbol_info_update")
          , l = i.enabled("uppercase_instrument_names");
        function a(e, t, o, i) {
            let a = e && (o && e.pro_name || e.full_name || e.name);
            return r && t ? a = t : (s || !i && n) && e && e.ticker && (a = e.ticker),
            l && a && (a = a.toUpperCase()),
            a
        }
    }
    ,
    608571: (e, t, o) => {
        "use strict";
        o.d(t, {
            availableDateFormats: () => y,
            dateFormatFunctions: () => v,
            defaultDateFormat: () => b,
            getDateFormatWithWeekday: () => f
        });
        var i = o(444372)
          , n = o(39654)
          , r = o(909456);
        const s = {
            1: () => i.t(null, void 0, o(562310)),
            2: () => i.t(null, void 0, o(302507)),
            3: () => i.t(null, void 0, o(92767)),
            4: () => i.t(null, void 0, o(227072)),
            5: () => i.t(null, {
                context: "short"
            }, o(13132)),
            6: () => i.t(null, void 0, o(800429)),
            7: () => i.t(null, void 0, o(853786)),
            8: () => i.t(null, void 0, o(546450)),
            9: () => i.t(null, void 0, o(806816)),
            10: () => i.t(null, void 0, o(912179)),
            11: () => i.t(null, void 0, o(526899)),
            12: () => i.t(null, void 0, o(532084))
        }
          , l = {
            1: () => i.t(null, void 0, o(914568)),
            2: () => i.t(null, void 0, o(913534)),
            3: () => i.t(null, void 0, o(914530)),
            4: () => i.t(null, void 0, o(903762))
        }
          , a = (e, t) => (t ? e.getMonth() : e.getUTCMonth()) + 1
          , c = (e, t) => t ? e.getFullYear() : e.getUTCFullYear()
          , d = (e, t) => e.toLocaleDateString(window.language ? (0,
        n.getIsoLanguageCodeFromLanguage)(window.language) : void 0, {
            weekday: "short",
            timeZone: "local" === t ? void 0 : t
        })
          , u = (e, t) => l[( (e, t) => Math.floor((a(e, t) - 1) / 3) + 1)(e, t)]()
          , h = (e, t) => (0,
        r.numberToStringWithLeadingZero)(( (e, t) => t ? e.getDate() : e.getUTCDate())(e, t), 2)
          , p = (e, t) => s[a(e, t)]()
          , m = (e, t) => (0,
        r.numberToStringWithLeadingZero)(a(e, t), 2)
          , _ = (e, t) => (0,
        r.numberToStringWithLeadingZero)(c(e, t) % 100, 2)
          , g = (e, t) => (0,
        r.numberToStringWithLeadingZero)(c(e, t), 4)
          , v = {
            "qq 'yy": (e, t) => `${u(e, t)} '${_(e, t)}`,
            "qq yyyy": (e, t) => `${u(e, t)} ${g(e, t)}`,
            "dd MMM 'yy": (e, t) => `${h(e, t)} ${p(e, t)} '${_(e, t)}`,
            "MMM 'yy": (e, t) => `${p(e, t)} '${_(e, t)}`,
            "MMM dd, yyyy": (e, t) => `${p(e, t)} ${h(e, t)}, ${g(e, t)}`,
            "MMM yyyy": (e, t) => `${p(e, t)} ${g(e, t)}`,
            "MMM dd": (e, t) => `${p(e, t)} ${h(e, t)}`,
            "dd MMM": (e, t) => `${h(e, t)} ${p(e, t)}`,
            "yyyy-MM-dd": (e, t) => `${g(e, t)}-${m(e, t)}-${h(e, t)}`,
            "yy-MM-dd": (e, t) => `${_(e, t)}-${m(e, t)}-${h(e, t)}`,
            "yy/MM/dd": (e, t) => `${_(e, t)}/${m(e, t)}/${h(e, t)}`,
            "yyyy/MM/dd": (e, t) => `${g(e, t)}/${m(e, t)}/${h(e, t)}`,
            "dd-MM-yyyy": (e, t) => `${h(e, t)}-${m(e, t)}-${g(e, t)}`,
            "dd-MM-yy": (e, t) => `${h(e, t)}-${m(e, t)}-${_(e, t)}`,
            "dd/MM/yy": (e, t) => `${h(e, t)}/${m(e, t)}/${_(e, t)}`,
            "dd/MM/yyyy": (e, t) => `${h(e, t)}/${m(e, t)}/${g(e, t)}`,
            "MM/dd/yy": (e, t) => `${m(e, t)}/${h(e, t)}/${_(e, t)}`,
            "MM/dd/yyyy": (e, t) => `${m(e, t)}/${h(e, t)}/${g(e, t)}`
        };
        function f(e, t) {
            return "ja" === window.language ? (o, i) => `${v[e](o, i)} (${d(o, t)})` : (o, i) => `${d(o, t)} ${v[e](o, i)}`
        }
        const y = Object.keys(v)
          , b = () => -1 !== ["ja", "ko", "zh", "zh_TW"].indexOf(window.language || "") ? "yyyy-MM-dd" : "dd MMM 'yy"
    }
    ,
    477786: (e, t, o) => {
        "use strict";
        o.d(t, {
            Interval: () => i.Interval,
            ResolutionKind: () => i.ResolutionKind,
            SpecialResolutionKind: () => i.SpecialResolutionKind,
            isHour: () => i.isHour
        });
        var i = o(257253)
    }
    ,
    506649: (e, t, o) => {
        "use strict";
        o.d(t, {
            combineProperty: () => n
        });
        var i = o(781567);
        function n(e, ...t) {
            const o = () => e(...t.map((e => e.value())))
              , n = (0,
            i.createPrimitiveProperty)(o())
              , r = () => n.setValue(o())
              , s = {};
            for (const e of t)
                e.subscribe(s, r);
            return n.destroy = () => {
                t.forEach((e => e.unsubscribeAll(s))),
                t.forEach((e => e.release()))
            }
            ,
            n
        }
    }
    ,
    288789: (e, t, o) => {
        "use strict";
        o.d(t, {
            combineProperty: () => s.combineProperty,
            createWVFromGetterAndSubscription: () => i.createWVFromGetterAndSubscription,
            createWVFromGetterAndSubscriptions: () => n.createWVFromGetterAndSubscriptions,
            createWVFromProperty: () => r.createWVFromProperty
        });
        var i = o(900210)
          , n = o(582441)
          , r = o(720727);
        o(781567);
        var s = o(506649)
    }
    ,
    900210: (e, t, o) => {
        "use strict";
        o.d(t, {
            createWVFromGetterAndSubscription: () => n
        });
        var i = o(820028);
        function n(e, t) {
            const o = new i.WatchedValue(e())
              , n = {};
            t.subscribe(n, ( () => {
                o.setValue(e(o.value()))
            }
            ));
            return o.readonly().spawn(( () => t.unsubscribeAll(n)))
        }
    }
    ,
    720727: (e, t, o) => {
        "use strict";
        o.d(t, {
            createWVFromProperty: () => n
        });
        var i = o(900210);
        function n(e) {
            return (0,
            i.createWVFromGetterAndSubscription)(( () => e.value()), e)
        }
    }
    ,
    905520: (e, t, o) => {
        "use strict";
        o.d(t, {
            Property: () => _,
            isPrimitiveType: () => m
        });
        var i = o(569708)
          , n = o(283873)
          , r = o(683350)
          , s = o(688987)
          , l = o(456052)
          , a = o(650151)
          , c = o(735566)
          , d = o(862150)
          , u = o(421566)
          , h = o(690370);
        const p = (0,
        c.getLogger)("Property");
        function m(e) {
            return null === e || (0,
            i.default)(e) && Number.isFinite(e) || (0,
            n.default)(e) || (0,
            r.default)(e)
        }
        class _ extends u.PropertyBase {
            constructor(e, t) {
                if (super(),
                this._childs = [],
                this._dependents = [],
                this._schema = t || (0,
                h.createPropertySchema)(e),
                void 0 !== e)
                    if ((0,
                    h.validateSchema)(e, this._schema) || p.logWarn(`The state with a data type: ${(0,
                    h.dataType)(e)} does not match a schema`),
                    m(e))
                        this._value = e;
                    else {
                        let t = Object.entries(e);
                        (0,
                        h.isArraySchema)(this._schema) && (t = t.filter(( ([e]) => !Number.isNaN(+e))));
                        for (const [e,o] of t)
                            this.addProperty(e, o)
                    }
            }
            destroy() {
                this.listeners().destroy();
                for (const e of this._childs)
                    this.child(e)?.destroy?.()
            }
            merge(e, t) {
                let o = null
                  , i = 0;
                if (t && (o = [],
                i = o.length),
                void 0 === e)
                    return o;
                if (m(e))
                    return this._value !== e && o?.push(this),
                    this._value = e,
                    o;
                if ((0,
                l.default)(e)) {
                    (0,
                    h.isArraySchema)(this._schema) || p.logWarn("Property is not an array");
                    for (let i = 0; i < e.length; i++) {
                        const n = this.childs()[i];
                        if (n) {
                            const r = n.merge(e[i], t);
                            o?.push(...r)
                        } else {
                            const t = this.addProperty(`${i}`, e[i]);
                            o?.push(t)
                        }
                    }
                } else {
                    let i = Object.entries(e);
                    (0,
                    h.isArraySchema)(this._schema) && (i = i.filter(( ([e]) => !Number.isNaN(+e))));
                    for (const [e,n] of i) {
                        const i = this.childs()[e];
                        if (i) {
                            const e = i.merge(n, t);
                            o?.push(...e)
                        } else {
                            const t = this.addProperty(e, n);
                            o?.push(t)
                        }
                    }
                }
                return o && o.length > i && o.push(this),
                o
            }
            mergeAndFire(e) {
                const t = (0,
                a.ensureNotNull)(this.merge(e, !0));
                this._fireMergeAndFireChangedProps(t)
            }
            state(e, t) {
                const o = (0,
                s.default)(this.value) ? this.value() : void 0;
                if (void 0 !== o)
                    return o;
                const i = (0,
                h.isArraySchema)(this._schema) ? [] : {};
                for (const o of this._childs) {
                    if (e && -1 !== e.indexOf(o))
                        continue;
                    if ((0,
                    h.isArraySchema)(this._schema) && Number.isNaN(+o))
                        continue;
                    if (void 0 !== t && "subschema"in this._schema) {
                        const e = (0,
                        h.isArraySchema)(this._schema) ? this._schema.subschema : this._schema.subschema[o];
                        if (void 0 !== this._schema.saveFlags && !e)
                            continue;
                        if (void 0 !== e?.saveFlags && !(e.saveFlags & t))
                            continue
                    }
                    const n = this.childs()[o];
                    let r;
                    if (e) {
                        const i = [];
                        for (const t of e)
                            t.startsWith(o + ".") && i.push(t.substring(o.length + 1));
                        r = n?.state(i, t)
                    } else
                        r = n?.state();
                    (void 0 !== r || n?.storeStateIfUndefined()) && ((0,
                    l.default)(i) ? i[+o] = r : i[o] = r)
                }
                return i
            }
            clone() {
                return new _(this.state())
            }
            value() {
                return this._value
            }
            childCount() {
                return this._childs.length
            }
            childNames() {
                return this._childs
            }
            childByPath(e) {
                let t = this;
                for (const o of e.split(".")) {
                    if (void 0 === t)
                        break;
                    t = t.child(o)
                }
                return t
            }
            hasChild(e) {
                return this._childs.includes(e)
            }
            setValue(e, t) {
                (this._value !== e || t) && (this._value = e,
                this.fireChanged())
            }
            setValueSilently(e) {
                this._value = e
            }
            addProperty(e, t) {
                let o;
                (0,
                h.isArraySchema)(this._schema) && Number.isNaN(+e) && p.logWarn("Property is an array"),
                this.removeProperty(e),
                this._schema.type === h.DataTypes.OBJECT ? o = this._schema.subschema[e] : this._schema.type === h.DataTypes.ARRAY && (o = this._schema.subschema);
                const i = new _(t,o);
                return this[e] = i,
                this._childs.push(e),
                i.subscribe(this, ( (e, t) => {
                    this._childChanged(e, t)
                }
                )),
                i.setOwner(this),
                i.setNameInOwner(e),
                i
            }
            removeProperty(e) {
                const t = this.child(e);
                t && (t.setNameInOwner(""),
                t.setOwner(null),
                t.unsubscribeAll(this),
                delete this[e],
                this._childs = this._childs.filter((t => t !== e)))
            }
            addChild(e, t) {
                if ((0,
                h.isArraySchema)(this._schema) && Number.isNaN(+e))
                    throw new Error("Property is an array");
                this[e] && this.removeProperty(e),
                this[e] = t,
                -1 === this._childs.indexOf(e) && this._childs.push(e),
                t.subscribe(this, ( (e, t) => this._childChanged(e, t))),
                t.setOwner(this),
                t.setNameInOwner(e)
            }
            childs() {
                return this
            }
            storeStateIfUndefined() {
                return !0
            }
            ownership() {
                return (0,
                d.ownership)(this)
            }
            weakReference() {
                return (0,
                d.weakReference)(this)
            }
            addDependent(e) {
                this._dependents.push(e)
            }
            removeDependent(e) {
                const t = this._dependents.indexOf(e);
                t >= 0 && this._dependents.splice(t, 1)
            }
            dependents() {
                return this._dependents
            }
            _childChanged(e, t) {
                this._muteChildChanges || this._listeners.fire(this, t)
            }
            _fireMergeAndFireChangedProps(e) {
                this.muteChildChanges(!0);
                for (const t of e)
                    t.muteChildChanges(!0);
                for (const t of e)
                    t.muteChildChanges(!1),
                    t.fireChanged();
                this.muteChildChanges(!1)
            }
        }
    }
    ,
    388741: (e, t, o) => {
        "use strict";
        o.d(t, {
            actualSymbol: () => _e,
            chartStyleStudyId: () => z,
            createSeriesFormatter: () => G,
            displayedSymbolExchange: () => me,
            displayedSymbolName: () => pe,
            extractLineToolSymbolFromSymbolInfo: () => ae,
            getChartStyleByResolution: () => q,
            getDefaultStyle: () => V,
            getLastUsedRawDataStyle: () => W,
            getLastUsedSingleValueBasedStyle: () => N,
            getLastUsedStyle: () => O,
            getSeriesDisplayErrorWV: () => Fe,
            getSeriesPriceFormattingState: () => H,
            getSourceForEconomySymbol: () => ue,
            getSymbolDelaySeconds: () => Te,
            getSymbolListedExchange: () => ke,
            getSymbolTradedExchange: () => xe,
            getTranslatedChartStyleName: () => x,
            hasVolume: () => we,
            isCloseBasedSymbol: () => fe,
            isConvertedToOtherCurrency: () => Z,
            isConvertedToOtherUnit: () => oe,
            isEconomicSymbol: () => Se,
            isFutureContinuousSymbolWithBackajustment: () => Me,
            isFuturesContractSymbol: () => Ee,
            isHLCBasedStyle: () => L,
            isMeasureUnitSymbol: () => ye,
            isPriceSourceStyle: () => j,
            isRangeBasedStyle: () => E,
            isRangeStyle: () => T,
            isRawDataStyle: () => $,
            isRegularSessionId: () => ve,
            isRequiringRestartSeriesStyles: () => M,
            isSingleValueBasedStyle: () => P,
            isSpreadSymbolWithManyLegs: () => Ce,
            isStyleSupportedForReplay: () => I,
            isTimeBasedStyle: () => A,
            isValidStyle: () => D,
            measureUnitId: () => be,
            preparePriceAxisProperties: () => U,
            proSymbol: () => ge,
            setLastUsedRawDataStyle: () => R,
            setLastUsedStyle: () => B,
            styleChangeRequiresRestart: () => F,
            symbolBaseCurrency: () => J,
            symbolCurrency: () => K,
            symbolCurrencyConvertible: () => X,
            symbolHasEconomicEvents: () => le,
            symbolHasElectronicSession: () => re,
            symbolHasPreOrPostMarket: () => ne,
            symbolHasSeveralSessions: () => se,
            symbolOriginalCurrency: () => Y,
            symbolOriginalUnit: () => te,
            symbolTitle: () => he,
            symbolTitleSeparator: () => de,
            symbolToSaveInState: () => ce,
            symbolUnit: () => ee,
            symbolUnitConvertibleGroupsIfExist: () => ie
        });
        var i = o(444372)
          , n = o(62802)
          , r = o(125226)
          , s = o(638456)
          , l = o(519073)
          , a = o(870855)
          , c = o(477786)
          , d = o(89831)
          , u = o(931924)
          , h = o(51196)
          , p = o(722652)
          , m = o(291066)
          , _ = o(68777)
          , g = o(288789)
          , v = o(670770);
        const f = u.enabled("uppercase_instrument_names")
          , y = u.enabled("hide_object_tree_and_price_scale_exchange_label")
          , b = (0,
        r.isFeatureEnabled)("heikin_ashi_supported_for_replay") || !1
          , w = [4, 5, 6, 7, 8]
          , S = [4, 5, 6, 7, 11]
          , C = [0, 1, 9, 19, 2, 14, 15, 3, 16, 10, 8, 12, 13, 18, 17, 20]
          , k = [2, 14, 15, 10, 3, 13, 18];
        function x(e) {
            return {
                0: i.t(null, void 0, o(527377)),
                1: i.t(null, void 0, o(745054)),
                2: i.t(null, void 0, o(903554)),
                14: i.t(null, void 0, o(409394)),
                15: i.t(null, void 0, o(869217)),
                3: i.t(null, void 0, o(534456)),
                16: i.t(null, void 0, o(99906)),
                9: i.t(null, void 0, o(913459)),
                10: i.t(null, void 0, o(259213)),
                12: i.t(null, void 0, o(498236)),
                13: i.t(null, void 0, o(655761)),
                4: i.t(null, void 0, o(188130)),
                7: i.t(null, void 0, o(743588)),
                5: i.t(null, void 0, o(383490)),
                6: i.t(null, void 0, o(276519)),
                11: i.t(null, void 0, o(855169)),
                8: i.t(null, void 0, o(863876)),
                17: i.t(null, void 0, o(292763)),
                18: i.t(null, void 0, o(617809)),
                19: i.t(null, void 0, o(193722)),
                20: i.t(null, void 0, o(383298)),
                21: i.t(null, void 0, o(800886))
            }[e]
        }
        function M(e) {
            return -1 !== w.indexOf(e)
        }
        function E(e) {
            return -1 !== S.indexOf(e)
        }
        function F(e, t) {
            return !T(e) && !T(t) && !(e === t || !M(e) && !M(t))
        }
        function T(e) {
            return 11 === e
        }
        function A(e) {
            return -1 !== C.indexOf(e)
        }
        function I(e) {
            return !(!b && 8 === e || 17 === e || 18 === e || 20 === e) && A(e)
        }
        function D(e) {
            return E(e) || A(e)
        }
        function P(e) {
            switch (e) {
            case 3:
            case 10:
            case 2:
            case 14:
            case 15:
            case 13:
                return !0;
            default:
                return !1
            }
        }
        function L(e) {
            switch (e) {
            case 16:
            case 21:
                return !0;
            default:
                return !1
            }
        }
        function $(e) {
            return !a.SYMBOL_STRING_DATA[e]
        }
        function B(e, t) {
            D(e) && (11 !== e && n.setValue("chart.lastUsedStyle", e),
            $(e) && R(e),
            fe(t) && P(e) && n.setValue("chart.lastUsedSingleValueBasedStyle", e))
        }
        function R(e) {
            n.setValue("chart.rawDataStyle", e)
        }
        function O() {
            const e = n.getInt("chart.lastUsedStyle");
            return void 0 === e ? 1 : e
        }
        function N() {
            const e = n.getInt("chart.lastUsedSingleValueBasedStyle");
            return void 0 === e ? 14 : e
        }
        function W() {
            return n.getInt("chart.rawDataStyle", 1)
        }
        function V(e) {
            return e ? 11 : 1
        }
        function q(e, t) {
            const o = T(t)
              , i = c.Interval.isRange(e);
            return !o && i ? V(!0) : o && !i ? V(!1) : t
        }
        function z(e, t) {
            const o = a.SYMBOL_STRING_DATA[e];
            return void 0 === o ? null : t ? `${o.type}-${o.basicStudyVersion}` : o.type
        }
        function U(e) {
            const t = e.priceAxisProperties
              , o = t.lockScale.value()
              , i = 6 === e.style.value();
            (i || o) && (t.log.setValue(!1),
            t.percentage.setValue(!1)),
            t.logDisabled.setValue(!(!i && !o)),
            t.percentageDisabled.setValue(!(!i && !o))
        }
        function j(e) {
            return k.includes(e)
        }
        function H(e, t="default", o=!1) {
            let i, n, r, s, l = 100, a = 1;
            if ("default" === t)
                null != e && (({pricescale: l, minmov: a, minmove2: n, fractional: i} = e),
                r = e.variable_tick_size || void 0);
            else {
                let e = t.split(",");
                3 !== e.length && (e = ["100", "1", "false"]),
                l = parseInt(e[0]),
                a = parseInt(e[1]),
                i = "true" === e[2],
                s = !0
            }
            return o && (a = 1),
            {
                priceScale: l,
                minMove: a,
                fractional: i,
                minMove2: n,
                variableMinTick: r,
                ignoreMinMove: o,
                noExponentialForm: s
            }
        }
        function G(e, t, o=!1) {
            const {priceScale: i, minMove: n, fractional: r, minMove2: s, variableMinTick: l, noExponentialForm: a} = H(e, t, o);
            if (null != e) {
                const a = e.format;
                if ("default" === t && "volume" === a)
                    return new h.VolumeFormatter({
                        precision: 2
                    });
                if ("percent" === a)
                    return new p.PercentageFormatter({
                        priceScale: i,
                        minMove: n,
                        fractional: r,
                        minMove2: s,
                        variableMinTick: l,
                        ignoreMinMove: o
                    })
            }
            return new d.PriceFormatter({
                priceScale: i,
                minMove: n,
                fractional: r,
                minMove2: s,
                variableMinTick: l,
                ignoreMinMove: o,
                noExponentialForm: a
            })
        }
        function X(e) {
            return null !== e && !(0,
            l.isSpread)(e.type)
        }
        function K(e, t, o) {
            if (null === e)
                return null;
            const i = !t || o ? e.currency_id : e.currency_code;
            return void 0 === i || "" === i || "pct" === i ? null : i
        }
        function Y(e, t) {
            const o = t ? e.original_currency_code : e.original_currency_id;
            return "pct" === o ? null : o ?? K(e, t)
        }
        function J(e) {
            return e.base_currency_id || null
        }
        function Z(e) {
            if (null === e || !X(e))
                return !1;
            const t = Y(e);
            return null !== t && t !== K(e)
        }
        function Q(e, t) {
            return t && null !== e && !(0,
            l.isSpread)(e.type)
        }
        function ee(e, t) {
            if (null === e || !t)
                return null;
            const o = e.unit_id;
            return void 0 === o || "" === o ? null : o
        }
        function te(e, t) {
            return t ? e.original_unit_id || ee(e, t) : null
        }
        function oe(e, t) {
            return !(null === e || !Q(e, t)) && (void 0 !== e.original_unit_id && e.original_unit_id !== e.unit_id)
        }
        function ie(e, t) {
            return null !== e && Q(e, t) ? e.unit_conversion_types || null : []
        }
        function ne(e) {
            return null !== e && void 0 !== e.subsessions && e.subsessions.some((e => "premarket" === e.id || "postmarket" === e.id))
        }
        function re(e) {
            return null !== e && void 0 !== e.subsessions && (e.subsessions.some((e => "regular" === e.id)) && e.subsessions.some((e => "us_regular" === e.id)))
        }
        function se(e) {
            return null !== e && void 0 !== e.subsessions && e.subsessions.filter((e => !e.private)).length > 1
        }
        function le(e) {
            return null !== e && ((0,
            l.isForexSymbol)(e.type) || (0,
            m.isCFDSymbol)(e.type, e.typespecs) || (0,
            l.hasCryptoTypespec)(e.typespecs || []))
        }
        function ae(e, t) {
            return (0,
            v.extractSymbolNameFromSymbolInfo)(e, null, !0, !0) || t
        }
        function ce(e, t) {
            return e ? e.ticker ?? e.pro_name ?? t : t
        }
        const de = "·";
        function ue(e, t) {
            return Se(e) ? e.source2?.description ?? null : null
        }
        function he(e, t) {
            const o = ke(e);
            return t || y ? e.name : `${e.name} ${de} ${o}`
        }
        function pe(e) {
            let t = e && (function(e) {
                return (0,
                l.isFutures)(e.type) && e.front_contract || null
            }(e) || e.name) || "";
            return t.length > 40 && (t = t.substring(0, 37) + "..."),
            t.trim()
        }
        function me(e) {
            const t = e ? e.exchange : "";
            return f ? t.toUpperCase() : t
        }
        function _e(e, t) {
            return null !== e ? e.full_name : t
        }
        function ge(e, t) {
            return e?.pro_name ?? t
        }
        function ve(e, t) {
            return ["stock", "fund", "index", "dr"].includes(t.type) && "regular" === e || (0,
            l.isFutures)(t.type) && "us_regular" === e
        }
        function fe(e) {
            return "c" === e?.visible_plots_set
        }
        function ye(e) {
            return null !== e && ("unit" === e.measure && null !== be(e))
        }
        function be(e) {
            return e?.value_unit_id ?? null
        }
        function we(e) {
            return "ohlcv" === e.visible_plots_set
        }
        function Se(e) {
            return null !== e && (0,
            l.isEconomicSymbol)(e.type)
        }
        function Ce(e) {
            return function(e) {
                return null !== e && (0,
                l.isSpread)(e.type)
            }(e) && (e?.legs ?? []).length > 1
        }
        function ke(e) {
            const t = ue(e);
            if (null !== t)
                return t;
            return (0,
            s.onWidget)() || (0,
            l.isForexSymbol)(e.type) ? e.exchange : e.exchange_listed_name ?? e.exchange
        }
        function xe(e) {
            return e.exchange
        }
        function Me(e) {
            return null !== e && (0,
            l.isFutures)(e.type) && Boolean(e.has_backadjustment && e.typespecs?.includes("continuous"))
        }
        function Ee(e) {
            return null !== e && (0,
            l.isFutures)(e.type) && !Boolean(e.typespecs?.includes("continuous"))
        }
        function Fe(e) {
            return (0,
            _.combine)(( (t, o) => {
                switch (t) {
                case 4:
                    {
                        const t = e.seriesErrorMessage();
                        return null !== t && ("resolution_not_entitled" === t || "custom_resolution" === t || "seconds_not_entitled" === t || "ticks_not_entitled" === t || t.startsWith("study_not_auth:")) ? null : {
                            type: "invalid_symbol"
                        }
                    }
                case 13:
                    {
                        const t = e.seriesErrorMessage();
                        return null === t ? null : {
                            type: "calculations_error",
                            errorMessage: t
                        }
                    }
                case 14:
                    {
                        const t = e.unsupportedResolutionState().value();
                        return null === t ? null : {
                            type: "unsupported_resolution",
                            reason: t.reason
                        }
                    }
                case 1:
                case 2:
                    return null;
                default:
                    if (o)
                        return {
                            type: "no_data"
                        }
                }
                return null
            }
            ), e.statusWV().weakReference(), (0,
            g.createWVFromGetterAndSubscription)(( () => !e.bars().size() && !e.isInReplay().value()), e.dataEvents().dataUpdated()).ownership())
        }
        function Te(e) {
            return Math.max(0, e?.delay ?? 0)
        }
    }
    ,
    262307: (e, t, o) => {
        "use strict";
        o(256225),
        o(779893);
        var i = o(673747)
          , n = o(62802)
          , r = (o(142492),
        o(686962),
        o(650151))
          , s = o(650401)
          , l = o(351079)
          , a = o(23580)
          , c = o(952598);
        var d, u, h = o(283834), p = o(444372);
        !function(e) {
            e.Bonds = "bonds",
            e.Cfd = "cfd",
            e.ContinuousFutures = "continuous_futures",
            e.Crypto = "crypto",
            e.CryptoBySymbol = "crypto_by_symbol",
            e.CryptoMkt = "crypto_mkt",
            e.CryptoMktBySymbol = "crypto_mkt_by_symbol",
            e.Currency = "currency",
            e.Forex = "forex",
            e.Futures = "futures",
            e.Industry = "industry",
            e.PostMarket = "post_market",
            e.PreMarket = "pre_market",
            e.Sector = "sector",
            e.Stock = "stock",
            e.StockCompact = "stock_compact"
        }(d || (d = {})),
        function(e) {
            e.BaseCurrencyLogoId = "base_currency_logoid",
            e.Change = "change",
            e.Country = "country",
            e.CurrencyLogoId = "currency_logoid",
            e.Description = "description",
            e.Industry = "industry",
            e.LogoId = "logoid",
            e.Name = "name",
            e.Performance1M = "Perf.1M",
            e.Performance3M = "Perf.3M",
            e.Performance6M = "Perf.6M",
            e.PerformanceW = "Perf.W",
            e.PerformanceY = "Perf.Y",
            e.PerformanceYTD = "Perf.YTD",
            e.Sector = "sector"
        }(u || (u = {}));
        const m = [{
            id: "overview",
            title: p.t(null, void 0, o(15797)),
            screenerTypeContent: {
                stock: {
                    stock: [u.LogoId, u.Name, "close", "change", "change_abs", "Recommend.All", "volume", "Value.Traded", "market_cap_basic", "price_earnings_ttm", "earnings_per_share_basic_ttm", "number_of_employees", u.Sector, "description", "type"],
                    _sector: [u.LogoId, u.Name, "close", "change", "change_abs", "Recommend.All", "volume", "Value.Traded", "market_cap_basic", "price_earnings_ttm", "earnings_per_share_basic_ttm", "number_of_employees", "industry", "description", "type"]
                },
                forex: [u.BaseCurrencyLogoId, u.CurrencyLogoId, u.Name, "close", "change", "change_abs", "bid", "ask", "high", "low", "Recommend.All", "description", "type"],
                crypto: [u.BaseCurrencyLogoId, u.CurrencyLogoId, u.Name, "close", "change", "change_abs", "high", "low", "volume", "24h_vol|5", "24h_vol_change|5", "Recommend.All", "exchange", "description"],
                crypto_mkt: [u.BaseCurrencyLogoId, u.Sector, "market_cap_calc", "market_cap_diluted_calc", "close", "total_shares_outstanding", "total_shares_diluted", "total_value_traded", "change"],
                crypto_mkt_by_symbol: [u.CurrencyLogoId, u.Name, "close", "change", "change_abs", "high", "low", "volume", "Recommend.All", "exchange", "description"],
                crypto_by_symbol: [u.CurrencyLogoId, u.Name, "exchange", "close", "change", "change_abs", "high", "low", "volume", "Recommend.All", "description"],
                futures: [u.LogoId, u.Name, "close", "change", "change_abs", "high", "low", "Recommend.All", "description"],
                continuous_futures: [u.LogoId, u.Name, "expiration", "close", "change", "change_abs", "high", "low", "Recommend.All", "description"],
                cfd: [u.LogoId, u.Name, "close", "change", "change_abs", "high", "low", "Recommend.All", "description"],
                sector: ["description", "market_cap_basic", "dividend_yield_recent", "change", "volume", "elements", "basic_elements"],
                industry: ["description", "market_cap_basic", "dividend_yield_recent", "change", "volume", u.Sector, "elements"],
                currency: [u.LogoId, u.Name, "close", "change", "change_abs", "high", "low", "Recommend.All", "description"],
                bonds: [u.LogoId, u.Name, "coupon", "maturity_date", "close", "change", "change_abs", "high", "low", "Recommend.All", "description"],
                pre_market: [u.LogoId, u.Name, "premarket_close", "premarket_change_abs", "premarket_change", "premarket_volume", "premarket_gap", "close", "change", "volume", "market_cap_basic"],
                post_market: [u.LogoId, u.Name, "postmarket_close", "postmarket_change_abs", "postmarket_change", "postmarket_volume", "close", "change", "volume", "market_cap_basic"]
            },
            content: [],
            screeners: [d.Stock, d.StockCompact, d.Forex, d.Futures, d.ContinuousFutures, d.Cfd, d.Crypto, d.CryptoMkt, d.CryptoMktBySymbol, d.CryptoBySymbol, d.Sector, d.Industry, d.Currency, d.Bonds, d.PreMarket, d.PostMarket],
            showOnWidget: !0
        }, {
            id: "performance",
            title: p.t(null, void 0, o(970074)),
            screenerTypeContent: {
                stock: [u.LogoId, u.Name, "description", "type", "change.1", "change.5", "change.15", "change.60", "change.240", "change", "change.1W", "change.1M", "Perf.3M", "Perf.6M", "Perf.YTD", "Perf.Y", "Perf.5Y", "Perf.All", "beta_1_year", "Volatility.D"],
                futures: [u.LogoId, u.Name, "description", "type", "change", "change.1W", "change.1M", "Perf.3M", "Perf.6M", "Perf.YTD", "Perf.Y", "Volatility.D"],
                continuous_futures: [u.LogoId, u.Name, "description", "type", "change", "change.1W", "change.1M", "Perf.3M", "Perf.6M", "Perf.YTD", "Perf.Y", "Volatility.D"],
                forex: [u.BaseCurrencyLogoId, u.CurrencyLogoId, u.Name, "description", "type", "change", "change.1W", "change.1M", "Perf.3M", "Perf.6M", "Perf.YTD", "Perf.Y", "Perf.5Y", "Perf.All", "Volatility.D"],
                crypto: [u.BaseCurrencyLogoId, u.CurrencyLogoId, u.Name, "description", "type", "change", "change.1W", "change.1M", "Perf.3M", "Perf.6M", "Perf.YTD", "Perf.Y", "Perf.5Y", "Perf.All", "Volatility.D"],
                crypto_mkt: [u.BaseCurrencyLogoId, u.Sector, "description", "type", "change", "change.1W", "change.1M", "Perf.3M", "Perf.6M", "Perf.YTD", "Perf.Y", "Volatility.D"],
                crypto_mkt_by_symbol: [u.CurrencyLogoId, u.Name, "description", "type", "change", "change.1W", "change.1M", "Perf.3M", "Perf.6M", "Perf.YTD", "Perf.Y", "Volatility.D"],
                crypto_by_symbol: [u.CurrencyLogoId, u.Name, "exchange", "description", "type", "change", "change.1W", "change.1M", "Perf.3M", "Perf.6M", "Perf.YTD", "Perf.Y", "Volatility.D"],
                cfd: [u.LogoId, u.Name, "description", "type", "change", "change.1W", "change.1M", "Perf.3M", "Perf.6M", "Perf.YTD", "Perf.Y", "Volatility.D"],
                sector: ["description", "change", "change.1W", "change.1M", "Perf.3M", "Perf.6M", "Perf.YTD", "Perf.Y"],
                industry: ["description", "change", "change.1W", "change.1M", "Perf.3M", "Perf.6M", "Perf.YTD", "Perf.Y"],
                currency: [u.LogoId, u.Name, "description", "type", "change", "change.1W", "change.1M", "Perf.3M", "Perf.6M", "Perf.YTD", "Perf.Y", "Volatility.D"],
                bonds: [u.LogoId, u.Name, "description", "type", "change", "change.1W", "change.1M", "Perf.3M", "Perf.6M", "Perf.YTD", "Perf.Y", "Volatility.D"]
            },
            content: [],
            screeners: [d.Stock, d.StockCompact, d.Forex, d.Futures, d.ContinuousFutures, d.Cfd, d.Crypto, d.CryptoMkt, d.CryptoBySymbol, d.CryptoMktBySymbol, d.Sector, d.Industry, d.Currency, d.Bonds, d.PreMarket, d.PostMarket],
            showOnWidget: !0
        }, {
            id: "extended_hours",
            title: p.t(null, void 0, o(832349)),
            content: [u.LogoId, u.Name, "description", "premarket_close", "premarket_change", "premarket_gap", "premarket_volume", "close", "change", "volume", "postmarket_close", "postmarket_change", "postmarket_volume", "Recommend.All", "market_cap_basic"],
            screeners: [d.Stock],
            showOnWidget: !1
        }, {
            id: "valuation",
            title: p.t(null, void 0, o(201884)),
            content: [u.LogoId, u.Name, "description", "type", "close", "market_cap_basic", "price_earnings_ttm", "price_revenue_ttm", "earnings_per_share_basic_ttm", "last_annual_eps", "enterprise_value_ebitda_ttm", "enterprise_value_fq", "total_shares_outstanding_fundamental"],
            screeners: [d.Stock, d.StockCompact, d.PreMarket, d.PostMarket],
            showOnWidget: !0
        }, {
            id: "dividends",
            title: p.t(null, void 0, o(137260)),
            content: [u.LogoId, u.Name, "description", "type", "close", "dividend_yield_recent", "dividends_paid", "dps_common_stock_prim_issue_fy"],
            screeners: [d.Stock, d.StockCompact, d.PreMarket, d.PostMarket],
            showOnWidget: !0
        }, {
            id: "margins",
            title: p.t(null, {
                context: "screener"
            }, o(113262)),
            content: [u.LogoId, u.Name, "description", "type", "gross_margin", "operating_margin", "pre_tax_margin", "after_tax_margin"],
            screeners: [d.Stock, d.StockCompact, d.PreMarket, d.PostMarket],
            showOnWidget: !0
        }, {
            id: "income_statement",
            title: p.t(null, void 0, o(558462)),
            content: [u.LogoId, u.Name, "description", "type", "basic_eps_net_income", "earnings_per_share_basic_ttm", "earnings_per_share_diluted_ttm", "ebitda", "gross_profit_fq", "gross_profit", "total_revenue", "last_annual_eps", "last_annual_revenue", "net_income"],
            screeners: [d.Stock, d.StockCompact, d.PreMarket, d.PostMarket],
            showOnWidget: !0
        }, {
            id: "balance_sheet",
            title: p.t(null, void 0, o(902524)),
            content: [u.LogoId, u.Name, "description", "type", "current_ratio", "debt_to_equity", "net_debt", "quick_ratio", "total_assets", "total_debt", "total_current_assets"],
            screeners: [d.Stock, d.StockCompact, d.PreMarket, d.PostMarket],
            showOnWidget: !0
        }, {
            id: "oscillators",
            title: p.t(null, void 0, o(749128)),
            screenerTypeContent: {
                stock: [u.LogoId, u.Name, "Recommend.Other", "ADX", "AO", "ATR", "CCI20", "MACD.macd", "MACD.signal", "Mom", "RSI", "Stoch.K", "Stoch.D", "description", "type"],
                forex: [u.BaseCurrencyLogoId, u.CurrencyLogoId, u.Name, "Recommend.Other", "ADX", "AO", "ATR", "CCI20", "MACD.macd", "MACD.signal", "Mom", "RSI", "Stoch.K", "Stoch.D", "description", "type"],
                futures: [u.LogoId, u.Name, "Recommend.Other", "ADX", "AO", "ATR", "CCI20", "MACD.macd", "MACD.signal", "Mom", "RSI", "Stoch.K", "Stoch.D", "description", "type"],
                continuous_futures: [u.LogoId, u.Name, "Recommend.Other", "ADX", "AO", "ATR", "CCI20", "MACD.macd", "MACD.signal", "Mom", "RSI", "Stoch.K", "Stoch.D", "description", "type"],
                crypto: [u.BaseCurrencyLogoId, u.CurrencyLogoId, u.Name, "Recommend.Other", "ADX", "AO", "ATR", "CCI20", "MACD.macd", "MACD.signal", "Mom", "RSI", "Stoch.K", "Stoch.D", "description", "type"],
                crypto_mkt: [u.BaseCurrencyLogoId, u.Sector, "Recommend.Other", "ADX", "AO", "ATR", "CCI20", "MACD.macd", "MACD.signal", "Mom", "RSI", "Stoch.K", "Stoch.D", "description", "type"],
                crypto_mkt_by_symbol: [u.CurrencyLogoId, u.Name, "Recommend.Other", "ADX", "AO", "ATR", "CCI20", "MACD.macd", "MACD.signal", "Mom", "RSI", "Stoch.K", "Stoch.D", "description", "type"],
                crypto_by_symbol: [u.CurrencyLogoId, u.Name, "exchange", "Recommend.Other", "ADX", "AO", "ATR", "CCI20", "MACD.macd", "MACD.signal", "Mom", "RSI", "Stoch.K", "Stoch.D", "description", "type"],
                cfd: [u.LogoId, u.Name, "Recommend.Other", "ADX", "AO", "ATR", "CCI20", "MACD.macd", "MACD.signal", "Mom", "RSI", "Stoch.K", "Stoch.D", "description", "type"],
                currency: [u.LogoId, u.Name, "Recommend.Other", "ADX", "AO", "ATR", "CCI20", "MACD.macd", "MACD.signal", "Mom", "RSI", "Stoch.K", "Stoch.D", "description", "type"],
                bonds: [u.LogoId, u.Name, "Recommend.Other", "ADX", "AO", "ATR", "CCI20", "MACD.macd", "MACD.signal", "Mom", "RSI", "Stoch.K", "Stoch.D", "description", "type"]
            },
            content: [],
            screeners: [d.Stock, d.StockCompact, d.Forex, d.Futures, d.ContinuousFutures, d.Cfd, d.Crypto, d.CryptoMkt, d.CryptoMktBySymbol, d.CryptoBySymbol, d.Currency, d.Bonds, d.PreMarket, d.PostMarket],
            showOnWidget: !0
        }, {
            id: "moving_averages",
            title: p.t(null, void 0, o(61980)),
            screenerTypeContent: {
                stock: [u.LogoId, u.Name, "Recommend.MA", "close", "SMA20", "SMA50", "SMA200", "BB.upper", "BB.lower", "description", "type"],
                forex: [u.BaseCurrencyLogoId, u.CurrencyLogoId, u.Name, "Recommend.MA", "close", "SMA20", "SMA50", "SMA200", "BB.upper", "BB.lower", "description", "type"],
                futures: [u.LogoId, u.Name, "Recommend.MA", "close", "SMA20", "SMA50", "SMA200", "BB.upper", "BB.lower", "description", "type"],
                continuous_futures: [u.LogoId, u.Name, "Recommend.MA", "close", "SMA20", "SMA50", "SMA200", "BB.upper", "BB.lower", "description", "type"],
                crypto: [u.BaseCurrencyLogoId, u.CurrencyLogoId, u.Name, "Recommend.MA", "close", "SMA20", "SMA50", "SMA200", "BB.upper", "BB.lower", "description", "type"],
                crypto_mkt: [u.BaseCurrencyLogoId, u.Sector, "Recommend.MA", "close", "SMA20", "SMA50", "SMA200", "BB.upper", "BB.lower", "description", "type"],
                crypto_mkt_by_symbol: [u.CurrencyLogoId, u.Name, "Recommend.MA", "close", "SMA20", "SMA50", "SMA200", "BB.upper", "BB.lower", "description", "type"],
                crypto_by_symbol: [u.CurrencyLogoId, u.Name, "exchange", "Recommend.MA", "close", "SMA20", "SMA50", "SMA200", "BB.upper", "BB.lower", "description", "type"],
                cfd: [u.LogoId, u.Name, "Recommend.MA", "close", "SMA20", "SMA50", "SMA200", "BB.upper", "BB.lower", "description", "type"],
                currency: [u.LogoId, u.Name, "Recommend.MA", "close", "SMA20", "SMA50", "SMA200", "BB.upper", "BB.lower", "description", "type"],
                bonds: [u.LogoId, u.Name, "Recommend.MA", "close", "SMA20", "SMA50", "SMA200", "BB.upper", "BB.lower", "description", "type"]
            },
            content: [],
            screeners: [d.Stock, d.StockCompact, d.Forex, d.Futures, d.ContinuousFutures, d.Cfd, d.Crypto, d.CryptoMkt, d.CryptoMktBySymbol, d.CryptoBySymbol, d.Currency, d.Bonds, d.PreMarket, d.PostMarket],
            showOnWidget: !0
        }]
          , _ = [u.LogoId, "name", "market_cap_basic", "earnings_per_share_forecast_next_fq", "earnings_per_share_fq", "eps_surprise_fq", "eps_surprise_percent_fq", "revenue_forecast_next_fq", "revenue_fq", "earnings_release_next_date", "earnings_release_next_calendar_date", "earnings_release_next_time", "description", "type"];
        function g(e) {
            const t = {
                screenerType: d.Stock,
                markets: ["stock"],
                isCompact: !1,
                subtype: "",
                isOnWidget: !1
            };
            let o = m;
            const i = Object.assign(t, e)
              , {screenerType: n, isCompact: s, subtype: l, isOnWidget: a} = i
              , {markets: c} = i;
            return o = o.filter((e => {
                if (n === d.Stock) {
                    const t = s ? `${n}_compact` : n;
                    return e.screeners.includes(t)
                }
                return e.screeners.includes(n)
            }
            )),
            a && (o = o.filter((e => !0 === e.showOnWidget))),
            o.forEach((e => {
                if (void 0 !== e.screenerTypeContent) {
                    const o = e.screenerTypeContent[(0,
                    r.ensureDefined)(n)] || e.screenerTypeContent.stock;
                    if (t = o,
                    Array.isArray(t))
                        e.content = (0,
                        r.ensureDefined)(o);
                    else {
                        const t = Object.keys(o)
                          , i = c.reduce(( (e, t) => (e.push(`${(0,
                        r.ensureDefined)(t)}_${(0,
                        r.ensureDefined)(l)}`),
                        e.push(`${(0,
                        r.ensureDefined)(l)}`),
                        e.push((0,
                        r.ensureDefined)(t)),
                        e)), [])
                          , n = function(e, t) {
                            for (const o of e)
                                if (t.includes(o))
                                    return o;
                            return "stock"
                        }([...new Set(i)], t);
                        e.content = o[n]
                    }
                }
                var t;
                a && (e.content = e.content.filter((e => "description" !== e)))
            }
            )),
            o
        }
        var v = o(554620);
        var f = o(536794)
          , y = o(276536)
          , b = o(761637)
          , w = o(89831)
          , S = o(51196)
          , C = o(722652)
          , k = o(909456);
        var x = o(976531);
        const M = new RegExp(/0+$/);
        class E extends w.PriceFormatter {
            constructor(e={}) {
                if (void 0 !== e.fractional)
                    throw new Error("Fractional should not be used with this formatter");
                super(e)
            }
            format(e, t={}) {
                const {signPositive: o, tailSize: i, ignoreLocaleNumberFormat: n} = t
                  , r = e.toString()
                  , s = (0,
                x.getNumberFormat)(this._ignoreLocaleNumberFormat || n);
                if (-1 !== r.indexOf("e-")) {
                    const e = r.split("e-")
                      , t = Number(e[0])
                      , o = Number(e[1]);
                    return this._fractionalLength && o > this._fractionalLength + 1 ? `0${s.decimalSign}00` : `${t < 0 ? "−" : ""}0${s.decimalSign}${"0".repeat(o - 1)}${Math.abs(Math.round(t))}`
                }
                {
                    let t = super.format(e, {
                        signPositive: o,
                        tailSize: i,
                        ignoreLocaleNumberFormat: n
                    });
                    t.includes("e") || (t = t.replace(M, ""));
                    const [r,l] = t.split(s.decimalSign);
                    return l && l.length >= 2 ? t : `${r}${s.decimalSign}${((l || "") + "00").substring(0, 2)}`
                }
            }
        }
        var F = o(719240)
          , T = o(904207)
          , A = o(696788)
          , I = o(760863);
        const D = (0,
        o(95419).getScreenerIntervals)()
          , P = "1D";
        function L(e) {
            return D.find((t => t.id === e))
        }
        function $(e, t) {
            if (e = function(e) {
                if (Ze[e] && Ze[e].alias)
                    return Ze[e].alias;
                return e
            }(e),
            /(change|change_abs).\d{1,3}/.test(e) || Ze[e] && Ze[e].useDefaultTimeIntervalFromFieldName)
                return e.replace(".", "|");
            if (!t || t === P || Ze[e] && Ze[e].useDefaultTimeInterval)
                return e;
            const o = L(t);
            if (o) {
                const t = o.value || "";
                if (Ze[e] && Ze[e].customResolutions) {
                    const o = Ze[e].customResolutions;
                    if (t && -1 !== o.indexOf(t.toString()))
                        return `${e}|${t}`
                }
            }
            return e
        }
        var B = o(368270)
          , R = o(999102);
        const O = {
            common: ["common", "foreign-issuer"],
            stock: ["common"],
            dr: ["", "foreign-issuer"],
            preferred: ["preferred"],
            fund: ["fund"],
            structured: [""],
            spot: ["spot"],
            futures: ["futures"]
        }
          , N = {
            closedend: ["closedend"],
            etf: ["etf", "etf,odd", "etf,otc", "etf,cfd"],
            etn: ["etn"],
            mutual: ["mutual"],
            reit: ["reit", "reit,cfd", "trust,reit"],
            trust: ["trust"],
            unit: ["unit"]
        }
          , W = {
            perpetual: ["perpetual"]
        };
        function V(e) {
            let t = []
              , o = [];
            if (Array.isArray(e))
                for (const i of e) {
                    const [e,n] = z(i);
                    t = [...t, ...e],
                    o = [...o, ...n]
                }
            else
                [t,o] = z(e);
            return o = [...new Set(o)],
            t.length && o.length ? [U("type", t), U("subtype", o)] : t.length ? [U("type", t)] : [U("subtype", o)]
        }
        function q(e) {
            const t = []
              , o = [].concat(e);
            for (const e of o)
                j(e) && t.push({
                    left: "type",
                    operation: "in_range",
                    right: O[e]
                }),
                H(e) && t.push({
                    left: "typespecs",
                    operation: "has",
                    right: W[e]
                });
            return {
                filter2Flag: !0,
                filter2AndPart: t,
                filter: []
            }
        }
        function z(e) {
            let t = []
              , o = [];
            return "etn" === e ? [["structured"], ["etn"]] : (!function(e) {
                return e in N
            }(e) ? !function(e) {
                return "common" === e || "preferred" === e || "stock" === e
            }(e) ? j(e) ? (t = [e],
            o = O[e]) : t = [e] : (t.push("stock"),
            o = O[e]) : (t.push("fund"),
            o = N[e]),
            [t, o])
        }
        function U(e, t) {
            const o = (0,
            R.uniq)(t)
              , i = 1 === o.length;
            return {
                left: e,
                operation: i ? "equal" : "in_range",
                right: i ? o[0] : o
            }
        }
        function j(e) {
            return e in O
        }
        function H(e) {
            return e in W
        }
        var G = o(309887);
        const X = {
            name: [p.t(null, void 0, o(905791)), p.t(null, void 0, o(905791))],
            description: [p.t(null, void 0, o(178734)), p.t(null, void 0, o(178734))],
            country: [p.t(null, void 0, o(899937)), p.t(null, void 0, o(899937))],
            type: [p.t(null, void 0, o(356994)), p.t(null, void 0, o(356994))],
            after_tax_margin: [p.t(null, void 0, o(341051)), p.t(null, void 0, o(134673))],
            average_volume: [p.t(null, void 0, o(628963)), p.t(null, void 0, o(117230))],
            average_volume_30d_calc: [p.t(null, void 0, o(268637)), p.t(null, void 0, o(807239))],
            average_volume_60d_calc: [p.t(null, void 0, o(223169)), p.t(null, void 0, o(125190))],
            average_volume_90d_calc: [p.t(null, void 0, o(788255)), p.t(null, void 0, o(914334))],
            basic_eps_net_income: [p.t(null, void 0, o(489047)), p.t(null, void 0, o(736802))],
            beta_1_year: [p.t(null, void 0, o(169390)), p.t(null, void 0, o(36761))],
            beta_3_year: [p.t(null, void 0, o(851574)), p.t(null, void 0, o(671421))],
            beta_5_year: [p.t(null, void 0, o(89590)), p.t(null, void 0, o(395916))],
            candlestick: [p.t(null, {
                context: "candlestick_pattern"
            }, o(928137)), p.t(null, {
                context: "candlestick_pattern"
            }, o(928137))],
            current_ratio: [p.t(null, void 0, o(766730)), p.t(null, void 0, o(107179))],
            debt_to_assets: [p.t(null, void 0, o(163207)), p.t(null, void 0, o(163207))],
            debt_to_equity: [p.t(null, void 0, o(800007)), p.t(null, void 0, o(239308))],
            dividends_paid: [p.t(null, void 0, o(938878)), p.t(null, void 0, o(920332))],
            dividends_per_share_fq: [p.t(null, void 0, o(163627)), p.t(null, void 0, o(373181))],
            dividends_yield: [p.t(null, void 0, o(883408)), p.t(null, void 0, o(864771))],
            dividend_yield_recent: [p.t(null, void 0, o(883408)), p.t(null, void 0, o(864771))],
            dps_common_stock_prim_issue_fy: [p.t(null, void 0, o(712578)), p.t(null, void 0, o(411231))],
            earnings_per_share_basic_ttm: [p.t(null, void 0, o(519391)), p.t(null, void 0, o(986366))],
            earnings_per_share_diluted_ttm: [p.t(null, void 0, o(748754)), p.t(null, void 0, o(748754))],
            earnings_per_share_forecast_next_fq: [p.t(null, void 0, o(39889)), p.t(null, void 0, o(603058))],
            earnings_per_share_fq: [p.t(null, void 0, o(812577)), p.t(null, void 0, o(812577))],
            earnings_release_date: [p.t(null, void 0, o(352969)), p.t(null, void 0, o(352969))],
            earnings_release_next_date: [p.t(null, void 0, o(167826)), p.t(null, void 0, o(167826))],
            ebitda: [p.t(null, void 0, o(740969)), p.t(null, void 0, o(226413))],
            enterprise_value_ebitda_ttm: [p.t(null, void 0, o(288529)), p.t(null, void 0, o(501179))],
            enterprise_value_fq: [p.t(null, void 0, o(661975)), p.t(null, void 0, o(822893))],
            exchange: [p.t(null, void 0, o(786905)), p.t(null, void 0, o(786905))],
            free_cash_flow_margin_fy: [p.t(null, void 0, o(441415)), p.t(null, void 0, o(441415))],
            free_cash_flow_margin_ttm: [p.t(null, void 0, o(829593)), p.t(null, void 0, o(829593))],
            gross_margin: [p.t(null, void 0, o(411483)), p.t(null, void 0, o(821671))],
            gross_profit: [p.t(null, void 0, o(778480)), p.t(null, void 0, o(778480))],
            gross_profit_fq: [p.t(null, void 0, o(221872)), p.t(null, void 0, o(221872))],
            index: [p.t(null, void 0, o(223051)), p.t(null, void 0, o(223051))],
            industry: [p.t(null, void 0, o(407727)), p.t(null, void 0, o(407727))],
            last_annual_eps: [p.t(null, void 0, o(2650)), p.t(null, void 0, o(2650))],
            last_annual_revenue: [p.t(null, void 0, o(545657)), p.t(null, void 0, o(355630))],
            long_term_capital: [p.t(null, void 0, o(239426)), p.t(null, void 0, o(239426))],
            market_cap_basic: [p.t(null, void 0, o(361460)), p.t(null, void 0, o(217839))],
            market_cap_calc: [p.t(null, void 0, o(361460)), p.t(null, void 0, o(217839))],
            market_cap_diluted_calc: [p.t(null, void 0, o(769911)), p.t(null, void 0, o(317812))],
            net_debt: [p.t(null, void 0, o(76272)), p.t(null, void 0, o(27693))],
            net_income: [p.t(null, void 0, o(477692)), p.t(null, void 0, o(364491))],
            number_of_employees: [p.t(null, void 0, o(715223)), p.t(null, void 0, o(731116))],
            number_of_shareholders: [p.t(null, void 0, o(541984)), p.t(null, void 0, o(40908))],
            open_price: [p.t(null, void 0, o(351870)), p.t(null, void 0, o(16610))],
            operating_margin: [p.t(null, void 0, o(767772)), p.t(null, void 0, o(858851))],
            pre_tax_margin: [p.t(null, void 0, o(846426)), p.t(null, void 0, o(610956))],
            preferred_dividends: [p.t(null, void 0, o(709820)), p.t(null, void 0, o(329378))],
            prev_close_price: [p.t(null, void 0, o(764205)), p.t(null, void 0, o(363861))],
            price_52_week_high: [p.t(null, void 0, o(606619)), p.t(null, void 0, o(819159))],
            price_52_week_low: [p.t(null, void 0, o(65925)), p.t(null, void 0, o(357308))],
            price_book_ratio: [p.t(null, void 0, o(673639)), p.t(null, void 0, o(238173))],
            price_earnings_ttm: [p.t(null, void 0, o(809147)), p.t(null, void 0, o(371257))],
            price_percent_change_1_week: [p.t(null, void 0, o(794236)), p.t(null, void 0, o(421792))],
            price_percent_change_4_week: [p.t(null, void 0, o(994378)), p.t(null, void 0, o(250273))],
            price_percent_change_52_week: [p.t(null, void 0, o(918584)), p.t(null, void 0, o(979905))],
            price_revenue_ttm: [p.t(null, void 0, o(839605)), p.t(null, void 0, o(987202))],
            price_sales_ratio: [p.t(null, void 0, o(97257)), p.t(null, void 0, o(227203))],
            quick_ratio: [p.t(null, void 0, o(485571)), p.t(null, void 0, o(633399))],
            return_of_invested_capital_percent_ttm: [p.t(null, void 0, o(38840)), p.t(null, void 0, o(343773))],
            return_on_assets: [p.t(null, void 0, o(270789)), p.t(null, void 0, o(307859))],
            return_on_equity: [p.t(null, void 0, o(181306)), p.t(null, void 0, o(310165))],
            return_on_invested_capital: [p.t(null, void 0, o(156309)), p.t(null, void 0, o(343773))],
            revenue_per_employee: [p.t(null, void 0, o(674129)), p.t(null, void 0, o(137709))],
            sector: [p.t(null, void 0, o(99804)), p.t(null, void 0, o(99804))],
            submarket: [p.t(null, void 0, o(183913)), p.t(null, void 0, o(183913))],
            is_primary: [p.t(null, void 0, o(279362)), p.t(null, void 0, o(279362))],
            active_symbol: [p.t(null, void 0, o(597284)), p.t(null, void 0, o(597284))],
            eps_surprise_fq: [p.t(null, void 0, o(571858)), p.t(null, void 0, o(571858))],
            eps_surprise_percent_fq: [p.t(null, void 0, o(323939)), p.t(null, void 0, o(323939))],
            total_assets: [p.t(null, void 0, o(358964)), p.t(null, void 0, o(104760))],
            total_capital: [p.t(null, void 0, o(719353)), p.t(null, void 0, o(555440))],
            total_current_assets: [p.t(null, void 0, o(339010)), p.t(null, void 0, o(424391))],
            total_debt: [p.t(null, void 0, o(577126)), p.t(null, void 0, o(671507))],
            total_revenue: [p.t(null, void 0, o(307726)), p.t(null, void 0, o(278031))],
            total_liabilities_fy: [p.t(null, void 0, o(87517)), p.t(null, void 0, o(295707))],
            total_liabilities_fq: [p.t(null, void 0, o(220145)), p.t(null, void 0, o(532064))],
            total_shares_outstanding_fundamental: [p.t(null, void 0, o(96234)), p.t(null, void 0, o(288368))],
            volume: [p.t(null, void 0, o(937644)), p.t(null, {
                context: "study"
            }, o(424261))],
            relative_volume: [p.t(null, void 0, o(963851)), p.t(null, void 0, o(297458))],
            relative_volume_at_time: [p.t(null, void 0, o(78742)), p.t(null, void 0, o(181743))],
            change_abs: [p.t(null, void 0, o(537276)), p.t(null, void 0, o(762888))],
            change: [p.t(null, void 0, o(923599)), p.t(null, void 0, o(335137))],
            "change.1": [p.t(null, void 0, o(413045)).format({
                resolution: p.t(null, void 0, o(120468))
            }), p.t(null, void 0, o(829761)).format({
                resolution: p.t(null, void 0, o(120468))
            })],
            "change_abs.1": [p.t(null, void 0, o(354557)).format({
                resolution: p.t(null, void 0, o(120468))
            }), p.t(null, void 0, o(152555)).format({
                resolution: p.t(null, void 0, o(120468))
            })],
            "change.5": [p.t(null, void 0, o(413045)).format({
                resolution: p.t(null, void 0, o(576515))
            }), p.t(null, void 0, o(829761)).format({
                resolution: p.t(null, void 0, o(576515))
            })],
            "change_abs.5": [p.t(null, void 0, o(354557)).format({
                resolution: p.t(null, void 0, o(576515))
            }), p.t(null, void 0, o(152555)).format({
                resolution: p.t(null, void 0, o(576515))
            })],
            "change.15": [p.t(null, void 0, o(413045)).format({
                resolution: p.t(null, void 0, o(208608))
            }), p.t(null, void 0, o(829761)).format({
                resolution: p.t(null, void 0, o(208608))
            })],
            "change_abs.15": [p.t(null, void 0, o(354557)).format({
                resolution: p.t(null, void 0, o(208608))
            }), p.t(null, void 0, o(152555)).format({
                resolution: p.t(null, void 0, o(208608))
            })],
            "change.60": [p.t(null, void 0, o(413045)).format({
                resolution: p.t(null, void 0, o(336157))
            }), p.t(null, void 0, o(829761)).format({
                resolution: p.t(null, void 0, o(336157))
            })],
            "change_abs.60": [p.t(null, void 0, o(354557)).format({
                resolution: p.t(null, void 0, o(336157))
            }), p.t(null, void 0, o(152555)).format({
                resolution: p.t(null, void 0, o(336157))
            })],
            "change.240": [p.t(null, void 0, o(413045)).format({
                resolution: p.t(null, void 0, o(690755))
            }), p.t(null, void 0, o(829761)).format({
                resolution: p.t(null, void 0, o(690755))
            })],
            "change_abs.240": [p.t(null, void 0, o(354557)).format({
                resolution: p.t(null, void 0, o(690755))
            }), p.t(null, void 0, o(152555)).format({
                resolution: p.t(null, void 0, o(690755))
            })],
            "change.1W": [p.t(null, void 0, o(413045)).format({
                resolution: p.t(null, void 0, o(189696))
            }), p.t(null, void 0, o(829761)).format({
                resolution: p.t(null, void 0, o(189696))
            })],
            "change_abs.1W": [p.t(null, void 0, o(354557)).format({
                resolution: p.t(null, void 0, o(189696))
            }), p.t(null, void 0, o(152555)).format({
                resolution: p.t(null, void 0, o(189696))
            })],
            "change.1M": [p.t(null, void 0, o(413045)).format({
                resolution: p.t(null, void 0, o(333493))
            }), p.t(null, void 0, o(829761)).format({
                resolution: p.t(null, void 0, o(333493))
            })],
            "change_abs.1M": [p.t(null, void 0, o(354557)).format({
                resolution: p.t(null, void 0, o(333493))
            }), p.t(null, void 0, o(152555)).format({
                resolution: p.t(null, void 0, o(333493))
            })],
            currency: [p.t(null, void 0, o(79899)), p.t(null, void 0, o(79899))],
            pre_change: [p.t(null, void 0, o(796768)), p.t(null, void 0, o(353211))],
            post_change: [p.t(null, void 0, o(287719)), p.t(null, void 0, o(427921))],
            bid: [p.t(null, void 0, o(395506)), p.t(null, void 0, o(395506))],
            ask: [p.t(null, void 0, o(535928)), p.t(null, void 0, o(535928))],
            close: [p.t(null, void 0, o(862578)), p.t(null, void 0, o(862578))],
            open: [p.t(null, void 0, o(16610)), p.t(null, void 0, o(16610))],
            high: [p.t(null, void 0, o(778254)), p.t(null, void 0, o(778254))],
            low: [p.t(null, void 0, o(165318)), p.t(null, void 0, o(165318))],
            gap: [p.t(null, void 0, o(907188)), p.t(null, void 0, o(907188))],
            price_earnings_to_growth_ttm: [p.t(null, void 0, o(6284)), p.t(null, void 0, o(955588))],
            price_sales: [p.t(null, void 0, o(10684)), p.t(null, void 0, o(10684))],
            price_book_fq: [p.t(null, void 0, o(126853)), p.t(null, void 0, o(368565))],
            price_free_cash_flow_ttm: [p.t(null, void 0, o(929758)), p.t(null, void 0, o(461751))],
            float_shares_outstanding: [p.t(null, void 0, o(99768)), p.t(null, void 0, o(620734))],
            free_cash_flow: [p.t(null, void 0, o(844667)), p.t(null, void 0, o(823980))],
            total_shares_outstanding: [p.t(null, void 0, o(600368)), p.t(null, void 0, o(600368))],
            total_shares_diluted: [p.t(null, void 0, o(788149)), p.t(null, void 0, o(788149))],
            total_value_traded: [p.t(null, void 0, o(525729)), p.t(null, void 0, o(660954))],
            change_from_open: [p.t(null, void 0, o(778676)), p.t(null, void 0, o(776021))],
            change_from_open_abs: [p.t(null, void 0, o(643878)), p.t(null, void 0, o(953086))],
            "Perf.W": [p.t(null, void 0, o(890996)), p.t(null, void 0, o(122577))],
            "Perf.1M": [p.t(null, void 0, o(585212)), p.t(null, void 0, o(802933))],
            "Perf.3M": [p.t(null, void 0, o(263886)), p.t(null, void 0, o(514469))],
            "Perf.6M": [p.t(null, void 0, o(143196)), p.t(null, void 0, o(319848))],
            "Perf.Y": [p.t(null, void 0, o(823446)), p.t(null, void 0, o(201989))],
            "Perf.YTD": [p.t(null, void 0, o(807134)), p.t(null, void 0, o(598739))],
            "Perf.5Y": [p.t(null, void 0, o(738333)), p.t(null, void 0, o(166710))],
            "Perf.All": [p.t(null, void 0, o(605881)), p.t(null, void 0, o(963837))],
            "Volatility.W": [p.t(null, void 0, o(130049)), p.t(null, void 0, o(70280))],
            "Volatility.M": [p.t(null, void 0, o(335961)), p.t(null, void 0, o(25711))],
            "Volatility.D": [p.t(null, void 0, o(339226)), p.t(null, void 0, o(339226))],
            RSI: [p.t(null, void 0, o(444554)), p.t(null, void 0, o(230537))],
            RSI7: [p.t(null, void 0, o(722241)), p.t(null, void 0, o(901578))],
            ADX: [p.t(null, void 0, o(500627)), p.t(null, void 0, o(431739))],
            "ADX+DI": [p.t(null, void 0, o(184381)), p.t(null, {
                context: "Positive_Directional_Indicator_short_title"
            }, o(267618))],
            "ADX-DI": [p.t(null, void 0, o(474190)), p.t(null, {
                context: "Negative_Directional_Indicator_short_title"
            }, o(371511))],
            ATR: [p.t(null, void 0, o(755882)), p.t(null, void 0, o(798268))],
            Mom: [p.t(null, void 0, o(468222)), p.t(null, void 0, o(126687))],
            "High.All": [p.t(null, void 0, o(176382)), p.t(null, void 0, o(176382))],
            "Low.All": [p.t(null, void 0, o(399900)), p.t(null, void 0, o(399900))],
            "High.6M": [p.t(null, void 0, o(203345)), p.t(null, void 0, o(203345))],
            "Low.6M": [p.t(null, void 0, o(248280)), p.t(null, void 0, o(248280))],
            "High.3M": [p.t(null, void 0, o(121250)), p.t(null, void 0, o(121250))],
            "Low.3M": [p.t(null, void 0, o(692070)), p.t(null, void 0, o(692070))],
            "High.1M": [p.t(null, void 0, o(220974)), p.t(null, void 0, o(220974))],
            "Low.1M": [p.t(null, void 0, o(352739)), p.t(null, void 0, o(352739))],
            EMA5: [p.t(null, void 0, o(513079)).format({
                number: "5"
            }), p.t(null, void 0, o(755460))],
            EMA10: [p.t(null, void 0, o(513079)).format({
                number: "10"
            }), p.t(null, void 0, o(775556))],
            EMA20: [p.t(null, void 0, o(513079)).format({
                number: "20"
            }), p.t(null, void 0, o(559511))],
            EMA30: [p.t(null, void 0, o(513079)).format({
                number: "30"
            }), p.t(null, void 0, o(727577))],
            EMA50: [p.t(null, void 0, o(513079)).format({
                number: "50"
            }), p.t(null, void 0, o(30194))],
            EMA100: [p.t(null, void 0, o(513079)).format({
                number: "100"
            }), p.t(null, void 0, o(790009))],
            EMA200: [p.t(null, void 0, o(513079)).format({
                number: "200"
            }), p.t(null, void 0, o(302984))],
            SMA5: [p.t(null, void 0, o(141337)).format({
                number: "5"
            }), p.t(null, void 0, o(646917))],
            SMA10: [p.t(null, void 0, o(141337)).format({
                number: "10"
            }), p.t(null, void 0, o(524449))],
            SMA20: [p.t(null, void 0, o(141337)).format({
                number: "20"
            }), p.t(null, void 0, o(860806))],
            SMA30: [p.t(null, void 0, o(141337)).format({
                number: "30"
            }), p.t(null, void 0, o(869398))],
            SMA50: [p.t(null, void 0, o(141337)).format({
                number: "50"
            }), p.t(null, void 0, o(552362))],
            SMA100: [p.t(null, void 0, o(141337)).format({
                number: "100"
            }), p.t(null, void 0, o(769702))],
            SMA200: [p.t(null, void 0, o(141337)).format({
                number: "200"
            }), p.t(null, void 0, o(346186))],
            "Stoch.K": [p.t(null, void 0, o(855483)), p.t(null, void 0, o(261017))],
            "Stoch.D": [p.t(null, void 0, o(41433)), p.t(null, void 0, o(742226))],
            "MACD.macd": [p.t(null, void 0, o(526469)), p.t(null, void 0, o(13668))],
            "MACD.signal": [p.t(null, void 0, o(723610)), p.t(null, void 0, o(696697))],
            "Aroon.Up": [p.t(null, void 0, o(225828)), p.t(null, void 0, o(89574))],
            "Aroon.Down": [p.t(null, void 0, o(787752)), p.t(null, void 0, o(512527))],
            "BB.upper": [p.t(null, void 0, o(94146)), p.t(null, void 0, o(318995))],
            "BB.lower": [p.t(null, void 0, o(623567)), p.t(null, void 0, o(626701))],
            goodwill: [p.t(null, void 0, o(577557)), p.t(null, void 0, o(577557))],
            debt_to_equity_fq: [p.t(null, void 0, o(379111)), p.t(null, void 0, o(206617))],
            CCI20: [p.t(null, void 0, o(893733)), p.t(null, void 0, o(892566))],
            "DonchCh20.Upper": [p.t(null, void 0, o(693480)), p.t(null, void 0, o(319815))],
            "DonchCh20.Lower": [p.t(null, void 0, o(4705)), p.t(null, void 0, o(239696))],
            HullMA9: [p.t(null, void 0, o(831572)), p.t(null, void 0, o(405681))],
            AO: [p.t(null, void 0, o(510206)), p.t(null, void 0, o(327665))],
            "Pivot.M.Classic.S3": [p.t(null, void 0, o(540685)), p.t(null, void 0, o(649248))],
            "Pivot.M.Classic.S2": [p.t(null, void 0, o(403135)), p.t(null, void 0, o(42913))],
            "Pivot.M.Classic.S1": [p.t(null, void 0, o(223647)), p.t(null, void 0, o(523814))],
            "Pivot.M.Classic.Middle": [p.t(null, void 0, o(654807)), p.t(null, void 0, o(82730))],
            "Pivot.M.Classic.R1": [p.t(null, void 0, o(232015)), p.t(null, void 0, o(985668))],
            "Pivot.M.Classic.R2": [p.t(null, void 0, o(974467)), p.t(null, void 0, o(610101))],
            "Pivot.M.Classic.R3": [p.t(null, void 0, o(903801)), p.t(null, void 0, o(622247))],
            "Pivot.M.Fibonacci.S3": [p.t(null, void 0, o(4937)), p.t(null, void 0, o(649248))],
            "Pivot.M.Fibonacci.S2": [p.t(null, void 0, o(79698)), p.t(null, void 0, o(42913))],
            "Pivot.M.Fibonacci.S1": [p.t(null, void 0, o(990180)), p.t(null, void 0, o(523814))],
            "Pivot.M.Fibonacci.Middle": [p.t(null, void 0, o(628462)), p.t(null, void 0, o(82730))],
            "Pivot.M.Fibonacci.R1": [p.t(null, void 0, o(992200)), p.t(null, void 0, o(985668))],
            "Pivot.M.Fibonacci.R2": [p.t(null, void 0, o(530871)), p.t(null, void 0, o(610101))],
            "Pivot.M.Fibonacci.R3": [p.t(null, void 0, o(693496)), p.t(null, void 0, o(622247))],
            "Pivot.M.Camarilla.S3": [p.t(null, void 0, o(142703)), p.t(null, void 0, o(649248))],
            "Pivot.M.Camarilla.S2": [p.t(null, void 0, o(128938)), p.t(null, void 0, o(42913))],
            "Pivot.M.Camarilla.S1": [p.t(null, void 0, o(28429)), p.t(null, void 0, o(523814))],
            "Pivot.M.Camarilla.Middle": [p.t(null, void 0, o(197758)), p.t(null, void 0, o(82730))],
            "Pivot.M.Camarilla.R1": [p.t(null, void 0, o(962748)), p.t(null, void 0, o(985668))],
            "Pivot.M.Camarilla.R2": [p.t(null, void 0, o(518732)), p.t(null, void 0, o(610101))],
            "Pivot.M.Camarilla.R3": [p.t(null, void 0, o(879438)), p.t(null, void 0, o(622247))],
            "Pivot.M.Woodie.S3": [p.t(null, void 0, o(891660)), p.t(null, void 0, o(649248))],
            "Pivot.M.Woodie.S2": [p.t(null, void 0, o(203566)), p.t(null, void 0, o(42913))],
            "Pivot.M.Woodie.S1": [p.t(null, void 0, o(536510)), p.t(null, void 0, o(523814))],
            "Pivot.M.Woodie.Middle": [p.t(null, void 0, o(357527)), p.t(null, void 0, o(82730))],
            "Pivot.M.Woodie.R1": [p.t(null, void 0, o(192732)), p.t(null, void 0, o(985668))],
            "Pivot.M.Woodie.R2": [p.t(null, void 0, o(574023)), p.t(null, void 0, o(610101))],
            "Pivot.M.Woodie.R3": [p.t(null, void 0, o(212993)), p.t(null, void 0, o(622247))],
            "Pivot.M.Demark.S1": [p.t(null, void 0, o(46685)), p.t(null, void 0, o(523814))],
            "Pivot.M.Demark.Middle": [p.t(null, void 0, o(695847)), p.t(null, void 0, o(82730))],
            "Pivot.M.Demark.R1": [p.t(null, void 0, o(742575)), p.t(null, void 0, o(985668))],
            "KltChnl.upper": [p.t(null, void 0, o(576828)), p.t(null, void 0, o(282330))],
            "KltChnl.lower": [p.t(null, void 0, o(621474)), p.t(null, void 0, o(865104))],
            "P.SAR": [p.t(null, void 0, o(32969)), p.t(null, void 0, o(971923))],
            "Value.Traded": [p.t(null, void 0, o(176126)), p.t(null, void 0, o(176126))],
            MoneyFlow: [p.t(null, void 0, o(484341)), p.t(null, {
                context: "Money_Flow_short_title"
            }, o(114232))],
            ChaikinMoneyFlow: [p.t(null, void 0, o(467829)), p.t(null, {
                context: "Chaikin_Money_Flow_short_title"
            }, o(732056))],
            "Recommend.All": [p.t(null, void 0, o(489415)), p.t(null, void 0, o(489415))],
            "Recommend.MA": [p.t(null, void 0, o(510759)), p.t(null, void 0, o(510759))],
            "Recommend.Other": [p.t(null, void 0, o(869945)), p.t(null, void 0, o(869945))],
            "Stoch.RSI.K": [p.t(null, void 0, o(209288)), p.t(null, void 0, o(146122))],
            "Stoch.RSI.D": [p.t(null, void 0, o(397008)), p.t(null, void 0, o(467469))],
            "W.R": [p.t(null, void 0, o(31110)), p.t(null, void 0, o(518711))],
            ROC: [p.t(null, void 0, o(686407)), p.t(null, void 0, o(476267))],
            BBPower: [p.t(null, {
                context: "study"
            }, o(961333)), p.t(null, void 0, o(820736))],
            UO: [p.t(null, void 0, o(297506)), p.t(null, void 0, o(130541))],
            "Ichimoku.CLine": [p.t(null, void 0, o(252290)), p.t(null, void 0, o(158969))],
            "Ichimoku.BLine": [p.t(null, void 0, o(286153)), p.t(null, void 0, o(708109))],
            "Ichimoku.Lead1": [p.t(null, void 0, o(115742)), p.t(null, void 0, o(337063))],
            "Ichimoku.Lead2": [p.t(null, void 0, o(338775)), p.t(null, void 0, o(888233))],
            VWAP: [p.t(null, {
                context: "study"
            }, o(363893)), p.t(null, void 0, o(705682))],
            VWMA: [p.t(null, void 0, o(991039)), p.t(null, void 0, o(529373))],
            ADR: [p.t(null, void 0, o(345336)), p.t(null, void 0, o(15769))],
            "24h_vol|5": [p.t(null, void 0, o(144117)), p.t(null, void 0, o(540224))],
            "24h_vol_change|5": [p.t(null, void 0, o(744492)), p.t(null, void 0, o(766382))],
            total_revenue_yoy_growth_fq: [p.t(null, void 0, o(659144)), p.t(null, void 0, o(659144))],
            total_revenue_qoq_growth_fq: [p.t(null, void 0, o(815831)), p.t(null, void 0, o(815831))],
            total_revenue_yoy_growth_fy: [p.t(null, void 0, o(733662)), p.t(null, void 0, o(733662))],
            total_revenue_yoy_growth_ttm: [p.t(null, void 0, o(699165)), p.t(null, void 0, o(699165))],
            gross_profit_yoy_growth_fq: [p.t(null, void 0, o(17233)), p.t(null, void 0, o(17233))],
            gross_profit_qoq_growth_fq: [p.t(null, void 0, o(697372)), p.t(null, void 0, o(697372))],
            gross_profit_yoy_growth_fy: [p.t(null, void 0, o(691522)), p.t(null, void 0, o(691522))],
            gross_profit_yoy_growth_ttm: [p.t(null, void 0, o(841564)), p.t(null, void 0, o(841564))],
            ebitda_yoy_growth_fq: [p.t(null, void 0, o(598271)), p.t(null, void 0, o(598271))],
            ebitda_qoq_growth_fq: [p.t(null, void 0, o(430668)), p.t(null, void 0, o(430668))],
            ebitda_yoy_growth_fy: [p.t(null, void 0, o(259569)), p.t(null, void 0, o(259569))],
            ebitda_yoy_growth_ttm: [p.t(null, void 0, o(570413)), p.t(null, void 0, o(570413))],
            net_income_yoy_growth_fq: [p.t(null, void 0, o(166047)), p.t(null, void 0, o(166047))],
            net_income_qoq_growth_fq: [p.t(null, void 0, o(274651)), p.t(null, void 0, o(274651))],
            net_income_yoy_growth_fy: [p.t(null, void 0, o(699836)), p.t(null, void 0, o(699836))],
            net_income_yoy_growth_ttm: [p.t(null, void 0, o(393811)), p.t(null, void 0, o(393811))],
            free_cash_flow_yoy_growth_fq: [p.t(null, void 0, o(930618)), p.t(null, void 0, o(930618))],
            free_cash_flow_qoq_growth_fq: [p.t(null, void 0, o(703584)), p.t(null, void 0, o(703584))],
            free_cash_flow_yoy_growth_fy: [p.t(null, void 0, o(951877)), p.t(null, void 0, o(951877))],
            free_cash_flow_yoy_growth_ttm: [p.t(null, void 0, o(511927)), p.t(null, void 0, o(511927))],
            earnings_per_share_diluted_yoy_growth_fq: [p.t(null, void 0, o(607493)), p.t(null, void 0, o(607493))],
            earnings_per_share_diluted_qoq_growth_fq: [p.t(null, void 0, o(4442)), p.t(null, void 0, o(4442))],
            earnings_per_share_diluted_yoy_growth_fy: [p.t(null, void 0, o(5344)), p.t(null, void 0, o(5344))],
            earnings_per_share_diluted_yoy_growth_ttm: [p.t(null, void 0, o(641613)), p.t(null, void 0, o(641613))],
            dps_common_stock_prim_issue_yoy_growth_fy: [p.t(null, void 0, o(529188)), p.t(null, void 0, o(529188))],
            total_assets_yoy_growth_fq: [p.t(null, void 0, o(799677)), p.t(null, void 0, o(799677))],
            total_assets_qoq_growth_fq: [p.t(null, void 0, o(417209)), p.t(null, void 0, o(417209))],
            total_assets_yoy_growth_fy: [p.t(null, void 0, o(666409)), p.t(null, void 0, o(666409))],
            total_debt_yoy_growth_fq: [p.t(null, void 0, o(419108)), p.t(null, void 0, o(419108))],
            total_debt_qoq_growth_fq: [p.t(null, void 0, o(847108)), p.t(null, void 0, o(847108))],
            total_debt_yoy_growth_fy: [p.t(null, void 0, o(178874)), p.t(null, void 0, o(178874))],
            sell_gen_admin_exp_other_ratio_fy: [p.t(null, void 0, o(59444)), p.t(null, void 0, o(643471))],
            sell_gen_admin_exp_other_ratio_ttm: [p.t(null, void 0, o(103374)), p.t(null, void 0, o(467336))],
            research_and_dev_ratio_fy: [p.t(null, void 0, o(818733)), p.t(null, void 0, o(239186))],
            research_and_dev_ratio_ttm: [p.t(null, void 0, o(231007)), p.t(null, void 0, o(775524))],
            gross_profit_margin_fy: [p.t(null, void 0, o(949976)), p.t(null, void 0, o(949976))],
            oper_income_margin_fy: [p.t(null, void 0, o(660525)), p.t(null, void 0, o(660525))],
            net_income_bef_disc_oper_margin_fy: [p.t(null, void 0, o(651951)), p.t(null, void 0, o(651951))],
            cash_n_equivalents_fq: [p.t(null, void 0, o(861516)), p.t(null, void 0, o(861516))],
            cash_n_equivalents_fy: [p.t(null, void 0, o(773575)), p.t(null, void 0, o(773575))],
            cash_n_short_term_invest_fq: [p.t(null, void 0, o(207792)), p.t(null, void 0, o(537521))],
            cash_n_short_term_invest_fy: [p.t(null, void 0, o(501717)), p.t(null, void 0, o(263143))],
            centralization: [p.t(null, void 0, o(975620)), p.t(null, void 0, o(975620))],
            fiscal_period_end_fy: [p.t(null, void 0, o(744569)), p.t(null, void 0, o(744569))],
            fiscal_period_fq: [p.t(null, void 0, o(295535)), p.t(null, void 0, o(295535))],
            fiscal_period_end_fq: [p.t(null, void 0, o(933919)), p.t(null, void 0, o(933919))],
            enterprise_value_current: [p.t(null, void 0, o(34654)), p.t(null, void 0, o(34654))],
            price_earnings_current: [p.t(null, void 0, o(111879)), p.t(null, void 0, o(111879))],
            price_sales_current: [p.t(null, void 0, o(977192)), p.t(null, void 0, o(977192))],
            price_book_current: [p.t(null, void 0, o(741611)), p.t(null, void 0, o(741611))],
            price_cash_flow_current: [p.t(null, void 0, o(789094)), p.t(null, void 0, o(789094))],
            price_free_cash_flow_current: [p.t(null, void 0, o(974614)), p.t(null, void 0, o(974614))],
            total_revenue_ttm: [p.t(null, void 0, o(346888)).format({
                period: p.t(null, void 0, o(284634))
            }), p.t(null, void 0, o(346888)).format({
                period: p.t(null, void 0, o(284634))
            })],
            revenue_per_share_ttm: [p.t(null, void 0, o(449828)).format({
                period: p.t(null, void 0, o(284634))
            }), p.t(null, void 0, o(449828)).format({
                period: p.t(null, void 0, o(284634))
            })],
            gross_profit_ttm: [p.t(null, void 0, o(917302)).format({
                period: p.t(null, void 0, o(284634))
            }), p.t(null, void 0, o(917302)).format({
                period: p.t(null, void 0, o(284634))
            })],
            oper_income_ttm: [p.t(null, void 0, o(133816)).format({
                period: p.t(null, void 0, o(284634))
            }), p.t(null, void 0, o(133816)).format({
                period: p.t(null, void 0, o(284634))
            })],
            net_income_ttm: [p.t(null, void 0, o(470246)).format({
                period: p.t(null, void 0, o(284634))
            }), p.t(null, void 0, o(470246)).format({
                period: p.t(null, void 0, o(284634))
            })],
            earnings_per_share_diluted_fq: [p.t(null, void 0, o(769635)).format({
                period: p.t(null, void 0, o(505581))
            }), p.t(null, void 0, o(769635)).format({
                period: p.t(null, void 0, o(505581))
            })],
            total_shares_outstanding_current: [p.t(null, void 0, o(207032)), p.t(null, void 0, o(207032))],
            float_shares_outstanding_current: [p.t(null, void 0, o(946055)), p.t(null, void 0, o(946055))],
            total_assets_fq: [p.t(null, void 0, o(351050)).format({
                period: p.t(null, void 0, o(505581))
            }), p.t(null, void 0, o(351050)).format({
                period: p.t(null, void 0, o(505581))
            })],
            total_equity_fq: [p.t(null, void 0, o(705705)).format({
                period: p.t(null, void 0, o(505581))
            }), p.t(null, void 0, o(705705)).format({
                period: p.t(null, void 0, o(505581))
            })],
            total_debt_fq: [p.t(null, void 0, o(20950)).format({
                period: p.t(null, void 0, o(505581))
            }), p.t(null, void 0, o(20950)).format({
                period: p.t(null, void 0, o(505581))
            })],
            book_per_share_fq: [p.t(null, void 0, o(913555)).format({
                period: p.t(null, void 0, o(505581))
            }), p.t(null, void 0, o(913555)).format({
                period: p.t(null, void 0, o(505581))
            })],
            current_ratio_fq: [p.t(null, void 0, o(931095)).format({
                period: p.t(null, void 0, o(505581))
            }), p.t(null, void 0, o(931095)).format({
                period: p.t(null, void 0, o(505581))
            })],
            asset_turnover_fq: [p.t(null, void 0, o(446121)).format({
                period: p.t(null, void 0, o(505581))
            }), p.t(null, void 0, o(446121)).format({
                period: p.t(null, void 0, o(505581))
            })],
            cash_f_operating_activities_ttm: [p.t(null, void 0, o(333853)).format({
                period: p.t(null, void 0, o(284634))
            }), p.t(null, void 0, o(333853)).format({
                period: p.t(null, void 0, o(284634))
            })],
            cash_f_investing_activities_ttm: [p.t(null, void 0, o(57807)).format({
                period: p.t(null, void 0, o(284634))
            }), p.t(null, void 0, o(57807)).format({
                period: p.t(null, void 0, o(284634))
            })],
            cash_f_financing_activities_ttm: [p.t(null, void 0, o(562034)).format({
                period: p.t(null, void 0, o(284634))
            }), p.t(null, void 0, o(562034)).format({
                period: p.t(null, void 0, o(284634))
            })],
            free_cash_flow_ttm: [p.t(null, void 0, o(141794)).format({
                period: p.t(null, void 0, o(284634))
            }), p.t(null, void 0, o(141794)).format({
                period: p.t(null, void 0, o(284634))
            })],
            capital_expenditures_ttm: [p.t(null, void 0, o(607389)).format({
                period: p.t(null, void 0, o(284634))
            }), p.t(null, void 0, o(607389)).format({
                period: p.t(null, void 0, o(284634))
            })],
            gross_margin_ttm: [p.t(null, void 0, o(924791)).format({
                period: p.t(null, void 0, o(284634))
            }), p.t(null, void 0, o(924791)).format({
                period: p.t(null, void 0, o(284634))
            })],
            operating_margin_ttm: [p.t(null, void 0, o(137439)).format({
                period: p.t(null, void 0, o(284634))
            }), p.t(null, void 0, o(137439)).format({
                period: p.t(null, void 0, o(284634))
            })],
            pre_tax_margin_ttm: [p.t(null, void 0, o(83161)).format({
                period: p.t(null, void 0, o(284634))
            }), p.t(null, void 0, o(83161)).format({
                period: p.t(null, void 0, o(284634))
            })],
            net_margin_ttm: [p.t(null, void 0, o(494365)).format({
                period: p.t(null, void 0, o(284634))
            }), p.t(null, void 0, o(494365)).format({
                period: p.t(null, void 0, o(284634))
            })],
            return_on_assets_fq: [p.t(null, void 0, o(572026)).format({
                period: p.t(null, void 0, o(284634))
            }), p.t(null, void 0, o(572026)).format({
                period: p.t(null, void 0, o(284634))
            })],
            return_on_equity_fq: [p.t(null, void 0, o(981813)).format({
                period: p.t(null, void 0, o(284634))
            }), p.t(null, void 0, o(981813)).format({
                period: p.t(null, void 0, o(284634))
            })],
            return_on_invested_capital_fq: [p.t(null, void 0, o(990148)).format({
                period: p.t(null, void 0, o(284634))
            }), p.t(null, void 0, o(990148)).format({
                period: p.t(null, void 0, o(284634))
            })],
            revenue_per_employee_fy: [p.t(null, void 0, o(712371)).format({
                period: p.t(null, void 0, o(560729))
            }), p.t(null, void 0, o(712371)).format({
                period: p.t(null, void 0, o(560729))
            })],
            net_income_per_employee_fy: [p.t(null, void 0, o(577783)).format({
                period: p.t(null, void 0, o(560729))
            }), p.t(null, void 0, o(577783)).format({
                period: p.t(null, void 0, o(560729))
            })],
            dividend_amount_recent: [p.t(null, void 0, o(339780)), p.t(null, void 0, o(339780))],
            dividend_amount_upcoming: [p.t(null, void 0, o(725722)), p.t(null, void 0, o(725722))],
            ex_dividend_date_recent: [p.t(null, void 0, o(422944)), p.t(null, void 0, o(422944))],
            ex_dividend_date_upcoming: [p.t(null, void 0, o(959815)), p.t(null, void 0, o(959815))],
            dividend_payout_ratio_ttm: [p.t(null, void 0, o(121099)).format({
                period: p.t(null, void 0, o(284634))
            }), p.t(null, void 0, o(121099)).format({
                period: p.t(null, void 0, o(284634))
            })],
            price_target_average: [p.t(null, void 0, o(651015)), p.t(null, void 0, o(651015))]
        };
        let K = null;
        const Y = () => K;
        var J = o(775110)
          , Z = o(923549)
          , Q = o(238739)
          , ee = o(554794)
          , te = o(162088)
          , oe = o(48632)
          , ie = o(502506)
          , ne = o(601285)
          , re = o(383425)
          , se = o(829016)
          , le = o(14723)
          , ae = o(693505)
          , ce = o(159402)
          , de = o(364697)
          , ue = o(110416)
          , he = o(623788)
          , pe = o(492619)
          , me = o(11951)
          , _e = o(630410)
          , ge = o(672687)
          , ve = o(651316)
          , fe = o(601354)
          , ye = o(829605)
          , be = o(488287)
          , we = o(636627)
          , Se = o(837553)
          , Ce = o(249478);
        const ke = [{
            key: "Candle.3BlackCrows",
            name: p.t(null, void 0, o(995436)),
            svg: J
        }, {
            key: "Candle.3WhiteSoldiers",
            name: p.t(null, void 0, o(56386)),
            svg: Z
        }, {
            key: "Candle.AbandonedBaby.Bearish",
            name: p.t(null, void 0, o(164388)),
            svg: Q
        }, {
            key: "Candle.AbandonedBaby.Bullish",
            name: p.t(null, void 0, o(677668)),
            svg: ee
        }, {
            key: "Candle.Doji",
            name: p.t(null, {
                context: "study"
            }, o(327517)),
            svg: te
        }, {
            key: "Candle.Doji.Dragonfly",
            name: p.t(null, void 0, o(489930)),
            svg: oe
        }, {
            key: "Candle.Doji.Gravestone",
            name: p.t(null, void 0, o(208006)),
            svg: ie
        }, {
            key: "Candle.Engulfing.Bearish",
            name: p.t(null, void 0, o(405299)),
            svg: ne
        }, {
            key: "Candle.Engulfing.Bullish",
            name: p.t(null, void 0, o(679832)),
            svg: re
        }, {
            key: "Candle.EveningStar",
            name: p.t(null, void 0, o(894075)),
            svg: se
        }, {
            key: "Candle.Hammer",
            name: p.t(null, void 0, o(585085)),
            svg: le
        }, {
            key: "Candle.HangingMan",
            name: p.t(null, void 0, o(519287)),
            svg: ae
        }, {
            key: "Candle.Harami.Bearish",
            name: p.t(null, void 0, o(66503)),
            svg: ce
        }, {
            key: "Candle.Harami.Bullish",
            name: p.t(null, void 0, o(84441)),
            svg: de
        }, {
            key: "Candle.InvertedHammer",
            name: p.t(null, void 0, o(439801)),
            svg: ue
        }, {
            key: "Candle.Kicking.Bearish",
            name: p.t(null, void 0, o(604410)),
            svg: he
        }, {
            key: "Candle.Kicking.Bullish",
            name: p.t(null, void 0, o(789371)),
            svg: pe
        }, {
            key: "Candle.LongShadow.Lower",
            name: p.t(null, void 0, o(947641)),
            svg: me
        }, {
            key: "Candle.LongShadow.Upper",
            name: p.t(null, void 0, o(978880)),
            svg: _e
        }, {
            key: "Candle.Marubozu.Black",
            name: p.t(null, void 0, o(810910)),
            svg: ge
        }, {
            key: "Candle.Marubozu.White",
            name: p.t(null, void 0, o(579285)),
            svg: ve
        }, {
            key: "Candle.MorningStar",
            name: p.t(null, void 0, o(440490)),
            svg: fe
        }, {
            key: "Candle.ShootingStar",
            name: p.t(null, void 0, o(956752)),
            svg: ye
        }, {
            key: "Candle.SpinningTop.Black",
            name: p.t(null, {
                context: "study"
            }, o(271354)),
            svg: be
        }, {
            key: "Candle.SpinningTop.White",
            name: p.t(null, {
                context: "study"
            }, o(397464)),
            svg: we
        }, {
            key: "Candle.TriStar.Bearish",
            name: p.t(null, void 0, o(863205)),
            svg: Se
        }, {
            key: "Candle.TriStar.Bullish",
            name: p.t(null, void 0, o(512861)),
            svg: Ce
        }].sort(( (e, t) => e.name.localeCompare(t.name)))
          , xe = new E({
            priceScale: 1e8,
            minMove: 1
        })
          , Me = new w.PriceFormatter({
            priceScale: 100,
            minMove: 1,
            fractional: !1
        })
          , Ee = new w.PriceFormatter({
            priceScale: 1,
            minMove: 1,
            fractional: !1
        })
          , Fe = new S.VolumeFormatter
          , Te = new C.PercentageFormatter
          , Ae = new C.PercentageFormatter({
            priceScale: 1
        })
          , Ie = new class {
            constructor(e) {
                this._formatStr = e || "%y-%m-%d"
            }
            format(e) {
                const t = new Date(1e3 * e);
                return this._formatStr.replace("%y", (0,
                k.numberToStringWithLeadingZero)(t.getUTCFullYear(), 4)).replace("%m", (0,
                k.numberToStringWithLeadingZero)(t.getUTCMonth() + 1, 2)).replace("%d", (0,
                k.numberToStringWithLeadingZero)(t.getUTCDate(), 2))
            }
        }
          , De = (0,
        A.getRecommendsRange)()
          , Pe = {
            Any: p.t(null, void 0, o(882675)),
            Exotic: p.t(null, void 0, o(257626)),
            Major: p.t(null, void 0, o(67973)),
            Minor: p.t(null, void 0, o(844650)),
            Africa: p.t(null, void 0, o(578163)),
            Americas: p.t(null, void 0, o(615493)),
            Asia: p.t(null, void 0, o(360389)),
            Europe: p.t(null, void 0, o(546890)),
            Pacific: p.t(null, void 0, o(847081)),
            "Middle East": p.t(null, void 0, o(64614))
        }
          , Le = [{
            key: "today",
            name: p.t(null, void 0, o(205935))
        }, {
            key: "tomorrow",
            name: p.t(null, void 0, o(315404))
        }, {
            key: "yesterday",
            name: p.t(null, void 0, o(943320))
        }, {
            key: "next_five",
            name: p.t(null, void 0, o(558570))
        }, {
            key: "prev_five",
            name: p.t(null, void 0, o(988701))
        }, {
            key: "this_week",
            name: p.t(null, void 0, o(847228))
        }, {
            key: "next_week",
            name: p.t(null, void 0, o(116468))
        }, {
            key: "prev_week",
            name: p.t(null, void 0, o(50121))
        }, {
            key: "this_month",
            name: p.t(null, void 0, o(405778))
        }]
          , $e = ["today", "yesterday", "prev_five", "prev_week", "this_week", "this_month"]
          , Be = ["today", "tomorrow", "next_five", "next_week", "this_week", "this_month"]
          , Re = e => null == e || "" === e.toString().trim()
          , Oe = e => t => {
            const o = qe(t, Le);
            if (o) {
                const t = ze(o);
                if (t)
                    return ( (e, t, o="earnings_release_date,earnings_release_next_date") => [{
                        left: o,
                        operation: "in_range",
                        right: [e / 1e3, t / 1e3]
                    }, {
                        left: o,
                        operation: "nequal",
                        right: t / 1e3
                    }])(t[0], t[1], e)
            }
            return !1
        }
          , Ne = (e, t) => Object.keys(t).find((o => t[o] === e)) || e
          , We = (e, t, o, i) => {
            const n = i.filter((t => t[e] === o));
            return n.length > 0 ? n[0][t] : ""
        }
          , Ve = (e, t) => We("key", "name", e, t)
          , qe = (e, t) => We("name", "key", e, t)
          , ze = e => {
            const t = y.get_timezone(Y())
              , o = ( () => {
                const e = y.get_timezone(Y())
                  , t = new Date
                  , o = y.utc_to_cal(e, t.getTime());
                return y.get_cal(e, o.getUTCFullYear(), o.getUTCMonth(), o.getUTCDate())
            }
            )();
            let i, n;
            if ("today" === e)
                i = o.getTime(),
                n = y.add_days_considering_dst(t, o, 1).getTime();
            else if ("tomorrow" === e)
                i = y.add_days_considering_dst(t, o, 1).getTime(),
                n = y.add_days_considering_dst(t, o, 2).getTime();
            else if ("yesterday" === e) {
                const e = 6e4;
                i = y.add_days_considering_dst(t, o, -1).getTime(),
                n = o.getTime() - e
            } else if ("next_five" === e)
                i = y.add_days_considering_dst(t, o, 1).getTime(),
                n = y.add_days_considering_dst(t, o, 5).getTime();
            else if ("prev_five" === e)
                i = y.add_days_considering_dst(t, o, -5).getTime(),
                n = o.getTime();
            else if ("this_week" === e) {
                const e = (o.getDay() + 6) % 7;
                i = y.add_days_considering_dst(t, o, -e).getTime(),
                n = y.add_days_considering_dst(t, o, 7 - e).getTime()
            } else if ("next_week" === e) {
                const e = (o.getDay() + 6) % 7 - 7;
                i = y.add_days_considering_dst(t, o, -e).getTime(),
                n = y.add_days_considering_dst(t, o, 7 - e).getTime()
            } else if ("prev_week" === e) {
                const e = (o.getDay() + 6) % 7 + 7;
                i = y.add_days_considering_dst(t, o, -e).getTime(),
                n = y.add_days_considering_dst(t, o, 7 - e).getTime()
            } else if ("this_month" === e) {
                const e = o.getDate()
                  , r = new Date(o.getFullYear(),o.getMonth(),0).getDate();
                i = y.add_days_considering_dst(t, o, 1 - e).getTime(),
                n = y.add_days_considering_dst(t, o, r - e).getTime()
            }
            return !(!i || !n) && [i, n]
        }
          , Ue = {
            dr: [p.t(null, void 0, o(578677)), p.t(null, void 0, o(56908)), {
                nowrap: !0
            }],
            etf: [p.t(null, void 0, o(988789)), p.t(null, void 0, o(988789))],
            common: [p.t(null, void 0, o(677186)), ""],
            preferred: [p.t(null, void 0, o(804067)), p.t(null, void 0, o(82730))],
            closedend: [p.t(null, void 0, o(107008)), p.t(null, void 0, o(932964))],
            etn: [p.t(null, void 0, o(971065)), p.t(null, void 0, o(971065))],
            reit: [p.t(null, void 0, o(702612)), p.t(null, void 0, o(702612))],
            unit: [p.t(null, void 0, o(742444)), p.t(null, void 0, o(742444))],
            mutual: [p.t(null, void 0, o(475950)), p.t(null, void 0, o(141836))],
            trust: [p.t(null, void 0, o(608665)), p.t(null, void 0, o(773581))],
            structured: [p.t(null, void 0, o(524048)), p.t(null, void 0, o(273807))],
            spot: [p.t(null, void 0, o(783013)), ""],
            futures: [p.t(null, void 0, o(353539)), ""],
            perpetual: [p.t(null, void 0, o(14738)), ""]
        }
          , je = ["dr", "etf", "common", "preferred", "closedend", "etn", "reit", "unit", "mutual", "trust", "structured"]
          , He = ["spot", "futures", "perpetual"]
          , Ge = e => ["open", "high", "low", "close"].filter((t => t !== e))
          , Xe = e => ["SMA5", "SMA10", "SMA20", "SMA30", "SMA50", "SMA100", "SMA200", "EMA5", "EMA10", "EMA20", "EMA30", "EMA50", "EMA100", "EMA200"].filter((t => t !== e))
          , Ke = e => ["Ichimoku.BLine", "Ichimoku.CLine", "Ichimoku.Lead1", "Ichimoku.Lead2"].filter((t => t !== e))
          , Ye = ["crosses", "crosses_above", "crosses_below"];
        function Je(e, ...t) {
            const o = t[t.length - 1];
            if (o.searchValue) {
                const t = (0,
                I.parseHtml)(e).childNodes;
                let i = "";
                for (let e = 0; e < t.length; e++)
                    t[e].classList && (t[e].classList.contains("tv-screener__symbol") && (t[e].innerHTML = Qe(t[e].textContent.trim(), o.searchValue)),
                    i += t[e].outerHTML);
                return i + " "
            }
            return e
        }
        const Ze = {
            name: {
                fixed: !0,
                control: "select",
                category: 1,
                inplaceEditorLeftOffset: 10,
                filterTitle: X.type[0],
                rangeTitles: Ue,
                additionalColumns: ["description", "name", "type", "subtype", "update_mode"],
                additionalFormatter: (e, t, o, i, n, r="") => {
                    const s = ( (e, t) => Ze.type.disabled || !Ze.type.checked ? "" : `<span class="tv-screener__type" title="${Ze.type.mutateDisplayValue(e, t)}"><sup>${Ze.type.mutateDisplayValue(e, t, !0)}</sup></span>`)(o, i);
                    return ( (e, t, o, i, n) => {
                        const r = new F.DataModeIndicator({
                            classSuffix: "--for-screener",
                            short: !0
                        });
                        if (null !== n && "string" == typeof n) {
                            const e = (0,
                            b.parseUpdateMode)(n);
                            null === e ? r.setMode(n) : r.setMode(e.mode, e.interval)
                        }
                        if (Ze.description.disabled || !Ze.description.checked)
                            return r.getElement().outerHTML;
                        const s = {
                            description: e,
                            pro_name: i,
                            short_name: o
                        };
                        let l = e ? (0,
                        T.getTranslatedSymbolDescription)(s).toString().toUpperCase() : "";
                        Ze.name.searchValue && (l = Qe(l, Ze.name.searchValue));
                        const a = !Ze.description.disabled || Ze.description.checked ? `<span class="tv-screener__description">${l} ${t}</span>` : "";
                        return `${r.getElement().outerHTML}${a}`
                    }
                    )(e, s, t, r, n)
                }
                ,
                mutateDisplayValue: Je,
                tooltip: (e, t) => Ze.description.disabled || !Ze.description.checked ? t : e,
                useDefaultRange: !0,
                defaultRange: je,
                customFilterCondition: e => Ze.type.customFilterCondition(e),
                search: !0
            },
            description: {
                hiddenColumn: !0,
                hideSetupColumn: !0
            },
            logoid: {
                hiddenColumn: !1,
                hideSetupColumn: !0,
                skipField: !0
            },
            currency_logoid: {
                hiddenColumn: !1,
                hideSetupColumn: !0,
                skipField: !0
            },
            base_currency_logoid: {
                hiddenColumn: !1,
                hideSetupColumn: !0,
                skipField: !0
            },
            exchange: {
                control: "select",
                category: 1,
                mutateDisplayValue: e => "AMEX" === e ? "NYSE ARCA" : e,
                rangeTitles: {
                    AMEX: ["NYSE ARCA", "NYSE ARCA", {
                        nowrap: !0
                    }]
                }
            },
            centralization: {
                control: "select",
                category: 1,
                hideSetupColumn: !0,
                rangeTitles: {
                    cex: ["CEX", "CEX"],
                    dex: ["DEX", "DEX"]
                }
            },
            submarket: {
                control: "select",
                category: 1
            },
            sector: {
                category: 1,
                filterCondition: "select",
                sourceRange: ["Major", "Minor", "Exotic"],
                mutateDisplayValue: (e, ...t) => {
                    const o = Je(e, t);
                    return (0,
                    G.triesTranslateScreenerData)(o)
                }
            },
            index: {
                control: "select",
                isSingle: !0,
                category: 1,
                hideSetupColumn: !0,
                groupFilter: !0,
                customFilterCondition: e => {
                    const t = Ze.index.sourceRange ? Ze.index.sourceRange.find((t => t.name === e)) : null;
                    return !!t && {
                        type: "index",
                        values: [t.id]
                    }
                }
            },
            industry: {
                control: "select",
                category: 1
            },
            country: {
                control: "select",
                category: 1
            },
            type: {
                hiddenColumn: !0,
                hideSetupColumn: !0,
                filterCondition: "select",
                category: 1,
                rangeTitles: Ue,
                sortableColumn: !1,
                resettableFilter: !1,
                useDefaultRange: !0,
                defaultRange: je,
                additionalColumns: ["subtype"],
                mutateDisplayValue: (e, t, o=!1) => t && Ue[t] ? Ue[t][o ? 1 : 0] : Ue[e] ? Ue[e][o ? 1 : 0] : "",
                customFilterCondition: V
            },
            market_cap_basic: {
                control: "range",
                formatter: Fe,
                category: 1
            },
            market_cap_calc: {
                control: "range",
                formatter: Fe,
                category: 1
            },
            market_cap_diluted_calc: {
                control: "range",
                formatter: Fe,
                category: 1
            },
            volume: {
                control: "range",
                formatter: Fe,
                category: 1
            },
            average_volume_10d_calc: {
                title: X.average_volume[0],
                shortTitle: X.average_volume[1],
                control: "range",
                formatter: Fe,
                category: 1,
                useDefaultTimeInterval: !0
            },
            average_volume_30d_calc: {
                control: "range",
                formatter: Fe,
                category: 1,
                useDefaultTimeInterval: !0
            },
            average_volume_60d_calc: {
                control: "range",
                formatter: Fe,
                category: 1,
                useDefaultTimeInterval: !0
            },
            average_volume_90d_calc: {
                control: "range",
                formatter: Fe,
                category: 1,
                useDefaultTimeInterval: !0
            },
            relative_volume_10d_calc: {
                title: X.relative_volume[0],
                shortTitle: X.relative_volume[1],
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Me,
                filterFormatter: Ee,
                category: 1
            },
            "relative_volume_intraday.5": {
                title: X.relative_volume_at_time[0],
                shortTitle: X.relative_volume_at_time[1],
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Me,
                filterFormatter: Ee,
                category: 1,
                useDefaultTimeIntervalFromFieldName: !0
            },
            change: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: {
                    stock: ["premarket_change", "postmarket_change"],
                    default: []
                },
                formatter: Te,
                category: 3,
                highlightChange: !0
            },
            "change.1": {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: {
                    stock: ["change", "premarket_change", "postmarket_change"],
                    default: []
                },
                formatter: Te,
                category: 3,
                highlightChange: !0
            },
            "change.5": {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: {
                    stock: ["change", "premarket_change", "postmarket_change"],
                    default: []
                },
                formatter: Te,
                category: 3,
                highlightChange: !0
            },
            "change.15": {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: {
                    stock: ["change", "premarket_change", "postmarket_change"],
                    default: []
                },
                formatter: Te,
                category: 3,
                highlightChange: !0
            },
            "change.60": {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: {
                    stock: ["change", "premarket_change", "postmarket_change"],
                    default: []
                },
                formatter: Te,
                category: 3,
                highlightChange: !0
            },
            "change.240": {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: {
                    stock: ["change", "premarket_change", "postmarket_change"],
                    default: []
                },
                formatter: Te,
                category: 3,
                highlightChange: !0
            },
            "change.1W": {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: {
                    stock: ["change", "premarket_change", "postmarket_change"],
                    default: []
                },
                formatter: Te,
                category: 3,
                highlightChange: !0
            },
            "change.1M": {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: {
                    stock: ["change", "premarket_change", "postmarket_change"],
                    default: []
                },
                formatter: Te,
                category: 3,
                highlightChange: !0
            },
            change_abs: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: xe,
                forexFormatter: xe,
                category: 3,
                highlightChange: !0
            },
            "change_abs.1": {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: xe,
                forexFormatter: xe,
                category: 3,
                highlightChange: !0
            },
            "change_abs.5": {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: xe,
                forexFormatter: xe,
                category: 3,
                highlightChange: !0
            },
            "change_abs.15": {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: xe,
                forexFormatter: xe,
                category: 3,
                highlightChange: !0
            },
            "change_abs.60": {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: xe,
                forexFormatter: xe,
                category: 3,
                highlightChange: !0
            },
            "change_abs.240": {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: xe,
                forexFormatter: xe,
                category: 3,
                highlightChange: !0
            },
            "change_abs.1W": {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: xe,
                forexFormatter: xe,
                category: 3,
                highlightChange: !0
            },
            "change_abs.1M": {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: xe,
                forexFormatter: xe,
                category: 3,
                highlightChange: !0
            },
            bid: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Me,
                filterFormatter: Ee,
                forexFormatter: xe,
                category: 1,
                mutateDisplayValue: e => `<span>${e}</span>`
            },
            ask: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Me,
                filterFormatter: Ee,
                forexFormatter: xe,
                category: 1,
                mutateDisplayValue: e => `<span>${e}</span>`
            },
            open: {
                control: "condition",
                conditionFields: {
                    stock: Ge("open").concat("premarket_open", "postmarket_open", "premarket_close", "postmarket_close", Xe(), "HullMA9", "BB.upper", "BB.lower", Ke()),
                    forex: Ge("open").concat("bid", "ask", Xe(), "HullMA9", "BB.upper", "BB.lower", Ke()),
                    default: Ge("open").concat(Xe(), "BB.upper", "BB.lower", "HullMA9", Ke())
                },
                formatter: xe,
                forexFormatter: xe,
                category: 1
            },
            close: {
                title: p.t(null, void 0, o(7953)),
                shortTitle: p.t(null, void 0, o(7953)),
                control: "condition",
                conditionFields: {
                    stock: Ge("close").concat("premarket_close", "postmarket_close", Xe(), "HullMA9", "BB.upper", "BB.lower", Ke()),
                    forex: Ge("close").concat("bid", "ask", Xe(), "HullMA9", "BB.upper", "BB.lower", Ke()),
                    default: Ge("close").concat(Xe(), "BB.upper", "BB.lower", "HullMA9", Ke())
                },
                formatter: xe,
                forexFormatter: xe,
                category: 1,
                mutateDisplayValue: e => `<span>${e}</span>`
            },
            high: {
                control: "condition",
                conditionFields: {
                    stock: Ge("high").concat("premarket_high", "postmarket_high", "premarket_close", "postmarket_close", Xe(), "HullMA9", "BB.upper", "BB.lower", Ke()),
                    forex: Ge("high").concat("bid", "ask", Xe(), "HullMA9", "BB.upper", "BB.lower", Ke()),
                    default: Ge("high").concat(Xe(), "BB.upper", "BB.lower", "HullMA9", Ke())
                },
                formatter: xe,
                forexFormatter: xe,
                category: 1
            },
            low: {
                control: "condition",
                conditionFields: {
                    stock: Ge("low").concat("premarket_low", "postmarket_low", "premarket_close", "postmarket_close", Xe(), "HullMA9", "BB.upper", "BB.lower", Ke()),
                    forex: Ge("low").concat("bid", "ask", Xe(), "HullMA9", "BB.upper", "BB.lower", Ke()),
                    default: Ge("low").concat(Xe(), "BB.upper", "BB.lower", "HullMA9", Ke())
                },
                formatter: xe,
                forexFormatter: xe,
                category: 1
            },
            gap: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Te,
                filterFormatter: Ae,
                category: 3,
                highlightChange: !0
            },
            price_earnings_ttm: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Me,
                filterFormatter: Ee,
                category: 2
            },
            price_sales_ratio: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Me,
                filterFormatter: Ee,
                category: 2
            },
            return_on_assets: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Me,
                filterFormatter: Ee,
                category: 2
            },
            return_on_equity: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Me,
                filterFormatter: Ee,
                category: 2
            },
            debt_to_equity: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Me,
                category: 2
            },
            current_ratio: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Me,
                filterFormatter: Ee,
                category: 2
            },
            quick_ratio: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Me,
                filterFormatter: Ee,
                category: 2
            },
            price_book_fq: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Me,
                filterFormatter: Ee,
                category: 2
            },
            price_book_ratio: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Me,
                filterFormatter: Ee,
                category: 2
            },
            price_free_cash_flow_ttm: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Me,
                filterFormatter: Ee,
                category: 2
            },
            beta_1_year: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Me,
                category: 3
            },
            operating_margin: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Te,
                filterFormatter: Ae,
                category: 2,
                highlightChange: !0
            },
            earnings_per_share_basic_ttm: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Me,
                filterFormatter: Ee,
                category: 2
            },
            ebitda: {
                control: "range",
                formatter: Fe,
                category: 2
            },
            change_from_open: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Te,
                filterFormatter: Ae,
                category: 3,
                highlightChange: !0
            },
            change_from_open_abs: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: xe,
                forexFormatter: xe,
                category: 3,
                highlightChange: !0
            },
            "Perf.W": {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Te,
                filterFormatter: Ae,
                category: 3,
                highlightChange: !0
            },
            "Perf.1M": {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Te,
                filterFormatter: Ae,
                category: 3,
                highlightChange: !0
            },
            "Perf.3M": {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Te,
                filterFormatter: Ae,
                category: 3,
                highlightChange: !0
            },
            "Perf.6M": {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Te,
                filterFormatter: Ae,
                category: 3,
                highlightChange: !0
            },
            "Perf.Y": {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Te,
                filterFormatter: Ae,
                category: 3,
                highlightChange: !0
            },
            "Perf.YTD": {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Te,
                filterFormatter: Ae,
                category: 3,
                highlightChange: !0
            },
            "Perf.5Y": {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Te,
                filterFormatter: Ae,
                category: 3,
                highlightChange: !0
            },
            "Perf.All": {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Te,
                filterFormatter: Ae,
                category: 3,
                highlightChange: !0
            },
            "Volatility.W": {
                control: "condition",
                conditionFields: [],
                formatter: Te,
                filterFormatter: Ae,
                category: 3
            },
            "Volatility.M": {
                control: "condition",
                conditionFields: [],
                formatter: Te,
                filterFormatter: Ae,
                category: 3
            },
            "Volatility.D": {
                control: "condition",
                conditionFields: [],
                formatter: Te,
                filterFormatter: Ae,
                category: 3
            },
            RSI: {
                control: "condition",
                conditionFields: [],
                formatter: Me,
                filterFormatter: Ee,
                category: 3,
                displaySignal: !0,
                additionalColumns: ["RSI", "RSI[1]"],
                mutateDisplayValue: A.signalDisplayFunctions.processRSISignal,
                signalComputation: A.signalComputationFunctions.computeRSISignal
            },
            RSI7: {
                control: "condition",
                conditionFields: [],
                formatter: Me,
                filterFormatter: Ee,
                category: 3,
                displaySignal: !0,
                additionalColumns: ["RSI7", "RSI7[1]"],
                mutateDisplayValue: A.signalDisplayFunctions.processRSISignal,
                signalComputation: A.signalComputationFunctions.computeRSISignal
            },
            ADX: {
                control: "condition",
                conditionFields: [],
                formatter: Me,
                filterFormatter: Ee,
                category: 3,
                displaySignal: !0,
                additionalColumns: ["ADX", "ADX+DI", "ADX-DI", "ADX+DI[1]", "ADX-DI[1]"],
                mutateDisplayValue: A.signalDisplayFunctions.processADXSignal,
                signalComputation: A.signalComputationFunctions.computeADXSignal
            },
            "ADX+DI": {
                control: "condition",
                conditionFields: ["ADX-DI"],
                formatter: Me,
                filterFormatter: Ee,
                category: 3
            },
            "ADX-DI": {
                control: "condition",
                conditionFields: ["ADX+DI"],
                formatter: Me,
                filterFormatter: Ee,
                category: 3
            },
            ATR: {
                control: "condition",
                conditionFields: [],
                formatter: xe,
                category: 3
            },
            Mom: {
                control: "condition",
                conditionFields: [],
                formatter: xe,
                filterFormatter: Ee,
                category: 3,
                displaySignal: !0,
                additionalColumns: ["Mom", "Mom[1]"],
                mutateDisplayValue: A.signalDisplayFunctions.processMomSignal,
                signalComputation: A.signalComputationFunctions.computeMomSignal
            },
            "High.All": {
                control: "toggle",
                filter: {
                    operator: "eless",
                    value: "high"
                },
                formatter: Me,
                forexFormatter: xe,
                category: 3
            },
            "Low.All": {
                control: "toggle",
                filter: {
                    operator: "egreater",
                    value: "low"
                },
                formatter: Me,
                forexFormatter: xe,
                category: 3
            },
            price_52_week_high: {
                control: "toggle",
                filter: {
                    operator: "eless",
                    value: "high"
                },
                formatter: Me,
                forexFormatter: xe,
                category: 3
            },
            price_52_week_low: {
                control: "toggle",
                filter: {
                    operator: "egreater",
                    value: "low"
                },
                formatter: Me,
                forexFormatter: xe,
                category: 3
            },
            is_primary: {
                title: X.is_primary[0],
                control: "toggle",
                filter: {
                    operator: "equal",
                    value: !0
                },
                category: 1
            },
            active_symbol: {
                hideSetupColumn: !0,
                control: "toggle",
                filter: {
                    operator: "equal",
                    value: !0
                },
                category: 1
            },
            "High.6M": {
                control: "toggle",
                filter: {
                    operator: "eless",
                    value: "high"
                },
                formatter: Me,
                forexFormatter: xe,
                category: 3
            },
            "Low.6M": {
                control: "toggle",
                filter: {
                    operator: "egreater",
                    value: "low"
                },
                formatter: Me,
                forexFormatter: xe,
                category: 3
            },
            "High.3M": {
                control: "toggle",
                filter: {
                    operator: "eless",
                    value: "high"
                },
                formatter: Me,
                forexFormatter: xe,
                category: 3
            },
            "Low.3M": {
                control: "toggle",
                filter: {
                    operator: "egreater",
                    value: "low"
                },
                formatter: Me,
                forexFormatter: xe,
                category: 3
            },
            "High.1M": {
                control: "toggle",
                filter: {
                    operator: "eless",
                    value: "high"
                },
                formatter: Me,
                forexFormatter: xe,
                category: 3
            },
            "Low.1M": {
                control: "toggle",
                filter: {
                    operator: "egreater",
                    value: "low"
                },
                formatter: Me,
                forexFormatter: xe,
                category: 3
            },
            EMA5: {
                control: "condition",
                conditionFields: Ge().concat(Xe("EMA5")),
                formatter: xe,
                category: 3,
                displaySignal: !0,
                additionalColumns: ["EMA5", "close"],
                mutateDisplayValue: A.signalDisplayFunctions.processMASignal,
                signalComputation: A.signalComputationFunctions.computeMASignal
            },
            EMA10: {
                control: "condition",
                conditionFields: Ge().concat(Xe("EMA10")),
                formatter: xe,
                category: 3,
                displaySignal: !0,
                additionalColumns: ["EMA10", "close"],
                mutateDisplayValue: A.signalDisplayFunctions.processMASignal,
                signalComputation: A.signalComputationFunctions.computeMASignal
            },
            EMA20: {
                control: "condition",
                conditionFields: Ge().concat(Xe("EMA20")),
                formatter: xe,
                category: 3,
                displaySignal: !0,
                additionalColumns: ["EMA20", "close"],
                mutateDisplayValue: A.signalDisplayFunctions.processMASignal,
                signalComputation: A.signalComputationFunctions.computeMASignal
            },
            EMA30: {
                control: "condition",
                conditionFields: Ge().concat(Xe("EMA30")),
                formatter: xe,
                category: 3,
                displaySignal: !0,
                additionalColumns: ["EMA30", "close"],
                mutateDisplayValue: A.signalDisplayFunctions.processMASignal,
                signalComputation: A.signalComputationFunctions.computeMASignal
            },
            EMA50: {
                control: "condition",
                conditionFields: Ge().concat(Xe("EMA50")),
                formatter: xe,
                category: 3,
                displaySignal: !0,
                additionalColumns: ["EMA50", "close"],
                mutateDisplayValue: A.signalDisplayFunctions.processMASignal,
                signalComputation: A.signalComputationFunctions.computeMASignal
            },
            EMA100: {
                control: "condition",
                conditionFields: Ge().concat(Xe("EMA100")),
                formatter: xe,
                category: 3,
                displaySignal: !0,
                additionalColumns: ["EMA100", "close"],
                mutateDisplayValue: A.signalDisplayFunctions.processMASignal,
                signalComputation: A.signalComputationFunctions.computeMASignal
            },
            EMA200: {
                control: "condition",
                conditionFields: Ge().concat(Xe("EMA200")),
                formatter: xe,
                category: 3,
                displaySignal: !0,
                additionalColumns: ["EMA200", "close"],
                mutateDisplayValue: A.signalDisplayFunctions.processMASignal,
                signalComputation: A.signalComputationFunctions.computeMASignal
            },
            SMA5: {
                control: "condition",
                conditionFields: Ge().concat(Xe("SMA5")),
                formatter: xe,
                category: 3,
                displaySignal: !0,
                additionalColumns: ["SMA5", "close"],
                mutateDisplayValue: A.signalDisplayFunctions.processMASignal,
                signalComputation: A.signalComputationFunctions.computeMASignal
            },
            SMA10: {
                control: "condition",
                conditionFields: Ge().concat(Xe("SMA10")),
                formatter: xe,
                category: 3,
                displaySignal: !0,
                additionalColumns: ["SMA10", "close"],
                mutateDisplayValue: A.signalDisplayFunctions.processMASignal,
                signalComputation: A.signalComputationFunctions.computeMASignal
            },
            SMA20: {
                control: "condition",
                conditionFields: Ge().concat(Xe("SMA20")),
                formatter: xe,
                category: 3,
                displaySignal: !0,
                additionalColumns: ["SMA20", "close"],
                mutateDisplayValue: A.signalDisplayFunctions.processMASignal,
                signalComputation: A.signalComputationFunctions.computeMASignal
            },
            SMA30: {
                control: "condition",
                conditionFields: Ge().concat(Xe("SMA30")),
                formatter: xe,
                category: 3,
                displaySignal: !0,
                additionalColumns: ["SMA30", "close"],
                mutateDisplayValue: A.signalDisplayFunctions.processMASignal,
                signalComputation: A.signalComputationFunctions.computeMASignal
            },
            SMA50: {
                control: "condition",
                conditionFields: Ge().concat(Xe("SMA50")),
                formatter: xe,
                category: 3,
                displaySignal: !0,
                additionalColumns: ["SMA50", "close"],
                mutateDisplayValue: A.signalDisplayFunctions.processMASignal,
                signalComputation: A.signalComputationFunctions.computeMASignal
            },
            SMA100: {
                control: "condition",
                conditionFields: Ge().concat(Xe("SMA100")),
                formatter: xe,
                category: 3,
                displaySignal: !0,
                additionalColumns: ["SMA100", "close"],
                mutateDisplayValue: A.signalDisplayFunctions.processMASignal,
                signalComputation: A.signalComputationFunctions.computeMASignal
            },
            SMA200: {
                control: "condition",
                conditionFields: Ge().concat(Xe("SMA200")),
                formatter: xe,
                category: 3,
                displaySignal: !0,
                additionalColumns: ["SMA200", "close"],
                mutateDisplayValue: A.signalDisplayFunctions.processMASignal,
                signalComputation: A.signalComputationFunctions.computeMASignal
            },
            "Stoch.K": {
                control: "condition",
                conditionFields: Ge().concat(["Stoch.D"]),
                formatter: Me,
                category: 3,
                displaySignal: !0,
                additionalColumns: ["Stoch.K", "Stoch.D", "Stoch.K[1]", "Stoch.D[1]"],
                mutateDisplayValue: A.signalDisplayFunctions.processStochSignal,
                signalComputation: A.signalComputationFunctions.computeStochSignal
            },
            "Stoch.D": {
                control: "condition",
                conditionFields: Ge().concat(["Stoch.K"]),
                formatter: Me,
                category: 3
            },
            "MACD.macd": {
                control: "condition",
                conditionFields: Ge().concat(["MACD.signal"]),
                formatter: xe,
                category: 3,
                displaySignal: !0,
                additionalColumns: ["MACD.macd", "MACD.signal"],
                mutateDisplayValue: A.signalDisplayFunctions.processMACDSignal,
                signalComputation: A.signalComputationFunctions.computeMACDSignal
            },
            "MACD.signal": {
                control: "condition",
                conditionFields: Ge().concat(["MACD.macd"]),
                formatter: xe,
                category: 3
            },
            "Aroon.Up": {
                control: "condition",
                conditionFields: ["Aroon.Down"],
                formatter: Me,
                category: 3
            },
            "Aroon.Down": {
                control: "condition",
                conditionFields: ["Aroon.Up"],
                formatter: Me,
                category: 3
            },
            "BB.upper": {
                control: "condition",
                conditionFields: Ge().concat(["BB.lower", "KltChnl.upper", "KltChnl.lower"]),
                formatter: xe,
                category: 3,
                displaySignal: !0,
                additionalColumns: ["close", "BB.upper"],
                mutateDisplayValue: A.signalDisplayFunctions.processBBSellSignal,
                signalComputation: A.signalComputationFunctions.computeBBSellSignal
            },
            "BB.lower": {
                control: "condition",
                conditionFields: Ge().concat(["BB.upper", "KltChnl.upper", "KltChnl.lower"]),
                formatter: xe,
                category: 3,
                displaySignal: !0,
                additionalColumns: ["close", "BB.lower"],
                mutateDisplayValue: A.signalDisplayFunctions.processBBBuySignal,
                signalComputation: A.signalComputationFunctions.computeBBBuySignal
            },
            "KltChnl.upper": {
                control: "condition",
                conditionFields: Ge().concat(["KltChnl.lower", "BB.upper", "BB.lower"]),
                formatter: xe,
                category: 3
            },
            "KltChnl.lower": {
                control: "condition",
                conditionFields: Ge().concat(["KltChnl.upper", "BB.upper", "BB.lower"]),
                formatter: xe,
                category: 3
            },
            "P.SAR": {
                control: "condition",
                conditionFields: Ge(),
                formatter: xe,
                category: 3,
                displaySignal: !0,
                additionalColumns: ["P.SAR", "open"],
                mutateDisplayValue: A.signalDisplayFunctions.processPSARSignal,
                signalComputation: A.signalComputationFunctions.computePSARSignal
            },
            "Value.Traded": {
                control: "range",
                formatter: Fe,
                category: 1
            },
            MoneyFlow: {
                control: "condition",
                conditionFields: [],
                formatter: Me,
                category: 3
            },
            ChaikinMoneyFlow: {
                control: "condition",
                conditionFields: [],
                formatter: Me,
                category: 3
            },
            goodwill: {
                control: "range",
                formatter: Fe,
                category: 2
            },
            net_debt: {
                control: "range",
                formatter: Fe,
                category: 2
            },
            total_debt: {
                control: "range",
                formatter: Fe,
                category: 2
            },
            revenue_per_employee: {
                control: "range",
                formatter: Fe,
                category: 2
            },
            return_on_invested_capital: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Te,
                filterFormatter: Ae,
                category: 2,
                highlightChange: !0
            },
            after_tax_margin: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Te,
                filterFormatter: Ae,
                category: 2,
                highlightChange: !0
            },
            pre_tax_margin: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Te,
                filterFormatter: Ae,
                category: 2,
                highlightChange: !0
            },
            gross_margin: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Te,
                filterFormatter: Ae,
                category: 2,
                highlightChange: !0
            },
            gross_profit_margin_fy: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Te,
                filterFormatter: Ae,
                category: 2,
                highlightChange: !0
            },
            oper_income_margin_fy: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Te,
                filterFormatter: Ae,
                category: 2,
                highlightChange: !0
            },
            net_income_bef_disc_oper_margin_fy: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Te,
                filterFormatter: Ae,
                category: 2,
                highlightChange: !0
            },
            free_cash_flow_margin_fy: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Te,
                filterFormatter: Ae,
                category: 2,
                highlightChange: !0
            },
            free_cash_flow_margin_ttm: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Te,
                filterFormatter: Ae,
                category: 2,
                highlightChange: !0
            },
            sell_gen_admin_exp_other_ratio_fy: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Te,
                filterFormatter: Ae,
                category: 2
            },
            sell_gen_admin_exp_other_ratio_ttm: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Te,
                filterFormatter: Ae,
                category: 2
            },
            research_and_dev_ratio_fy: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Te,
                filterFormatter: Ae,
                category: 2
            },
            research_and_dev_ratio_ttm: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Te,
                filterFormatter: Ae,
                category: 2
            },
            dividends_paid: {
                control: "range",
                formatter: Fe,
                category: 2
            },
            dividend_yield_recent: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Te,
                filterFormatter: Ae,
                category: 2,
                highlightChange: !0
            },
            basic_eps_net_income: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Me,
                filterFormatter: Ee,
                category: 2
            },
            net_income: {
                control: "range",
                formatter: Fe,
                category: 2
            },
            gross_profit: {
                control: "range",
                formatter: Fe,
                category: 2
            },
            gross_profit_fq: {
                control: "range",
                formatter: Fe,
                category: 2
            },
            number_of_shareholders: {
                control: "range",
                formatter: Fe,
                category: 2
            },
            float_shares_outstanding: {
                control: "range",
                formatter: Fe,
                category: 2
            },
            total_shares_outstanding_fundamental: {
                control: "range",
                formatter: Fe,
                category: 2
            },
            total_shares_outstanding: {
                control: "range",
                formatter: Fe,
                category: 2
            },
            total_shares_diluted: {
                control: "range",
                formatter: Fe,
                category: 2
            },
            total_value_traded: {
                control: "range",
                formatter: Fe,
                category: 2
            },
            total_assets: {
                control: "range",
                formatter: Fe,
                category: 2
            },
            total_current_assets: {
                control: "range",
                formatter: Fe,
                category: 2
            },
            total_revenue: {
                control: "range",
                formatter: Fe,
                category: 2
            },
            total_liabilities_fy: {
                control: "range",
                formatter: Fe,
                category: 2
            },
            total_liabilities_fq: {
                control: "range",
                formatter: Fe,
                category: 2
            },
            dividends_per_share_fq: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Me,
                filterFormatter: Ee,
                category: 2
            },
            earnings_per_share_diluted_ttm: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Me,
                filterFormatter: Ee,
                category: 2
            },
            enterprise_value_ebitda_ttm: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Me,
                filterFormatter: Ee,
                category: 2
            },
            enterprise_value_fq: {
                control: "range",
                formatter: Fe,
                category: 2
            },
            price_revenue_ttm: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Me,
                filterFormatter: Ee,
                category: 2
            },
            number_of_employees: {
                control: "range",
                formatter: Fe,
                category: 2
            },
            last_annual_eps: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Me,
                filterFormatter: Ee,
                category: 2
            },
            last_annual_revenue: {
                control: "range",
                formatter: Fe,
                category: 2
            },
            CCI20: {
                control: "condition",
                conditionFields: [],
                formatter: Me,
                category: 3,
                displaySignal: !0,
                additionalColumns: ["CCI20", "CCI20[1]"],
                mutateDisplayValue: A.signalDisplayFunctions.processCCI20Signal,
                signalComputation: A.signalComputationFunctions.computeCCI20Signal
            },
            "DonchCh20.Upper": {
                control: "condition",
                conditionFields: Ge().concat(["DonchCh20.Lower"]),
                formatter: xe,
                category: 3
            },
            "DonchCh20.Lower": {
                control: "condition",
                conditionFields: Ge().concat(["DonchCh20.Upper"]),
                formatter: xe,
                category: 3
            },
            HullMA9: {
                control: "condition",
                conditionFields: Ge().concat(Xe("HullMA9")),
                formatter: xe,
                category: 3,
                displaySignal: !0,
                additionalColumns: ["Rec.HullMA9"],
                mutateDisplayValue: A.signalDisplayFunctions.processSimpleSignal,
                signalComputation: A.signalComputationFunctions.computeSimpleSignal
            },
            AO: {
                control: "condition",
                conditionFields: [],
                formatter: xe,
                category: 3,
                displaySignal: !0,
                additionalColumns: ["AO", "AO[1]", "AO[2]"],
                mutateDisplayValue: A.signalDisplayFunctions.processAOSignal,
                signalComputation: A.signalComputationFunctions.computeAOSignal
            },
            "Pivot.M.Classic.Middle": {
                formatter: Me,
                forexFormatter: xe,
                category: 3,
                align: "right"
            },
            "Pivot.M.Classic.R1": {
                formatter: Me,
                forexFormatter: xe,
                category: 3,
                align: "right"
            },
            "Pivot.M.Classic.R2": {
                formatter: Me,
                forexFormatter: xe,
                category: 3,
                align: "right"
            },
            "Pivot.M.Classic.R3": {
                formatter: Me,
                forexFormatter: xe,
                category: 3,
                align: "right"
            },
            "Pivot.M.Classic.S1": {
                formatter: Me,
                forexFormatter: xe,
                category: 3,
                align: "right"
            },
            "Pivot.M.Classic.S2": {
                formatter: Me,
                forexFormatter: xe,
                category: 3,
                align: "right"
            },
            "Pivot.M.Classic.S3": {
                formatter: Me,
                forexFormatter: xe,
                category: 3,
                align: "right"
            },
            "Pivot.M.Fibonacci.Middle": {
                formatter: Me,
                forexFormatter: xe,
                category: 3,
                align: "right"
            },
            "Pivot.M.Fibonacci.R1": {
                formatter: Me,
                forexFormatter: xe,
                category: 3,
                align: "right"
            },
            "Pivot.M.Fibonacci.R2": {
                formatter: Me,
                forexFormatter: xe,
                category: 3,
                align: "right"
            },
            "Pivot.M.Fibonacci.R3": {
                formatter: Me,
                forexFormatter: xe,
                category: 3,
                align: "right"
            },
            "Pivot.M.Fibonacci.S1": {
                formatter: Me,
                forexFormatter: xe,
                category: 3,
                align: "right"
            },
            "Pivot.M.Fibonacci.S2": {
                formatter: Me,
                forexFormatter: xe,
                category: 3,
                align: "right"
            },
            "Pivot.M.Fibonacci.S3": {
                formatter: Me,
                forexFormatter: xe,
                category: 3,
                align: "right"
            },
            "Pivot.M.Camarilla.Middle": {
                formatter: Me,
                forexFormatter: xe,
                category: 3,
                align: "right"
            },
            "Pivot.M.Camarilla.R1": {
                formatter: Me,
                forexFormatter: xe,
                category: 3,
                align: "right"
            },
            "Pivot.M.Camarilla.R2": {
                formatter: Me,
                forexFormatter: xe,
                category: 3,
                align: "right"
            },
            "Pivot.M.Camarilla.R3": {
                formatter: Me,
                forexFormatter: xe,
                category: 3,
                align: "right"
            },
            "Pivot.M.Camarilla.S1": {
                formatter: Me,
                forexFormatter: xe,
                category: 3,
                align: "right"
            },
            "Pivot.M.Camarilla.S2": {
                formatter: Me,
                forexFormatter: xe,
                category: 3,
                align: "right"
            },
            "Pivot.M.Camarilla.S3": {
                formatter: Me,
                forexFormatter: xe,
                category: 3,
                align: "right"
            },
            "Pivot.M.Woodie.Middle": {
                formatter: Me,
                forexFormatter: xe,
                category: 3,
                align: "right"
            },
            "Pivot.M.Woodie.R1": {
                formatter: Me,
                forexFormatter: xe,
                category: 3,
                align: "right"
            },
            "Pivot.M.Woodie.R2": {
                formatter: Me,
                forexFormatter: xe,
                category: 3,
                align: "right"
            },
            "Pivot.M.Woodie.R3": {
                formatter: Me,
                forexFormatter: xe,
                category: 3,
                align: "right"
            },
            "Pivot.M.Woodie.S1": {
                formatter: Me,
                forexFormatter: xe,
                category: 3,
                align: "right"
            },
            "Pivot.M.Woodie.S2": {
                formatter: Me,
                forexFormatter: xe,
                category: 3,
                align: "right"
            },
            "Pivot.M.Woodie.S3": {
                formatter: Me,
                forexFormatter: xe,
                category: 3,
                align: "right"
            },
            "Pivot.M.Demark.Middle": {
                formatter: Me,
                forexFormatter: xe,
                category: 3,
                align: "right"
            },
            "Pivot.M.Demark.R1": {
                formatter: Me,
                forexFormatter: xe,
                category: 3,
                align: "right"
            },
            "Pivot.M.Demark.S1": {
                formatter: Me,
                forexFormatter: xe,
                category: 3,
                align: "right"
            },
            candlestick: {
                alias: "name",
                control: "select",
                category: 3,
                sortableColumn: !1,
                additionalColumns: ke.map((e => e.key)),
                mutateDisplayValue: (e, ...t) => {
                    const o = [];
                    for (let e = 0; e < ke.length; ++e)
                        t[e] && o.push(ke[e]);
                    return o.length ? o.map((e => `<span class="tv-screener-table__pattern_icon apply-common-tooltip common-tooltip-fixed common-tooltip-below common-tooltip-html" data-color-theme="round-shadow" title='<div class="tv-screener-table__pattern_tooltip_container">${e.svg}<div>${e.name}</div></div>'>${e.svg}</span>`)).join(" ") : '<span class="tv-screener-table__pattern_empty">—</span>'
                }
                ,
                range: ke.map((e => e.name)),
                sourceRange: ke,
                customFilterCondition: e => {
                    Array.isArray(e) || (e = [e]);
                    return {
                        left: e.map((e => qe(e, ke))).join(","),
                        operation: "equal",
                        right: 1
                    }
                }
            },
            update_mode: {
                hiddenColumn: !1,
                hideSetupColumn: !0,
                skipField: !0
            },
            premarket_change: {
                title: p.t(null, void 0, o(796768)),
                shortTitle: p.t(null, void 0, o(353211)),
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: ["change"],
                formatter: Te,
                filterFormatter: Ae,
                category: 3,
                highlightChange: !0
            },
            premarket_change_abs: {
                title: p.t(null, void 0, o(910602)),
                shortTitle: p.t(null, void 0, o(34990)),
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: ["change_abs"],
                formatter: xe,
                forexFormatter: xe,
                category: 3,
                highlightChange: !0
            },
            premarket_change_from_open: {
                title: p.t(null, void 0, o(732699)),
                shortTitle: p.t(null, void 0, o(596880)),
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Te,
                filterFormatter: Ae,
                category: 3,
                highlightChange: !0
            },
            premarket_change_from_open_abs: {
                title: p.t(null, void 0, o(892667)),
                shortTitle: p.t(null, void 0, o(899332)),
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: xe,
                forexFormatter: xe,
                category: 3,
                highlightChange: !0
            },
            premarket_close: {
                title: p.t(null, void 0, o(360312)),
                shortTitle: p.t(null, void 0, o(360312)),
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Me,
                filterFormatter: Ee,
                category: 1
            },
            premarket_gap: {
                title: p.t(null, void 0, o(652207)),
                shortTitle: p.t(null, void 0, o(652207)),
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: ["gap"],
                formatter: Te,
                filterFormatter: Ae,
                category: 3,
                highlightChange: !0
            },
            premarket_high: {
                title: p.t(null, void 0, o(271515)),
                shortTitle: p.t(null, void 0, o(271515)),
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Me,
                filterFormatter: Ee,
                category: 1
            },
            premarket_low: {
                title: p.t(null, void 0, o(551019)),
                shortTitle: p.t(null, void 0, o(551019)),
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Me,
                filterFormatter: Ee,
                category: 1
            },
            premarket_open: {
                title: p.t(null, void 0, o(613611)),
                shortTitle: p.t(null, void 0, o(613611)),
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Me,
                filterFormatter: Ee,
                category: 1
            },
            premarket_volume: {
                title: p.t(null, void 0, o(689401)),
                shortTitle: p.t(null, void 0, o(689401)),
                control: "range",
                formatter: Fe,
                category: 1
            },
            postmarket_change: {
                title: p.t(null, void 0, o(287719)),
                shortTitle: p.t(null, void 0, o(427921)),
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: ["change"],
                formatter: Te,
                filterFormatter: Ae,
                category: 3,
                highlightChange: !0
            },
            postmarket_change_abs: {
                title: p.t(null, void 0, o(959511)),
                shortTitle: p.t(null, void 0, o(846926)),
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: ["change_abs"],
                formatter: xe,
                forexFormatter: xe,
                category: 3,
                highlightChange: !0
            },
            postmarket_close: {
                title: p.t(null, void 0, o(723752)),
                shortTitle: p.t(null, void 0, o(723752)),
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Me,
                filterFormatter: Ee,
                category: 1
            },
            postmarket_high: {
                title: p.t(null, void 0, o(448860)),
                shortTitle: p.t(null, void 0, o(448860)),
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Me,
                filterFormatter: Ee,
                category: 1
            },
            postmarket_low: {
                title: p.t(null, void 0, o(20712)),
                shortTitle: p.t(null, void 0, o(20712)),
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Me,
                filterFormatter: Ee,
                category: 1
            },
            postmarket_open: {
                title: p.t(null, void 0, o(95190)),
                shortTitle: p.t(null, void 0, o(95190)),
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Me,
                filterFormatter: Ee,
                category: 1
            },
            postmarket_volume: {
                title: p.t(null, void 0, o(999602)),
                shortTitle: p.t(null, void 0, o(999602)),
                control: "range",
                formatter: Fe,
                category: 1
            },
            earnings_per_share_forecast_next_fq: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Me,
                filterFormatter: Ee,
                category: 2
            },
            earnings_per_share_fq: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Me,
                filterFormatter: Ee,
                category: 2
            },
            earnings_release_date: {
                control: "select",
                isSingle: !0,
                category: 2,
                sortable: !1,
                useDefaultRange: !0,
                defaultRange: Le.filter((e => -1 !== $e.indexOf(e.key))).map((e => e.name)),
                sourceRange: Le,
                customFilterCondition: Oe("earnings_release_date"),
                formatter: Ie
            },
            earnings_release_next_date: {
                control: "select",
                isSingle: !0,
                category: 2,
                sortable: !1,
                useDefaultRange: !0,
                defaultRange: Le.filter((e => -1 !== Be.indexOf(e.key))).map((e => e.name)),
                sourceRange: Le,
                customFilterCondition: Oe("earnings_release_next_date"),
                formatter: Ie
            },
            "Recommend.All": {
                control: "select",
                category: 3,
                mutateDisplayValue: A.signalDisplayFunctions.processRecommendSignal,
                signalComputation: A.signalComputationFunctions.computeRecommendSignal,
                useDefaultRange: !0,
                sortable: !1,
                sortSelectedFirst: !1,
                defaultRange: De,
                customFilterCondition: e => (0,
                A.generateRecommendsRequest)(e, "Recommend.All")
            },
            "Recommend.MA": {
                control: "select",
                category: 3,
                mutateDisplayValue: A.signalDisplayFunctions.processRecommendSignal,
                signalComputation: A.signalComputationFunctions.computeRecommendSignal,
                useDefaultRange: !0,
                sortable: !1,
                sortSelectedFirst: !1,
                defaultRange: De,
                customFilterCondition: e => (0,
                A.generateRecommendsRequest)(e, "Recommend.MA")
            },
            "Recommend.Other": {
                control: "select",
                category: 3,
                mutateDisplayValue: A.signalDisplayFunctions.processRecommendSignal,
                signalComputation: A.signalComputationFunctions.computeRecommendSignal,
                useDefaultRange: !0,
                sortable: !1,
                sortSelectedFirst: !1,
                defaultRange: De,
                customFilterCondition: e => (0,
                A.generateRecommendsRequest)(e, "Recommend.Other")
            },
            "Stoch.RSI.K": {
                control: "condition",
                conditionFields: ["Stoch.RSI.D"],
                formatter: Me,
                category: 3,
                displaySignal: !0,
                additionalColumns: ["Rec.Stoch.RSI"],
                mutateDisplayValue: A.signalDisplayFunctions.processSimpleSignal,
                signalComputation: A.signalComputationFunctions.computeSimpleSignal
            },
            "Stoch.RSI.D": {
                control: "condition",
                conditionFields: ["Stoch.RSI.K"],
                formatter: Me,
                category: 3
            },
            "W.R": {
                control: "condition",
                conditionFields: [],
                formatter: Me,
                category: 3,
                displaySignal: !0,
                additionalColumns: ["Rec.WR"],
                mutateDisplayValue: A.signalDisplayFunctions.processSimpleSignal,
                signalComputation: A.signalComputationFunctions.computeSimpleSignal
            },
            ROC: {
                control: "condition",
                conditionFields: [],
                formatter: Me,
                category: 3
            },
            BBPower: {
                control: "condition",
                conditionFields: [],
                formatter: xe,
                category: 3,
                displaySignal: !0,
                additionalColumns: ["Rec.BBPower"],
                mutateDisplayValue: A.signalDisplayFunctions.processSimpleSignal,
                signalComputation: A.signalComputationFunctions.computeSimpleSignal
            },
            UO: {
                control: "condition",
                conditionFields: [],
                formatter: Me,
                category: 3,
                displaySignal: !0,
                additionalColumns: ["Rec.UO"],
                mutateDisplayValue: A.signalDisplayFunctions.processSimpleSignal,
                signalComputation: A.signalComputationFunctions.computeSimpleSignal
            },
            VWAP: {
                control: "condition",
                conditionFields: Ge().concat(Xe()),
                formatter: xe,
                category: 3
            },
            VWMA: {
                control: "condition",
                conditionFields: Ge().concat(Xe()),
                formatter: xe,
                category: 3,
                displaySignal: !0,
                additionalColumns: ["Rec.VWMA"],
                mutateDisplayValue: A.signalDisplayFunctions.processSimpleSignal,
                signalComputation: A.signalComputationFunctions.computeSimpleSignal
            },
            ADR: {
                control: "condition",
                conditionFields: Ge(),
                formatter: xe,
                category: 3
            },
            "Ichimoku.CLine": {
                control: "condition",
                conditionFields: Ge().concat(Ke("Ichimoku.CLine")),
                formatter: xe,
                category: 3
            },
            "Ichimoku.BLine": {
                control: "condition",
                conditionFields: Ge().concat(Ke("Ichimoku.BLine")),
                formatter: xe,
                category: 3,
                displaySignal: !0,
                additionalColumns: ["Rec.Ichimoku"],
                mutateDisplayValue: A.signalDisplayFunctions.processSimpleSignal,
                signalComputation: A.signalComputationFunctions.computeSimpleSignal
            },
            "Ichimoku.Lead1": {
                control: "condition",
                conditionFields: Ge().concat(Ke("Ichimoku.Lead1")),
                formatter: xe,
                category: 3
            },
            "Ichimoku.Lead2": {
                control: "condition",
                conditionFields: Ge().concat(Ke("Ichimoku.Lead2")),
                formatter: xe,
                category: 3
            },
            elements: {
                hiddenOperators: Ye,
                title: p.t(null, void 0, o(898507)),
                shortTitle: p.t(null, void 0, o(898507)),
                control: "condition",
                conditionFields: [],
                formatter: Ee,
                category: 1
            },
            basic_elements: {
                hiddenOperators: Ye,
                title: p.t(null, void 0, o(921906)),
                shortTitle: p.t(null, void 0, o(921906)),
                control: "condition",
                conditionFields: [],
                formatter: Ee,
                category: 1
            },
            dps_common_stock_prim_issue_fy: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Me,
                filterFormatter: Ee,
                category: 2
            },
            "24h_vol|5": {
                category: 1,
                formatter: Fe,
                control: "range",
                title: X["24h_vol|5"][0],
                shortTitle: X["24h_vol|5"][1]
            },
            "24h_vol_change|5": {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Te,
                category: 1,
                highlightChange: !0
            },
            currency: {
                control: "select",
                defaultRange: ["USD", "USDT", "USDC", "BUSD", "BTC", "ETH", "DAI", "BNB", "WBTC", "WETH"],
                disabled: !0,
                category: 1,
                hideSetupColumn: !0
            },
            total_revenue_yoy_growth_fq: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Te,
                filterFormatter: Ae,
                category: 2,
                highlightChange: !0
            },
            total_revenue_qoq_growth_fq: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Te,
                filterFormatter: Ae,
                category: 2,
                highlightChange: !0
            },
            total_revenue_yoy_growth_fy: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Te,
                filterFormatter: Ae,
                category: 2,
                highlightChange: !0
            },
            total_revenue_yoy_growth_ttm: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Te,
                filterFormatter: Ae,
                category: 2,
                highlightChange: !0
            },
            gross_profit_yoy_growth_fq: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Te,
                filterFormatter: Ae,
                category: 2,
                highlightChange: !0
            },
            gross_profit_qoq_growth_fq: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Te,
                filterFormatter: Ae,
                category: 2,
                highlightChange: !0
            },
            gross_profit_yoy_growth_fy: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Te,
                filterFormatter: Ae,
                category: 2,
                highlightChange: !0
            },
            gross_profit_yoy_growth_ttm: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Te,
                filterFormatter: Ae,
                category: 2,
                highlightChange: !0
            },
            ebitda_yoy_growth_fq: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Te,
                filterFormatter: Ae,
                category: 2,
                highlightChange: !0
            },
            ebitda_qoq_growth_fq: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Te,
                filterFormatter: Ae,
                category: 2,
                highlightChange: !0
            },
            ebitda_yoy_growth_fy: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Te,
                filterFormatter: Ae,
                category: 2,
                highlightChange: !0
            },
            ebitda_yoy_growth_ttm: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Te,
                filterFormatter: Ae,
                category: 2,
                highlightChange: !0
            },
            net_income_yoy_growth_fq: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Te,
                filterFormatter: Ae,
                category: 2,
                highlightChange: !0
            },
            net_income_qoq_growth_fq: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Te,
                filterFormatter: Ae,
                category: 2,
                highlightChange: !0
            },
            net_income_yoy_growth_fy: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Te,
                filterFormatter: Ae,
                category: 2,
                highlightChange: !0
            },
            net_income_yoy_growth_ttm: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Te,
                filterFormatter: Ae,
                category: 2,
                highlightChange: !0
            },
            free_cash_flow_yoy_growth_fq: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Te,
                filterFormatter: Ae,
                category: 2,
                highlightChange: !0
            },
            free_cash_flow_qoq_growth_fq: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Te,
                filterFormatter: Ae,
                category: 2,
                highlightChange: !0
            },
            free_cash_flow_yoy_growth_fy: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Te,
                filterFormatter: Ae,
                category: 2,
                highlightChange: !0
            },
            free_cash_flow_yoy_growth_ttm: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Te,
                filterFormatter: Ae,
                category: 2,
                highlightChange: !0
            },
            earnings_per_share_diluted_yoy_growth_fq: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Te,
                filterFormatter: Ae,
                category: 2,
                highlightChange: !0
            },
            earnings_per_share_diluted_qoq_growth_fq: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Te,
                filterFormatter: Ae,
                category: 2,
                highlightChange: !0
            },
            earnings_per_share_diluted_yoy_growth_fy: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Te,
                filterFormatter: Ae,
                category: 2,
                highlightChange: !0
            },
            earnings_per_share_diluted_yoy_growth_ttm: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Te,
                filterFormatter: Ae,
                category: 2,
                highlightChange: !0
            },
            dps_common_stock_prim_issue_yoy_growth_fy: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Te,
                filterFormatter: Ae,
                category: 2,
                highlightChange: !0
            },
            total_assets_yoy_growth_fq: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Te,
                filterFormatter: Ae,
                category: 2,
                highlightChange: !0
            },
            total_assets_qoq_growth_fq: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Te,
                filterFormatter: Ae,
                category: 2,
                highlightChange: !0
            },
            total_assets_yoy_growth_fy: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Te,
                filterFormatter: Ae,
                category: 2,
                highlightChange: !0
            },
            total_debt_yoy_growth_fq: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Te,
                filterFormatter: Ae,
                category: 2,
                highlightChange: !0
            },
            total_debt_qoq_growth_fq: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Te,
                filterFormatter: Ae,
                category: 2,
                highlightChange: !0
            },
            total_debt_yoy_growth_fy: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Te,
                filterFormatter: Ae,
                category: 2,
                highlightChange: !0
            },
            cash_n_equivalents_fq: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Fe,
                category: 2
            },
            cash_n_equivalents_fy: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Fe,
                category: 2
            },
            cash_n_short_term_invest_fq: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Fe,
                category: 2
            },
            cash_n_short_term_invest_fy: {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                formatter: Fe,
                category: 2
            }
        };
        function Qe(e, t) {
            t = t.replace(/(\s+)/, "(<[^>]+>)*$1(<[^>]+>)*");
            const o = new RegExp("(" + t + ")","gi");
            return e.replace(o, "<mark>$1</mark>")
        }
        function et(e, t) {
            for (let o = 0; o < e.length; ++o) {
                const i = e[o];
                i.left && Ze[i.left] && (i.left = $(i.left, t))
            }
        }
        function tt(e, t, o, i) {
            if (Array.isArray(t) && 0 === t.length)
                throw new Error("Empty value");
            let n = o && o[e] ? o[e] : t;
            if ("function" == typeof Ze[e].customFilterCondition) {
                const t = Ze[e].customFilterCondition(n);
                if (t)
                    return Array.isArray(t) ? et(t, i) : ("candlestick" === e && (t.left = t.left.split(",").map((e => $(e, i))).join(",")),
                    t.left && Ze[t.left] && (t.left = $(t.left, i))),
                    t.filterOR && (et(t.filter, i),
                    et(t.filterOR, i)),
                    t.filter2Flag && (et(t.filter, i),
                    et(t.filter2AndPart, i)),
                    t
            }
            if ("function" == typeof Ze[e].mutateFilterConditionValue) {
                const t = Ze[e].mutateFilterConditionValue(n);
                t && (n = t)
            }
            const r = Array.isArray(n);
            if (n && "object" == typeof n && !r) {
                const t = {
                    left: e,
                    operation: n.operator
                };
                return n.value && (t.right = n.value),
                t
            }
            return {
                left: $(e, i),
                operation: r ? "in_range" : "equal",
                right: r ? n.slice() : n
            }
        }
        function ot(e, t, o, i) {
            if (Re(t) && Re(o))
                throw new Error("Empty value");
            let n, r = {};
            switch (Ze[e].control) {
            case "range":
                if (t && "object" == typeof t && !Array.isArray(t)) {
                    r = {
                        left: e,
                        operation: t.operator
                    },
                    t.value && (r.right = t.value);
                    break
                }
                var s = o ? Array.isArray(o[e]) && o[e].slice() || [] : t.slice();
                r = {
                    left: $(e, i),
                    operation: "in_range",
                    right: s
                },
                2 === s.length && (0,
                f.isNumber)(s[0]) && (0,
                f.isNumber)(s[1]) && (-1e100 == +s[0] ? r = {
                    left: $(e, i),
                    operation: "eless",
                    right: s[1]
                } : 1e100 == +s[1] && (r = {
                    left: $(e, i),
                    operation: "egreater",
                    right: s[0]
                }));
                break;
            case "condition":
                if (Re(t.operator))
                    throw new Error("Empty value operator");
                if (Re(t.value))
                    throw new Error("Empty value");
                n = o && o[e].value ? o[e].value : t.value,
                Ze[n] && (n = $(n, i)),
                r = {
                    left: $(e, i),
                    operation: o && o[e].operator ? o[e].operator : t.operator,
                    right: n
                };
                break;
            case "toggle":
                r = {
                    left: $(e, i),
                    operation: o && o[e].operator ? o[e].operator : Ze[e].filter.operator,
                    right: o && o[e].value ? o[e].value : Ze[e].filter.value
                };
                break;
            case "select":
                r = tt(e, t, o, i);
                break;
            default:
                "select" === Ze[e].filterCondition && (r = tt(e, t, o, i))
            }
            return r
        }
        function it(e, t) {
            !function(e, t) {
                for (const o in e)
                    e[o].disabled = 2 === e[o].category || t.includes(o)
            }(e, (t || []).concat("type", "industry", "market_cap_basic", "beta_1_year", "Value.Traded", "MoneyFlow", "ChaikinMoneyFlow", "elements", "basic_elements", "premarket_change", "premarket_change_abs", "premarket_change_from_open", "premarket_change_from_open_abs", "premarket_close", "premarket_gap", "premarket_high", "premarket_low", "premarket_open", "premarket_volume", "postmarket_change", "postmarket_change_abs", "postmarket_close", "postmarket_high", "postmarket_low", "postmarket_open", "postmarket_volume"))
        }
        function nt() {
            for (const e of Object.keys(X))
                e in Ze && (Ze[e].title = Ze[e].title || X[e][0],
                Ze[e].shortTitle = Ze[e].shortTitle || X[e][1])
        }
        function rt(e, t) {
            if (delete Ze.name.control,
            nt(),
            "forex" === e && (Ze.country.title = p.t(null, void 0, o(703556)),
            Ze.country.shortTitle = p.t(null, void 0, o(703556)),
            delete Ze.sector.control,
            Ze.sector.title = p.t(null, void 0, o(533064)),
            Ze.sector.shortTitle = p.t(null, void 0, o(533064)),
            Ze.sector.resettableFilter = !1,
            Ze.sector.mutateFilterConditionValue = e => !!e && (Array.isArray(e) ? e.map((e => Ne(e, Pe))) : Ne(e, Pe))),
            "stock" === e) {
                Ze.sector.title = p.t(null, void 0, o(99804)),
                Ze.sector.shortTitle = p.t(null, void 0, o(99804)),
                Ze.type.customFilterCondition = V,
                Ze.type.defaultRange = je,
                Ze.name.defaultRange = je,
                Ze.sector.control = "select",
                Ze.sector.resettableFilter = !0,
                delete Ze.sector.mutateFilterConditionValue;
                for (const e in Ze)
                    Ze[e].disabled = !1
            }
            ["stock", "crypto"].includes(e) && (Ze.name.control = "select"),
            "crypto" === e && (Ze.sector.title = p.t(null, void 0, o(609797)),
            Ze.sector.shortTitle = p.t(null, void 0, o(609797)),
            Ze.sector.control = "select",
            Ze.sector.resettableFilter = !0,
            delete Ze.sector.mutateFilterConditionValue,
            Ze.name.additionalColumns.push("exchange"),
            Ze.type.defaultRange = He,
            Ze.name.defaultRange = He,
            Ze.type.customFilterCondition = q),
            "crypto" !== e && (Ze.name.additionalColumns = Ze.name.additionalColumns.filter((e => "exchange" !== e))),
            "crypto_mkt" === e && (Ze.sector.title = p.t(null, void 0, o(399709)),
            Ze.sector.shortTitle = p.t(null, void 0, o(399709))),
            ["crypto", "crypto_mkt"].includes(e) && (Ze.total_shares_outstanding.title = p.t(null, void 0, o(983692)),
            Ze.total_shares_outstanding.shortTitle = p.t(null, void 0, o(667808))),
            "sector" === e && (Ze.description.hiddenColumn = !1,
            Ze.description.title = p.t(null, void 0, o(99804)),
            Ze.description.shortTitle = p.t(null, void 0, o(99804)),
            Ze.description.mutateDisplayValue = Je),
            "industry" === e && (Ze.description.hiddenColumn = !1,
            Ze.description.title = p.t(null, void 0, o(407727)),
            Ze.description.shortTitle = p.t(null, void 0, o(407727)),
            Ze.description.mutateDisplayValue = Je,
            Ze.elements.title = p.t(null, void 0, o(921906)),
            Ze.elements.shortTitle = p.t(null, void 0, o(921906)),
            Ze.sector.control = "select",
            Ze.sector.resettableFilter = !0),
            ["sector", "industry"].includes(t) && (Ze.sector.hiddenColumn = !0),
            "bonds" === e && (Ze.close.title = p.t(null, {
                context: "Bonds"
            }, o(568461)),
            Ze.close.shortTitle = p.t(null, {
                context: "Bonds"
            }, o(568461)),
            Ze.coupon = {
                title: p.t(null, void 0, o(332961)),
                shortTitle: p.t(null, void 0, o(332961)),
                align: "right",
                formatter: Te
            },
            Ze.maturity_date = {
                title: p.t(null, void 0, o(147789)),
                shortTitle: p.t(null, void 0, o(147789)),
                align: "right",
                mutateDisplayValue: B.mutateSimpleDate
            }),
            "continuous_futures" === e && (Ze.expiration = {
                title: p.t(null, void 0, o(886777)),
                shortTitle: p.t(null, void 0, o(886777)),
                align: "right",
                mutateDisplayValue: B.mutateSimpleDate
            }),
            function(e, t) {
                switch (e) {
                case "stock":
                    ["bid", "ask", "currency", "centralization"].forEach((e => {
                        t[e].disabled = !0
                    }
                    ));
                    break;
                case "forex":
                    it(t, ["exchange", "volume", "relative_volume_10d_calc", "relative_volume_intraday.5", "average_volume_10d_calc", "average_volume_30d_calc", "average_volume_60d_calc", "average_volume_90d_calc", "currency", "centralization"]);
                    break;
                case "futures":
                case "cfd":
                    it(t, ["bid", "ask", "centralization"]);
                    break;
                case "crypto":
                    it(t, ["country", "sector"])
                }
            }(e, Ze);
            ["market_cap_calc", "market_cap_diluted_calc", "total_shares_outstanding", "total_shares_diluted", "total_value_traded", "24h_vol|5", "24h_vol_change|5"].forEach((t => {
                Ze[t].disabled = !["crypto", "crypto_mkt"].includes(e)
            }
            ));
            ["elements", "basic_elements"].forEach((t => {
                Ze[t].disabled = !["sector", "industry"].includes(e)
            }
            ))
        }
        nt();
        const st = [{
            key: "-1",
            name: p.t(null, void 0, o(710050))
        }, {
            key: "1",
            name: p.t(null, void 0, o(970223))
        }]
          , lt = [{
            key: "-1",
            name: '<div class="tv-screener-table__market-icon">' + o(578507) + "</div>"
        }, {
            key: "1",
            name: '<div class="tv-screener-table__market-icon">' + o(289523) + "</div>"
        }];
        function at() {
            const e = (e, t, o, i) => {
                const n = qe(e, Le) || null
                  , r = n ? ze(n) : null;
                return r && r[0] <= 1e3 * t && 1e3 * t <= r[1] ? i : o
            }
            ;
            Ze.earnings_release_next_time = {
                isSingle: !0,
                title: p.t(null, void 0, o(312806)),
                tooltip: (t, o, i) => {
                    const n = Ze.earnings_release_next_date.value
                      , r = e(n, t, o, i);
                    return r ? Ve((s = r).toString(), st) || s : void 0;
                    var s
                }
                ,
                shortTitle: p.t(null, void 0, o(312806)),
                disableHeaderControl: !0,
                align: "center",
                additionalColumns: ["earnings_release_next_date", "earnings_release_time", "earnings_release_next_time"],
                mutateDisplayValue: (t, o, i, n) => {
                    const r = Ze.earnings_release_next_date.value
                      , s = e(r, o, i, n);
                    return s ? Ve((l = s).toString(), lt) || l : ct;
                    var l
                }
                ,
                category: 2
            },
            Ze.close.title = p.t(null, void 0, o(7953)),
            Ze.close.shortTitle = p.t(null, void 0, o(7953)),
            Ze.earnings_release_next_date = Object.assign(Ze.earnings_release_next_date, {
                title: p.t(null, void 0, o(722677)),
                shortTitle: p.t(null, void 0, o(722677)),
                noAny: !0,
                additionalColumns: ["earnings_release_date", "earnings_release_next_date"],
                defaultRange: Le.map((e => e.name)),
                resettableFilter: !1,
                mutateDisplayValue: (e, t, o, i) => {
                    if (!o && t)
                        return Ie.format(t);
                    if (i.value) {
                        const e = qe(i.value, Le);
                        if (e) {
                            const i = ze(e);
                            if (i) {
                                if (t && dt(t, i))
                                    return Ie.format(t);
                                if (o && dt(o, i))
                                    return Ie.format(o)
                            }
                        }
                    }
                    return e
                }
                ,
                customFilterCondition: Oe()
            }),
            Ze.earnings_release_next_calendar_date = {
                title: p.t(null, void 0, o(609254)),
                shortTitle: p.t(null, void 0, o(609254)),
                formatter: Ie,
                category: 1,
                additionalColumns: ["earnings_release_next_date", "earnings_release_calendar_date"],
                mutateDisplayValue: (e, t, o) => {
                    const i = qe(Ze.earnings_release_next_date.value, Le);
                    if (i) {
                        const o = ze(i);
                        if (o && dt(t, o))
                            return e
                    }
                    return o ? Ie.format(o) : ct
                }
            },
            delete Ze.earnings_per_share_forecast_next_fq.control,
            Ze.earnings_per_share_forecast_next_fq.title = p.t(null, void 0, o(881220)),
            Ze.earnings_per_share_forecast_next_fq.shortTitle = p.t(null, void 0, o(881220)),
            Ze.earnings_per_share_forecast_next_fq.disableHeaderControl = !0,
            Ze.earnings_per_share_forecast_next_fq.align = "right",
            Ze.earnings_per_share_forecast_next_fq.additionalColumns = ["earnings_release_next_date", "earnings_per_share_forecast_fq"],
            Ze.earnings_per_share_forecast_next_fq.mutateDisplayValue = (e, t, o) => {
                const i = qe(Ze.earnings_release_next_date.value, Le);
                if (i) {
                    const o = ze(i);
                    if (o && dt(t, o))
                        return e
                }
                return o ? Me.format(o) : ct
            }
            ,
            Ze.earnings_per_share_fq.title = p.t(null, void 0, o(8041)),
            Ze.earnings_per_share_fq.shortTitle = p.t(null, void 0, o(8041)),
            Ze.eps_surprise_fq = {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                title: X.eps_surprise_fq[0],
                shortTitle: X.eps_surprise_fq[1],
                formatter: Me,
                filterFormatter: Ee,
                category: 2,
                highlightChange: !0
            },
            Ze.eps_surprise_percent_fq = {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                title: X.eps_surprise_percent_fq[0],
                shortTitle: X.eps_surprise_percent_fq[1],
                formatter: Te,
                filterFormatter: Ae,
                category: 2,
                highlightChange: !0
            },
            Ze.revenue_fq = {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                title: p.t(null, void 0, o(484933)),
                shortTitle: p.t(null, void 0, o(484933)),
                formatter: Fe,
                category: 1
            },
            Ze.revenue_forecast_next_fq = {
                control: "condition",
                hiddenOperators: Ye,
                conditionFields: [],
                title: p.t(null, void 0, o(792741)),
                shortTitle: p.t(null, void 0, o(792741)),
                formatter: Fe,
                category: 1,
                additionalColumns: ["earnings_release_next_date", "revenue_forecast_fq"],
                mutateDisplayValue: (e, t, o) => {
                    const i = qe(Ze.earnings_release_next_date.value, Le);
                    if (i) {
                        const o = ze(i);
                        if (o && dt(t, o))
                            return "0" === e ? ct : e
                    }
                    return o ? Fe.format(o) : ct
                }
            },
            ht()
        }
        const ct = '<span class="tv-screener-table__cell--color-normal">—</span>';
        function dt(e, t) {
            return function(e, t) {
                const o = t[0]
                  , i = t[1];
                return o <= e && e <= i
            }(1e3 * e, t)
        }
        const ut = e => {
            e.additionalColumns = ["earnings_release_next_date"],
            e.mutateDisplayValue = (e, t) => {
                const o = qe(Ze.earnings_release_next_date.value, Le);
                if (o) {
                    const e = ze(o);
                    if (e && dt(t, e))
                        return ct
                }
                return e
            }
        }
        ;
        function ht() {
            ut(Ze.earnings_per_share_fq),
            ut(Ze.eps_surprise_fq),
            ut(Ze.eps_surprise_percent_fq),
            ut(Ze.revenue_fq)
        }
        function pt(e, t="stock", o=!0) {
            if (!e)
                return null;
            if (["crypto_mkt"].includes(t) && e.cryptoFormatter)
                return e.cryptoFormatter;
            if (["forex", "crypto", "crypto_mkt", "cfd", "futures"].includes(t)) {
                if (e.forexFilterFormatter)
                    return e.forexFilterFormatter;
                if (e.forexFormatter)
                    return e.forexFormatter
            }
            return o && e.filterFormatter ? e.filterFormatter : e.formatter ? e.formatter : null
        }
        const mt = {};
        function _t(e, t, o, i) {
            const n = e + ";" + t + ";" + o + ";" + i;
            return mt[n] || (mt[n] = new w.PriceFormatter({
                priceScale: e,
                minMove: t,
                fractional: o,
                minMove2: i
            })),
            mt[n]
        }
        function gt(e) {
            return Ze[e] && !Ze[e].fixed && !Ze[e].disabled && !Ze[e].hideSetupColumn
        }
        function vt(e) {
            return e.filterTitle || e.title
        }
        function ft(e, t) {
            return Array.isArray(e) && Array.isArray(t) ? function(e, t) {
                const o = [...e, ...t];
                return [Math.min(...o), Math.max(...o)]
            }(e, t) : "string" != typeof e ? function(e, t) {
                return e.operator !== t.operator ? null : "greater" === t.operator ? {
                    operator: e.operator,
                    value: Math.min(t.value, e.value)
                } : {
                    operator: e.operator,
                    value: Math.max(e.value, t.value)
                }
            }(e, t) : e === t ? e : null
        }
        const yt = {
            forex: {
                top_gainers: p.t(null, void 0, o(497496)),
                top_losers: p.t(null, void 0, o(67269))
            },
            default: {
                top_gainers: p.t(null, void 0, o(534822)),
                top_losers: p.t(null, void 0, o(619430))
            }
        }
          , bt = [{
            id: "general",
            title: p.t(null, void 0, o(704258)),
            content: {
                sort_field: "name",
                sort_direction: "asc",
                filters: {}
            }
        }, {
            id: "most_capitalized",
            title: p.t(null, void 0, o(553743)),
            content: {
                sort_field: "market_cap_basic",
                sort_direction: "desc",
                filters: {
                    is_primary: {
                        operator: "equal",
                        value: !0
                    },
                    active_symbol: {
                        operator: "equal",
                        value: !0
                    }
                }
            }
        }, {
            id: "volume_leaders",
            title: p.t(null, void 0, o(476709)),
            adjustFilter: {
                volume: [1]
            },
            content: {
                sort_field: "volume",
                sort_direction: "desc",
                filters: {
                    is_primary: {
                        operator: "equal",
                        value: !0
                    },
                    active_symbol: {
                        operator: "equal",
                        value: !0
                    }
                }
            }
        }, {
            id: "top_gainers",
            title: yt.default.top_gainers,
            adjustFilter: {
                change: [1]
            },
            content: {
                sort_field: "change",
                sort_direction: "desc",
                filters: {
                    change: {
                        operator: "greater",
                        value: 0
                    },
                    is_primary: {
                        operator: "equal",
                        value: !0
                    },
                    active_symbol: {
                        operator: "equal",
                        value: !0
                    }
                }
            }
        }, {
            id: "top_losers",
            title: yt.default.top_losers,
            adjustFilter: {
                change: [0]
            },
            content: {
                sort_field: "change",
                sort_direction: "asc",
                filters: {
                    change: {
                        operator: "less",
                        value: 0
                    },
                    is_primary: {
                        operator: "equal",
                        value: !0
                    },
                    active_symbol: {
                        operator: "equal",
                        value: !0
                    }
                }
            }
        }, {
            id: "ath",
            title: p.t(null, void 0, o(561723)),
            content: {
                sort_field: "name",
                sort_direction: "asc",
                filters: {
                    "High.All": {
                        operator: "eless",
                        value: "high"
                    },
                    is_primary: {
                        operator: "equal",
                        value: !0
                    },
                    active_symbol: {
                        operator: "equal",
                        value: !0
                    }
                }
            }
        }, {
            id: "atl",
            title: p.t(null, void 0, o(699864)),
            content: {
                sort_field: "name",
                sort_direction: "asc",
                filters: {
                    "Low.All": {
                        operator: "egreater",
                        value: "low"
                    },
                    is_primary: {
                        operator: "equal",
                        value: !0
                    },
                    active_symbol: {
                        operator: "equal",
                        value: !0
                    }
                }
            }
        }, {
            id: "high_dividend",
            title: p.t(null, void 0, o(768450)),
            content: {
                sort_field: "dividend_yield_recent",
                sort_direction: "desc",
                filters: {
                    dividend_yield_recent: {
                        operator: "greater",
                        value: 0
                    },
                    is_primary: {
                        operator: "equal",
                        value: !0
                    },
                    active_symbol: {
                        operator: "equal",
                        value: !0
                    }
                }
            }
        }, {
            id: "above_52wk_high",
            title: p.t(null, void 0, o(686478)),
            content: {
                sort_field: "name",
                sort_direction: "asc",
                filters: {
                    price_52_week_high: {
                        operator: "eless",
                        value: "high"
                    },
                    is_primary: {
                        operator: "equal",
                        value: !0
                    },
                    active_symbol: {
                        operator: "equal",
                        value: !0
                    }
                }
            }
        }, {
            id: "below_52wk_low",
            title: p.t(null, void 0, o(56273)),
            content: {
                sort_field: "name",
                sort_direction: "asc",
                filters: {
                    price_52_week_low: {
                        operator: "egreater",
                        value: "low"
                    },
                    is_primary: {
                        operator: "equal",
                        value: !0
                    },
                    active_symbol: {
                        operator: "equal",
                        value: !0
                    }
                }
            }
        }, {
            id: "monthly_high",
            title: p.t(null, void 0, o(708562)),
            content: {
                sort_field: "name",
                sort_direction: "asc",
                filters: {
                    "High.1M": {
                        operator: "eless",
                        value: "high"
                    },
                    is_primary: {
                        operator: "equal",
                        value: !0
                    },
                    active_symbol: {
                        operator: "equal",
                        value: !0
                    }
                }
            }
        }, {
            id: "monthly_low",
            title: p.t(null, void 0, o(202388)),
            content: {
                sort_field: "name",
                sort_direction: "asc",
                filters: {
                    "Low.1M": {
                        operator: "egreater",
                        value: "low"
                    },
                    is_primary: {
                        operator: "equal",
                        value: !0
                    },
                    active_symbol: {
                        operator: "equal",
                        value: !0
                    }
                }
            }
        }, {
            id: "most_volatile",
            title: p.t(null, void 0, o(284514)),
            adjustFilter: {
                "Volatility.D": [1]
            },
            content: {
                sort_field: "Volatility.D",
                sort_direction: "desc",
                filters: {
                    is_primary: {
                        operator: "equal",
                        value: !0
                    },
                    active_symbol: {
                        operator: "equal",
                        value: !0
                    }
                }
            }
        }, {
            id: "unusual_volume",
            title: p.t(null, void 0, o(200419)),
            adjustFilter: {
                relative_volume_10d_calc: [1]
            },
            content: {
                sort_field: "relative_volume_10d_calc",
                sort_direction: "desc",
                filters: {
                    is_primary: {
                        operator: "equal",
                        value: !0
                    },
                    relative_volume_10d_calc: null,
                    active_symbol: {
                        operator: "equal",
                        value: !0
                    }
                }
            }
        }, {
            id: "overbought",
            title: p.t(null, void 0, o(890846)),
            content: {
                sort_field: "name",
                sort_direction: "asc",
                filters: {
                    is_primary: {
                        operator: "equal",
                        value: !0
                    },
                    RSI: {
                        operator: "greater",
                        value: 70
                    },
                    active_symbol: {
                        operator: "equal",
                        value: !0
                    }
                }
            }
        }, {
            id: "oversold",
            title: p.t(null, void 0, o(96062)),
            content: {
                sort_field: "name",
                sort_direction: "asc",
                filters: {
                    is_primary: {
                        operator: "equal",
                        value: !0
                    },
                    RSI: {
                        operator: "less",
                        value: 30
                    },
                    active_symbol: {
                        operator: "equal",
                        value: !0
                    }
                }
            }
        }, {
            id: "outperforming_SMA50",
            title: p.t(null, void 0, o(862381)),
            content: {
                sort_field: "name",
                sort_direction: "asc",
                filters: {
                    is_primary: {
                        operator: "equal",
                        value: !0
                    },
                    SMA50: {
                        operator: "less",
                        value: "close"
                    },
                    active_symbol: {
                        operator: "equal",
                        value: !0
                    }
                }
            }
        }, {
            id: "underperforming_SMA50",
            title: p.t(null, void 0, o(196067)),
            content: {
                sort_field: "name",
                sort_direction: "asc",
                filters: {
                    is_primary: {
                        operator: "equal",
                        value: !0
                    },
                    SMA50: {
                        operator: "greater",
                        value: "close"
                    },
                    active_symbol: {
                        operator: "equal",
                        value: !0
                    }
                }
            }
        }, {
            id: "earnings_this_week",
            title: p.t(null, void 0, o(711478)),
            content: {
                sort_field: "market_cap_basic",
                sort_direction: "desc",
                filters: {
                    is_primary: {
                        operator: "equal",
                        value: !0
                    },
                    earnings_release_next_date: null,
                    active_symbol: {
                        operator: "equal",
                        value: !0
                    }
                }
            }
        }, {
            id: "pre_market_gainers",
            title: p.t(null, void 0, o(171794)),
            adjustFilter: {
                premarket_change: [1]
            },
            content: {
                sort_field: "premarket_change",
                sort_direction: "desc",
                filters: {
                    is_primary: {
                        operator: "equal",
                        value: !0
                    },
                    premarket_change: {
                        operator: "greater",
                        value: 0
                    },
                    active_symbol: {
                        operator: "equal",
                        value: !0
                    }
                }
            }
        }, {
            id: "after_hours_gainers",
            title: p.t(null, void 0, o(126679)),
            adjustFilter: {
                postmarket_volume: [1]
            },
            content: {
                sort_field: "postmarket_volume",
                sort_direction: "desc",
                filters: {
                    is_primary: {
                        operator: "equal",
                        value: !0
                    },
                    postmarket_volume: {
                        operator: "greater",
                        value: 0
                    },
                    active_symbol: {
                        operator: "equal",
                        value: !0
                    }
                }
            }
        }];
        function wt(e) {
            bt.forEach((t => {
                if (t.disabled = !1,
                t.id in v.marketFilterValues.america)
                    for (const e in v.marketFilterValues.america[t.id])
                        t.content.filters[e] = v.marketFilterValues.america[t.id][e];
                (t => {
                    ["forex", "crypto"].includes(e[0]) || e.includes("brazil") ? delete t.content.filters.name : t.content.filters.name = ["common", "dr", "etf"],
                    1 === e.length && "america" === e[0] ? t.content.filters.exchange = ["NYSE", "NASDAQ", "AMEX"] : delete t.content.filters.exchange,
                    "general" === t.id && ("crypto" === e[0] && (t.content.sort_field = "24h_vol|5",
                    t.content.sort_direction = "desc"),
                    "forex" === e[0] && (t.content.sort_field = "name",
                    t.content.sort_direction = "asc"));
                    const o = [];
                    for (const r of e) {
                        const e = v.marketFilterValues[r];
                        if (e && t.id in e)
                            if (t.disabled || null !== e[t.id]) {
                                const r = e[t.id];
                                for (const e in r) {
                                    const s = r[e];
                                    if (null === s || (i = t.content.filters[e],
                                    n = s,
                                    Object.prototype.toString.call(i) !== Object.prototype.toString.call(n)))
                                        delete t.content.filters[e],
                                        o.push(e);
                                    else if (!o.includes(e) && e in t.content.filters) {
                                        const i = ft(t.content.filters[e], s);
                                        i ? t.content.filters[e] = i : (delete t.content.filters[e],
                                        o.push(e))
                                    } else
                                        t.content.filters[e] = s
                                }
                            } else
                                t.disabled = !0
                    }
                    var i, n;
                    "forex" === e[0] ? yt.forex[t.id] && (t.title = yt.forex[t.id]) : yt.default[t.id] && (t.title = yt.default[t.id])
                }
                )(t),
                "general" === t.id && (t.disabled = "forex" !== e[0] && "crypto" !== e[0]),
                ["pre_market_gainers", "after_hours_gainers"].includes(t.id) && (t.disabled = !0)
            }
            ))
        }
        const St = JSON.parse('["BAHRAIN","BELEX","BMV","BSSE","BVB","BVL","BVMT","DFM","DSEBD","EURONEXT_AMS","EURONEXT_BRU","EURONEXT_LIS","EURONEXT_PAR","EURONEXTAMS","EURONEXTBRU","EURONEXTLIS","EURONEXTPAR","EURONEXTDUB","OSE","OSL","FSE","HKEX","HOSE","ICESG","ICEABUD","ICEUSCA","ICEENDEX","LUXSE","MOEX","MYX","NAG","NASDAQDUBAI","NSE","NSENG","NSEKE","NGM","NZX","PSE","PSX","SAPSE","SET","SGX","SZSE","SHFE","TADAWUL","TSE","TWSE","FTSEST","LME","QSE","LSE","LSIN"]');
        const Ct = ["artechecom", "cincodias", "copees", "elconfidencial", "elespanolcom", "elnacionalD", "elpaisfinanciero", "elperiodicodelaenergia", "epe", "finanzasD", "lainformacioncom"]
          , kt = ["bovespa", "forbescombr", "genialinvestimentos", "marcopolocombr", "moneytimescombr", "NoticiasagricolaD", "poder360", "seudinheiro", "spacemoneycombr", "tradersclubbrasil", "tradersclubbrasilD", "vocesaabrilcombr", "xpicombr"]
          , xt = "america";
        function Mt(e, t) {
            const o = function(e) {
                const t = St.slice();
                return e && kt.includes(e) && t.splice(t.indexOf("BMFBOVESPA"), 1),
                "ambito" === e && t.splice(t.indexOf("BCBA"), 1),
                "hegnarno" === e && t.splice(t.indexOf("OSL"), 1),
                e && Ct.includes(e) && t.splice(t.indexOf("BME"), 1),
                e && ["riyadhcapitalD", "riyadhcapitalRT"].includes(e) && (t.splice(t.indexOf("TADAWUL"), 1),
                t.splice(t.indexOf("DFM"), 1)),
                "NGX" === e && t.splice(t.indexOf("NSENG"), 1),
                t
            }(t);
            return Object.keys(e).filter((t => {
                if (["forex", "crypto"].includes(t))
                    return !0;
                const i = e[t];
                return !!i && (i.stocks = i.stocks.filter((e => -1 === o.indexOf(e))),
                0 !== i.stocks.length)
            }
            )).map((t => ({
                content: e[t] ? e[t].title + (e[t].stocks.length ? ` (${Et(t, e)})` : "") : t,
                value: t
            }))).sort(( (e, t) => e.value === xt ? -1 : t.value === xt || (e?.content ?? "") > (t?.content ?? "") ? 1 : -1))
        }
        function Et(e, t) {
            let o = [...t[e].stocks];
            const i = (0,
            v.getUnavailableWidgetExchangesMap)()[e];
            return i && (o = o.filter((e => !i.includes(e)))),
            o.join(", ")
        }
        var Ft = o(762553)
          , Tt = o(439563);
        var At = o(931924)
          , It = (o(617525),
        o(832517),
        o(804840),
        o(950107),
        o(695556),
        o(275631),
        o(386727),
        o(713710),
        o(423777),
        o(38280),
        o(989767),
        o(506438),
        o(144669),
        o(88895),
        o(184121),
        o(481316),
        o(758804),
        o(941924),
        o(975351),
        o(93807),
        o(588978),
        o(926724),
        o(335048))
          , Dt = o(713438);
        var Pt, Lt = o(290484), $t = o(207678), Bt = o(740203), Rt = o(31214), Ot = o(242651), Nt = (o(236550),
        o(337793),
        o(810047),
        o(228931)), Wt = (o(670431),
        o(707934)), Vt = o(779923), qt = o(406103), zt = o(746849), Ut = o(104461);
        !function(e) {
            e[e.None = 0] = "None",
            e[e.Widget = 1] = "Widget",
            e[e.Site = 2] = "Site"
        }(Pt || (Pt = {}));
        var jt = o(16241)
          , Ht = o(833813)
          , Gt = o(969680)
          , Xt = o(518643);
        class Kt {
            constructor(e) {
                this.event = "change_timeframe",
                this.source = "timeframe_selector",
                this.location = "toolbar",
                this.state = "",
                this.value = e
            }
        }
        class Yt {
            constructor(e, t) {
                this.event = "change_columnset",
                this.source = "columset_selector",
                this.location = "toolbar",
                this.state = "",
                this.value = (0,
                Xt.getColumnSetNameForSnowPlow)(t),
                this.source = e
            }
        }
        class Jt {
            constructor(e, t) {
                this.event = "change_favorite_columnsets",
                this.source = "columnset_star_button",
                this.location = "toolbar",
                this.value = (0,
                Xt.getColumnSetNameForSnowPlow)(t),
                this.state = e
            }
        }
        class Zt {
            constructor() {
                this.event = "rename_custom_columnset",
                this.source = "columnset_pen_button",
                this.location = "toolbar",
                this.state = "",
                this.value = ""
            }
        }
        class Qt {
            constructor(e) {
                this.event = "change_filterset",
                this.source = "filterset_selector",
                this.location = "toolbar",
                this.state = "",
                this.value = (0,
                Xt.getFilterSetNameForSnowPlow)(e)
            }
        }
        class eo {
            constructor() {
                this.event = "rename_custom_filterset",
                this.source = "filterset_pen_button",
                this.location = "toolbar",
                this.state = "",
                this.value = ""
            }
        }
        var to = o(957931);
        class oo {
            constructor(e, t, o) {
                this.event = "change_columns",
                this.source = "column_selector",
                this.location = "header_fields_popup" === e ? "header" : "toolbar",
                this.state = t ? "added" : "removed",
                this.value = o
            }
        }
        class io {
            constructor(e) {
                this.event = "column_move",
                this.source = "column_header",
                this.location = "header",
                this.state = to.UserActionState.Drag,
                this.value = e
            }
        }
        class no {
            constructor() {
                this.event = "refresh_screener_data",
                this.source = "refresh_button",
                this.location = "toolbar",
                this.state = "",
                this.value = ""
            }
        }
        class ro {
            constructor(e) {
                this.event = "change_refresh_interval",
                this.source = "refresh_interval_selector",
                this.location = "toolbar",
                this.state = "",
                this.value = (0,
                Xt.getSnowPlowRefreshInterval)(e)
            }
        }
        var so = o(779893);
        const lo = o(735566).getLogger("Screener.Popups");
        class ao {
            constructor(e, t, o) {
                this._model = e,
                this._view = t,
                this._bridge = o,
                this._markets = null,
                this._model.fieldSetSaved.subscribe(null, ( () => this._view.$fieldSetsButton.removeClass("tv-screener-toolbar__button--unsaved"))),
                this._model.filterSetSaved.subscribe(null, ( () => this._view.$filterSetsButton.removeClass("tv-screener-toolbar__button--unsaved"))),
                this._fieldsPopupCache = {}
            }
            showPromptDialog(e, t) {
                return new Promise((i => {
                    (0,
                    Vt.showRename)({
                        title: e.title,
                        text: e.label,
                        initValue: t,
                        mainButtonText: p.t(null, void 0, o(664e3)),
                        maxLength: 128,
                        onRename: ({newValue: e, dialogClose: t}) => {
                            i(e),
                            t()
                        }
                        ,
                        onClose: i
                    })
                }
                ))
            }
            showMaintenanceDialog() {
                (0,
                Nt.showNoticeDialog)({
                    type: "modal",
                    title: p.t(null, void 0, o(900543)),
                    content: p.t(null, void 0, o(673937))
                })
            }
            showConfirmDialog(e) {
                return new Promise((t => {
                    (0,
                    Vt.showConfirm)({
                        text: e,
                        onConfirm: ({dialogClose: e}) => {
                            t(!0),
                            e()
                        }
                        ,
                        onClose: () => t(!1)
                    })
                }
                ))
            }
            showNotice(e, t) {
                (0,
                Nt.showNoticeDialog)({
                    content: e,
                    title: t
                })
            }
            setFieldsPopup(e, t, i) {
                e.addClass("tv-dropdown-behavior__button");
                const n = so(`<div class="${t || ""}">`);
                n.insertAfter(e).append(e);
                const r = so('<div class="tv-dropdown__body tv-dropdown__body--over-trigger tv-dropdown-behavior__body tv-screener-fields-popup i-hidden">').appendTo(n);
                i && r.addClass(i);
                const s = so('<div class="tv-screener-fields-popup__search-wrap">').appendTo(r)
                  , l = so(`<input type="text" placeholder="${p.t(null, void 0, o(574769))}" class="tv-screener-fields-popup__search-input">`).appendTo(s)
                  , a = so('<div class="tv-dropdown-behavior__scroll">').appendTo(r)
                  , c = so('<div class="tv-screener-fields-popup__items-wrap tv-dropdown-behavior__inscroll">').appendTo(a);
                "header_fields-button" === e.attr("data-name") && c.attr({
                    "data-name": "header_fields_popup"
                });
                const d = so('<div class="tv-screener-fields-popup__item tv-screener-fields-popup__item--no-matches js-hidden">No matches</div>').appendTo(r);
                l.on("change input", (e => {
                    const t = l.val().trim().toLowerCase();
                    t ? c.find(".js-fields-item").each((function() {
                        const e = so(this);
                        e.toggleClass("js-hidden", !~e.text().toLowerCase().indexOf(t))
                    }
                    )) : c.find(".js-fields-item").removeClass("js-hidden"),
                    d.toggleClass("js-hidden", !!c.find(".js-fields-item:not(.js-hidden)").size()),
                    n.tvDropdown("updateScroll")
                }
                )),
                n.on("beforeOpenMenu", ( () => {
                    l.val(""),
                    c.find(".js-fields-item").removeClass("js-hidden"),
                    d.addClass("js-hidden"),
                    this.resetFieldsPopup(c),
                    a.css("maxHeight", so(window).height() - e.offset().top + so(window).scrollTop() - e.outerHeight() - s.outerHeight() - 20)
                }
                )).on("afterOpenMenu", ( () => {
                    l.focus()
                }
                )).tvDropdown({
                    scroll: !0,
                    noAnimation: !0
                }),
                setTimeout(( () => this.resetFieldsPopup(c)), 0)
            }
            resetFieldsPopup(e) {
                e.empty();
                const t = e => {
                    if (e in this._fieldsPopupCache) {
                        const t = this._fieldsPopupCache[e];
                        return t.checkbox.prop("checked", Ze[e].checked),
                        t.item
                    }
                    const t = so('<div class="tv-dropdown-behavior__item">');
                    so(`<label data-field="${e}" class="tv-control-select__option-wrap tv-screener-fields-popup__item js-fields-item">\n\t\t\t\t<input type="checkbox" name="${e}" class="js-field-checkbox"${Ze[e].checked ? " checked" : ""}>\n\t\t\t\t<span class="tv-control-checkbox__label">${(0,
                    G.triesTranslateScreenerData)(Ze[e].title)}</span>\n\t\t\t</label>`).appendTo(t);
                    const o = t.find(".js-field-checkbox").tvControlCheckbox();
                    return this._fieldsPopupCache[e] = {
                        item: t,
                        checkbox: o
                    },
                    t
                }
                  , o = this._view.sortedFields.filter(gt).sort(( (e, t) => Ze[e].title.localeCompare(Ze[t].title, void 0, {
                    ignorePunctuation: !0,
                    numeric: !0
                })))
                  , i = o.filter((e => Ze[e].checked))
                  , n = o.filter((e => !Ze[e].checked));
                i.concat(n).forEach((o => {
                    "is_primary" !== o && t(o).appendTo(e)
                }
                )),
                e.find(".js-field-checkbox").off("change"),
                e.find(".js-field-checkbox").on("change", (t => {
                    const o = so(t.currentTarget)
                      , i = o.attr("name");
                    Ze[i].checked = o.prop("checked");
                    const n = e.attr("data-name")
                      , r = Ze[i].checked;
                    (0,
                    Xt.sendSnowPlowData)(new oo(n,r,i));
                    const s = Ze[i].checked ? this._view._table.fieldsOrder.concat(i) : this._view._table.fieldsOrder.filter((e => e !== i));
                    this._model.preventPrevScanRequest(),
                    this._model.fieldSetChanged.fire(s.filter((e => Ze[e] && !0 !== Ze[e].disabled && !0 !== Ze[e].hiddenColumn))),
                    this._model.update(),
                    this._view.$fieldSetsButton.toggleClass("tv-screener-toolbar__button--unsaved", this._model.isFieldSetChanged())
                }
                ))
            }
            setPopup(e, t, o) {
                e.addClass("tv-dropdown-behavior__button");
                const i = so(`<div class="${t || ""}">`);
                i.insertAfter(e).append(e);
                const n = so('<div class="tv-dropdown__body tv-dropdown__body--over-trigger tv-dropdown-behavior__body tv-screener-popup i-hidden">').appendTo(i);
                o && n.addClass(o);
                const r = so('<div class="tv-dropdown-behavior__scroll js-container">').appendTo(n);
                return so('<div class="tv-screener-popup__items-wrap tv-dropdown-behavior__inscroll js-content">').appendTo(r),
                i.on("beforeOpenMenu", ( () => {
                    r.css("maxHeight", so(window).height() - e.offset().top + so(window).scrollTop() - 45)
                }
                )).tvDropdown({
                    scroll: !0,
                    noAnimation: !0
                })
            }
            setFieldSetsPopup(e) {
                const t = this.setPopup(e, "tv-screener-toolbar__button-wrap");
                t.tvDropdown("disable");
                const i = t.find(".js-content");
                i.on("click", ".js-set", (e => {
                    const o = so(e.currentTarget);
                    i.find(".js-item-active").removeClass("tv-screener-popup__item--active js-item-active"),
                    o.addClass("tv-screener-popup__item--active js-item-active");
                    const n = o.attr("data-set");
                    this._model.applyFieldSet(n),
                    this._view.adjustToolbarWidth(),
                    t.tvDropdown("close"),
                    (0,
                    Xt.sendSnowPlowData)(new Yt("columnset_selector",n))
                }
                )).on("click", ".js-set-delete", (e => {
                    const i = so(e.currentTarget)
                      , n = this._model.getFieldSetById(i.parent().attr("data-set"))
                      , r = this._model.currentFieldSetId() === n.id;
                    this.showConfirmDialog(p.t(null, void 0, o(838537)).format({
                        name: n.title
                    })).then((e => {
                        e && this._model.saveFieldSet({
                            id: n.id,
                            delete: 1
                        }, "Delete field set").then(( () => {
                            this._model.removeFavoriteFieldSet(n.id),
                            r && this._model.applyFieldSet(this._model.defaultFieldSets[0].id, null, !0),
                            this._view.adjustToolbarWidth()
                        }
                        ))
                    }
                    )),
                    t.tvDropdown("close"),
                    e.stopPropagation()
                }
                )).on("click", ".js-set-star", (e => {
                    const t = so(e.currentTarget)
                      , o = t.parent().attr("data-set");
                    t.parent().toggleClass("tv-screener-popup__item--favorite"),
                    this._model.addFavoriteFieldSet(o),
                    e.stopPropagation(),
                    (0,
                    Xt.sendSnowPlowData)(new Jt("added",o))
                }
                )).on("click", ".js-set-star-active", (e => {
                    const t = so(e.currentTarget)
                      , o = t.parent().attr("data-set");
                    t.parent().toggleClass("tv-screener-popup__item--favorite"),
                    this._model.removeFavoriteFieldSet(o),
                    e.stopPropagation(),
                    (0,
                    Xt.sendSnowPlowData)(new Jt("removed",o))
                }
                )).on("click", ".js-set-rename", (e => {
                    const i = so(e.currentTarget).parent().attr("data-set")
                      , n = this._model.getFieldSetById(i);
                    this.showPromptDialog({
                        title: p.t(null, void 0, o(312286)),
                        label: p.t(null, void 0, o(576904))
                    }, n.title).then((e => {
                        e && e !== n.title && (this._model.saveFieldSet({
                            id: n.id,
                            title: e
                        }, "Rename field set"),
                        this._view.$fieldSetsButton.removeClass("tv-screener-toolbar__button--active js-no-pointer-events"),
                        this._model.currentFieldSetId() == n.id && this._view.$fieldSetsButton.text(e),
                        (0,
                        Xt.sendSnowPlowData)(new Zt))
                    }
                    )),
                    t.tvDropdown("close"),
                    e.stopPropagation()
                }
                )).on("click", ".js-save", (e => {
                    this.confirmAndSaveCurrentFieldSet().then((e => {
                        const t = this._model.getFieldSetById(e.id);
                        this._model.settingsSaver.setValue(this._model.settingKey + ".fieldSetId", e.id, {
                            forceFlush: !0
                        }),
                        this._view.$fieldSetsButton.text(t.title);
                        const o = this.$favoritesBar && this.$favoritesBar.find(`.js-favorite-item[data-set=${e.id}]`) || so();
                        o.size() && o.removeClass("tv-screener-toolbar__favorites-item--active")
                    }
                    )).catch((e => {
                        e && lo.logError(e)
                    }
                    )),
                    t.tvDropdown("close")
                }
                )),
                this._model.loadingComplete.subscribe(null, ( () => {
                    t.tvDropdown("enable")
                }
                ), !0),
                t.on("beforeOpenMenu", ( () => this.setFieldSetsPopupContent(i)))
            }
            setFieldSetsPopupContent(e) {
                e.empty(),
                this._bridge.onWidget || so(`<div class="tv-control-select__option-wrap tv-screener-popup__item tv-screener-popup__item--save js-save">${(0,
                jt.appendEllipsis)(p.t(null, void 0, o(819213)))}</div>`).prepend(so(o(470088)).attr({
                    class: "tv-screener-toolbar__button-icon",
                    width: "20",
                    height: "14",
                    style: "top: -2px; margin-right: 10px;"
                })).appendTo(e);
                const t = so('<div class="tv-screener-popup__item--presets"></div>').appendTo(e);
                this._model.settings.fieldSets.forEach((e => {
                    const i = so(`<div class="tv-dropdown-behavior__item">\n\t\t\t\t<div data-set="${e.id}"  class="tv-control-select__option-wrap tv-screener-popup__item tv-screener-popup__item--preset js-set" title="${(0,
                    Ot.clean)(e.title)}">\n\t\t\t\t\t<span class="js-field-set-name"></span>\n\t\t\t\t\t<span class="tv-screener-popup__item-delete js-set-delete" title="${p.t(null, void 0, o(14180))}">\n\t\t\t\t\t\t${o(711732)}\n\t\t\t\t\t</span>\n\t\t\t\t\t<span class="tv-screener-popup__item-rename js-set-rename" title="${p.t(null, void 0, o(606321))}">\n\t\t\t\t\t\t${o(663719)}\n\t\t\t\t\t</span>\n\t\t\t\t\t<span class="tv-screener-popup__item-star-active js-set-star-active" title="${p.t(null, void 0, o(685106))}">\n\t\t\t\t\t\t${o(372665)}\n\t\t\t\t\t</span>\n\t\t\t\t\t<span class="tv-screener-popup__item-star js-set-star" title="${p.t(null, void 0, o(869207))}">\n\t\t\t\t\t\t${o(959597)}\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t</div>`).appendTo(t);
                    i.find(".js-field-set-name").text(co(e.title)),
                    i.find(".js-set").toggleClass("tv-screener-popup__item--favorite", -1 !== this._model.favoriteFieldSets.indexOf(e.id))
                }
                )),
                this._model.defaultFieldSets.forEach((t => {
                    so(`<div class="tv-dropdown-behavior__item">\n\t\t\t\t<div data-set="${t.id}" class="tv-control-select__option-wrap tv-screener-popup__item js-set">\n\t\t\t\t\t${t.title}\n\t\t\t\t\t${this._bridge.onWidget ? "" : `<span class="tv-screener-popup__item-star-active js-set-star-active" title="${p.t(null, void 0, o(685106))}">\n\t\t\t\t\t\t\t${o(372665)}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span class="tv-screener-popup__item-star js-set-star" title="${p.t(null, void 0, o(869207))}">\n\t\t\t\t\t\t\t${o(959597)}\n\t\t\t\t\t\t</span>`}\n\t\t\t\t</div>\n\t\t\t</div>`).appendTo(e).find(".js-set").toggleClass("tv-screener-popup__item--favorite", -1 !== this._model.favoriteFieldSets.indexOf(t.id))
                }
                )),
                e.find(`[data-set="${this._model.currentFieldSetId()}"]`).addClass("tv-screener-popup__item--active js-item-active")
            }
            confirmAndSaveCurrentFieldSet() {
                const e = this._model.getFieldSetById(this._model.currentFieldSetId())
                  , t = this._view._table.fieldsOrder.slice(0);
                if (!Ze.type.disabled && Ze.type.checked) {
                    const e = t.indexOf("name");
                    -1 !== e && t.splice(e + 1, 0, "type")
                }
                if (!Ze.description.disabled && Ze.description.checked) {
                    const e = t.indexOf("name");
                    -1 !== e && t.splice(e + 1, 0, "description")
                }
                const i = JSON.stringify(t)
                  , n = e && !this._model.defaultFieldSets.find((t => t.id === e.id));
                return new Promise(( (t, r) => runOrSignIn(( () => this.showPromptDialog({
                    title: p.t(null, void 0, o(819213)),
                    label: p.t(null, void 0, o(576904))
                }, e && e.title || "").then((o => {
                    if (void 0 === o)
                        return void r();
                    const s = {
                        title: (0,
                        Ot.clean)(o),
                        content: i
                    };
                    let l = "Create field set";
                    n && e.title === o && (s.id = e.id,
                    l = "Update field set"),
                    this._model.saveFieldSet(s, l).then(t, r)
                }
                ))), {
                    source: "save columnset"
                })))
            }
            setFilterSetsPopup(e) {
                const t = this.setPopup(e, "tv-screener-toolbar__button-wrap", "tv-dropdown__body--position_right");
                t.tvDropdown("disable");
                const i = t.find(".js-content")
                  , n = this._bridge.$body;
                function r(e) {
                    if ((0,
                    Gt.isRtl)())
                        e.toggleClass("tv-dropdown__body--position_right", !0);
                    else {
                        const o = t.width()
                          , i = n.find(".tv-screener-toolbar").width()
                          , r = t.position().left
                          , s = i - (o + r);
                        e.toggleClass("tv-dropdown__body--position_right", r > s)
                    }
                }
                i.on("click", ".js-set", (e => {
                    const n = so(e.currentTarget);
                    i.find(".js-item-active").removeClass("tv-screener-popup__item--active js-item-active"),
                    n.addClass("tv-screener-popup__item--active js-item-active"),
                    this._view.$filterSetsButton.toggleClass("i-disabled", !0),
                    new Promise((e => {
                        this._bridge.onWidget ? e() : this._model.isFilterSetChanged() ? this.showConfirmDialog(p.t(null, void 0, o(484124))).then((t => {
                            t ? this.confirmAndSaveCurrentFilterSet().then(e, (t => {
                                t && lo.logError(t),
                                e()
                            }
                            )) : e()
                        }
                        )) : e()
                    }
                    )).then(( () => {
                        const e = co(n.attr("data-set"));
                        this._model.applyFilterSet(e),
                        this._model.trackEvent("Apply filter set " + e),
                        this._view.$filterSetsButton.toggleClass("i-disabled", !1),
                        (0,
                        Xt.sendSnowPlowData)(new Qt(e))
                    }
                    )),
                    setTimeout(( () => t.tvDropdown("close")), 200)
                }
                )).on("click", ".js-set-delete", (e => {
                    const i = so(e.currentTarget)
                      , n = this._model.getFilterSetById(i.parent().attr("data-set"))
                      , r = this._model.currentFilterSetId() === n.id;
                    this.showConfirmDialog(p.t(null, void 0, o(810292)).format({
                        name: n.title
                    })).then((e => {
                        e && this._model.saveFilterSet({
                            id: n.id,
                            delete: 1
                        }, "Delete filter set").then(( () => {
                            if (r) {
                                const e = this._model.defaultFilterSets.find((e => !0 !== e.disabled)) || this._model.defaultFilterSets[0];
                                this._model.applyFilterSet(e.id)
                            }
                        }
                        ))
                    }
                    )),
                    t.tvDropdown("close"),
                    e.stopPropagation()
                }
                )).on("click", ".js-set-rename", (e => {
                    const i = so(e.currentTarget).parent().attr("data-set")
                      , n = this._model.getFilterSetById(i);
                    this.showPromptDialog({
                        title: p.t(null, void 0, o(709186)),
                        label: p.t(null, void 0, o(723299))
                    }, n.title).then((e => {
                        e && e !== n.title && (this._model.saveFilterSet({
                            id: n.id,
                            title: e
                        }, "Rename filter set"),
                        this._view.$filterSetsButton.removeClass("tv-screener-toolbar__button--active js-no-pointer-events"),
                        this._model.currentFilterSetId() == n.id && this._view.$filterSetsButtonTitle.text(e),
                        (0,
                        Xt.sendSnowPlowData)(new eo))
                    }
                    )),
                    t.tvDropdown("close"),
                    e.stopPropagation()
                }
                )).on("click", ".js-save", (e => {
                    this.confirmAndSaveCurrentFilterSet().then((e => {
                        void 0 !== e.id ? (this._model.settingsSaver.setValue(this._model.settingKey + ".filterSetId", e.id, {
                            forceFlush: !0
                        }),
                        this._view.$filterSetsButtonTitle.text(this._model.getFilterSetById(e.id).title)) : lo.logError("Unable to get id of created set")
                    }
                    )).catch((e => {
                        e && lo.logError(e)
                    }
                    )),
                    t.tvDropdown("close")
                }
                )),
                this.$filterSetsPopupContent = i,
                this._bridge.width ? (r(i.parent().parent()),
                this._bridge.width.subscribe(( () => {
                    r(i.parent().parent())
                }
                ))) : so(window).on("resize", ( () => {
                    r(i.parent().parent())
                }
                )),
                this._model.loadingComplete.subscribe(null, ( () => {
                    t.tvDropdown("enable")
                }
                ), !0),
                t.on("beforeOpenMenu", ( () => {
                    this.setFilterSetsPopupContent()
                }
                ))
            }
            setFilterSetsPopupContent() {
                const e = this.$filterSetsPopupContent;
                e.empty(),
                this._bridge.onWidget || so(`<div class="tv-control-select__option-wrap tv-screener-popup__item tv-screener-popup__item--save tv-screener-popup__item--space-left js-save">${(0,
                jt.appendEllipsis)(p.t(null, void 0, o(432248)))}</div>`).prepend(so(o(470088)).attr({
                    class: "tv-screener-toolbar__button-icon",
                    width: "20",
                    height: "14",
                    style: "top: -2px; margin-right: 10px;"
                })).appendTo(e);
                const t = so('<div class="tv-screener-popup__item--presets"></div>').appendTo(e);
                this._model.settings.filterSets.forEach((e => {
                    const i = so(`<div class="tv-dropdown-behavior__item">\n\t\t\t\t<div data-set="${e.id}" class="tv-control-select__option-wrap tv-screener-popup__item tv-screener-popup__item--preset tv-screener-popup__item--space-left js-set">\n\t\t\t\t\t<span class="js-filter-set-name"></span>\n\t\t\t\t\t<span class="tv-screener-popup__item-rename js-set-rename" title="${p.t(null, void 0, o(606321))}">\n\t\t\t\t\t\t${o(663719)}\n\t\t\t\t\t</span>\n\t\t\t\t\t<span class="tv-screener-popup__item-delete tv-screener-popup__item-delete--right js-set-delete" title="${p.t(null, void 0, o(14180))}">\n\t\t\t\t\t\t${o(711732)}\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t</div>`);
                    i.find(".js-filter-set-name").text(co(e.title)),
                    i.appendTo(t)
                }
                )),
                this._model.defaultFilterSets.forEach((t => {
                    t.disabled || so(`<div class="tv-dropdown-behavior__item">\n\t\t\t\t<div data-set="${t.id}" class="tv-control-select__option-wrap tv-screener-popup__item tv-screener-popup__item--space-left js-set">\n\t\t\t\t\t${t.title}\n\t\t\t\t</div>\n\t\t\t</div>`).appendTo(e)
                }
                )),
                e.find(`[data-set="${this._model.currentFilterSetId()}"]`).addClass("tv-screener-popup__item--active js-item-active")
            }
            confirmAndSaveCurrentFilterSet() {
                const e = this._model.getFilterSetById(this._model.currentFilterSetId())
                  , t = JSON.stringify(this._model.currentFilterState())
                  , i = e && !this._model.defaultFilterSets.find((t => t.id === e.id));
                return new Promise(( (n, r) => runOrSignIn(( () => this.showPromptDialog({
                    title: p.t(null, void 0, o(432248)),
                    label: p.t(null, void 0, o(723299))
                }, e.title).then((o => {
                    if (void 0 === o)
                        return void r();
                    const s = {
                        title: (0,
                        Ot.clean)(o),
                        content: t
                    };
                    let l = "Create filter set";
                    i && e.title === o && (s.id = e.id,
                    l = "Update filter set"),
                    this._model.saveFilterSet(s, l).then(n, r)
                }
                ))), {
                    source: "save screen"
                })))
            }
            setHiddenFavoritesPopup(e, t, o, i) {
                e.addClass("tv-dropdown-behavior__button");
                const n = so('<div class="tv-screener-toolbar__favorites-more-wrap">');
                n.insertAfter(e).append(e);
                const r = so('<div class="tv-dropdown__body tv-dropdown__body--over-trigger tv-dropdown-behavior__body tv-dropdown__body--position_right i-hidden">').appendTo(n)
                  , s = so('<div class="tv-dropdown-behavior__scroll js-container">').appendTo(r)
                  , l = so('<div class="tv-screener-popup__items-wrap tv-dropdown-behavior__inscroll js-content">').appendTo(s);
                l.on("click", ".js-set", (e => {
                    const t = so(e.currentTarget).attr("data-set");
                    i(t),
                    (0,
                    Xt.sendSnowPlowData)(new Yt("columnset_favorites_picker",t)),
                    n.tvDropdown("close")
                }
                ));
                const a = () => {
                    l.empty(),
                    t().forEach((e => {
                        so(`<div class="tv-dropdown-behavior__item">\n\t\t\t\t\t<div data-set="${e.id}" class="tv-control-select__option-wrap tv-screener-popup__item js-set">\n\t\t\t\t\t\t${(0,
                        Ot.clean)(e.title)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>`).toggleClass("tv-screener-popup__item--active", o(e.id)).appendTo(l)
                    }
                    )),
                    n.tvDropdown("updateScroll")
                }
                ;
                return n.on("beforeOpenMenu", ( () => {
                    a(),
                    s.css("maxHeight", so(window).height() - e.offset().top + so(window).scrollTop() - 45)
                }
                )).on("resetContent", ( () => a())).on("forceClose", ( () => n.tvDropdown("close"))).tvDropdown({
                    scroll: !0,
                    noAnimation: !0
                })
            }
            setSelectPopup(e, t) {
                const {wrapClass: o, buttonClass: i, dropdownClass: n} = e
                  , {buttonTitle: r} = t
                  , s = so(`<div class="${o} tv-dropdown tv-dropdown--inline tv-dropdown-behavior">`)
                  , l = so(`<div class="tv-dropdown__button tv-dropdown-behavior__button ${i}" title="${r}">`).appendTo(s)
                  , a = so(`<div class="tv-dropdown__body tv-dropdown-behavior__body tv-dropdown__body--over-trigger tv-dropdown__body--position_right i-hidden ${n}">`).appendTo(s)
                  , c = so('<div class="tv-dropdown-behavior__scroll js-container">').appendTo(a)
                  , d = so('<div class="tv-dropdown-behavior__inscroll js-content">').appendTo(c);
                return s.on("beforeOpenMenu", ( () => {
                    c.css("maxHeight", so(window).height() - l.offset().top + so(window).scrollTop() - 45)
                }
                )).on("forceClose", ( () => s.tvDropdown("close"))).tvDropdown({
                    scroll: !0,
                    $wrap: l,
                    $body: a,
                    noAnimation: !0
                }),
                {
                    $wrap: s,
                    $button: l,
                    $dropdownBody: a,
                    $dropdownContent: d
                }
            }
            setMarketsList(e) {
                this._markets = e
            }
            updateRefreshIntervalsPopupContent() {
                if (!this.$filterRefreshIntervalsPopup || !this.$filterRefreshIntervalsPopup.length)
                    return;
                this.$filterRefreshIntervalsPopup.empty();
                const e = this._view.refreshIntervals;
                for (let t = 0; t < e.length; ++t) {
                    const i = e[t];
                    let n = null;
                    if (-1 === i)
                        n = p.t(null, void 0, o(642668));
                    else {
                        const e = i / 60 | 0;
                        n = 1 === e ? p.t(null, void 0, o(857257)) : e < 1 ? this._model.isFastRefresh ? p.t(null, void 0, o(892276)) : p.t(null, {
                            plural: "Refresh every {0} seconds",
                            count: i
                        }, o(881467)).format(i) : p.t(null, {
                            plural: "Refresh every {0} minutes",
                            count: e
                        }, o(386883)).format(e)
                    }
                    so(`<div class="tv-dropdown-behavior__item">\n\t\t\t\t<label class="tv-control-select__option-wrap tv-screener-popup__item js-interval">\n\t\t\t\t\t<span class="tv-control-radio">\n\t\t\t\t\t\t<input type="radio" name="interval" value="${i}" class="tv-control-radio__input">\n\t\t\t\t\t\t<span class="tv-control-radio__box"></span>\n\t\t\t\t\t</span>\n\t\t\t\t\t<span class="tv-control-radio__label tv-screener-popup__refresh-interval-label">${n}</span>\n\t\t\t\t</label>\n\t\t\t</div>`).appendTo(this.$filterRefreshIntervalsPopup)
                }
            }
            setRefreshIntervalsPopup(e) {
                const t = this.setPopup(e, "tv-screener-toolbar__button-wrap", "tv-screener-popup__refresh-intervals");
                e.toggleClass("js-prevent-dropdown", !window.is_authenticated),
                e.on("click", ( () => runOrSignIn(( () => {}
                ), {
                    source: "Screener refresh mode button"
                }))),
                window.loginStateChange.subscribe(null, ( () => {
                    e.toggleClass("js-prevent-dropdown", !window.is_authenticated)
                }
                ));
                const o = t.find(".js-content");
                this.$filterRefreshIntervalsPopup = o,
                this.updateRefreshIntervalsPopupContent(),
                t.on("beforeOpenMenu", ( () => {
                    o.find(`input[value=${this._model.refreshInterval}]`).prop("checked", !0)
                }
                )),
                o.on("click", ".js-interval", (e => {
                    e.preventDefault();
                    const i = +so(e.currentTarget).find("input").val();
                    setTimeout(( () => t.tvDropdown("close")), It.dur / 2),
                    i !== this._model.refreshInterval && (this._model.isFastRefresh ? (o.find(`input[value=${i}]`).prop("checked", !0),
                    this._model.refreshInterval = i) : (0,
                    Rt.runOrGoPro)(( () => {
                        o.find(`input[value=${i}]`).prop("checked", !0),
                        this._model.refreshInterval = i
                    }
                    ), Ht.ProductFeaturesEnum.SCREENER_AUTO_REFRESH, {
                        feature: "screenerAutoRefresh"
                    }, {
                        value: -1 === i
                    }),
                    (0,
                    Xt.sendSnowPlowData)(new ro(i)))
                }
                ))
            }
            setSelectIntervalContent(e, t, o= () => {}
            ) {
                t.empty();
                const i = this._model.selectedIntervalId;
                for (const e of D)
                    so(`<div class="tv-dropdown-behavior__item">\n\t\t\t\t<div data-interval="${e.id}" title="${e.title}" class="tv-control-select__option-wrap tv-screener-popup__item js-select-interval ${e.id === i ? "tv-screener-popup__select-interval-active" : ""}">\n\t\t\t\t\t${e.shortTitle}\n\t\t\t\t</div>\n\t\t\t</div>`).appendTo(t);
                e.on("afterOpenMenu", ( () => {
                    t.on("click", ".js-select-interval", (i => {
                        i.preventDefault();
                        const n = this._model.selectedIntervalId;
                        let r = L(so(i.currentTarget).data("interval"));
                        if (!r || n === r.id)
                            return;
                        const s = this._model.eodRestriction.value();
                        (0,
                        Rt.runOrGoPro)(( () => {
                            s !== Pt.None && "1d" !== r.id ? ((0,
                            Wt.createGoProDialog)({
                                feature: "screenerIntervalsEod"
                            }),
                            r = L("1d")) : (t.find(".tv-screener-popup__select-interval-active").removeClass("tv-screener-popup__select-interval-active"),
                            t.find(`[data-interval='${r.id}']`).addClass("tv-screener-popup__select-interval-active"),
                            o(r))
                        }
                        ), Ht.ProductFeaturesEnum.SCREENER_INTERVALS, {
                            feature: "screenerIntervals"
                        }, {
                            interval: r.id
                        }),
                        setTimeout(( () => {
                            e.tvDropdown("close"),
                            t.off("click")
                        }
                        ), It.dur / 2),
                        (0,
                        Xt.sendSnowPlowData)(new Kt(r.id))
                    }
                    ))
                }
                ))
            }
        }
        function co(e) {
            return (0,
            Ot.clean)(e, !0)
        }
        var uo = o(920057)
          , ho = o(650279);
        o(533659),
        o(703002);
        class po {
            constructor(e, t) {
                this.event = "open_filters_dialog",
                this.location = "toolbar",
                this.value = "",
                this.source = e,
                this.state = t > 0 ? "with_counter" : "without_counter"
            }
        }
        class mo {
            constructor(e) {
                this.event = "change_filter_dialog_tab",
                this.source = "filter_dialog_tab_button",
                this.location = "filter_dialog",
                this.value = "",
                this.state = e
            }
        }
        class _o {
            constructor() {
                this.event = "filter_dialog_search_input_click",
                this.source = "filter_dialog_search_input",
                this.location = "filter_dialog",
                this.state = "user_clicked",
                this.value = ""
            }
        }
        class go {
            constructor(e) {
                this.event = "filter_dialog_search_no_terms_found",
                this.source = "filter_dialog_search_input",
                this.location = "filter_dialog",
                this.state = "empty_search_result",
                this.value = "",
                this.value = e
            }
        }
        class vo {
            constructor(e) {
                this.event = "filter_dialog_applied_filters",
                this.source = "unknown",
                this.location = "filter_dialog",
                this.state = to.UserActionState.ApplyFilters,
                this.value = e
            }
        }
        class fo {
            constructor(e, t, o, i) {
                this.event = "filter_use",
                this.value = e,
                this.state = t,
                this.source = o,
                this.location = i
            }
        }
        class yo {
            constructor(e) {
                this.event = "apply_flagged_filter",
                this.source = "flagged_marker",
                this.location = "header",
                this.state = "enabled",
                this.value = e
            }
        }
        var bo = o(779893);
        const wo = {
            filtersSearch: `<div class="tv-screener-search js-screener-search">\n\t\t<input type="text" class="tv-screener-search__input js-search-input" placeholder="${p.t(null, void 0, o(735232))}">\n\t\t${o(326529)}\n\t\t<div class="tv-screener-search__reset js-search-reset">\n\t\t\t<span class="tv-screener-search__reset-icon">${o(966631)}</span>\n\t\t\t${p.t(null, void 0, o(591140))}\n\t\t</div>\n\t</div>`,
            filtersBody: '<div class="tv-screener-dialog js-screener-dialog">\n\t\t<div class="tv-screener-dialog__wrap js-filters-wrap"></div>\n\t</div>'
        };
        var So = [p.t(null, void 0, o(580066)), p.t(null, void 0, o(279304)), p.t(null, void 0, o(856135)), p.t(null, {
            context: "study"
        }, o(786575))];
        class Co {
            constructor(e, t, o) {
                this._model = e,
                this._view = t,
                this._bridge = o,
                this._dialogTitle = "screener_filters",
                this._categories = null
            }
            showFiltersDialog(e) {
                return Promise.all([o.e(57335), o.e(41392), o.e(71761), o.e(64935), o.e(71353), o.e(30938), o.e(37384)]).then(o.bind(o, 858510)).then(( ({createTabbedDialog: t}) => {
                    this._categories = this._getCategories();
                    const o = this._categories.map((e => ({
                        name: So[e]
                    })))
                      , {dialog: i, tabs: n} = t({
                        tabs: o,
                        additionalHeaderContent: wo.filtersSearch,
                        width: Math.min(1400, Math.max(646, bo(window).width() - 200)),
                        height: Math.max(450, bo(window).height() - 200),
                        contentAddClass: "js-dialog-content",
                        doNotCreatePages: !0,
                        destroyOnClose: !0
                    })
                      , r = i.$content.find(".js-dialog-content")
                      , s = i.$content.find(".js-screener-search");
                    this.$fieldSearchInput = s.find(".js-search-input"),
                    this.$fieldSearchInput.on("input", (0,
                    uo.default)((e => {
                        this._view.updateFilterSearch(),
                        i.updateScroll()
                    }
                    ), 100, {
                        leading: !1,
                        trailing: !0
                    })),
                    this.$fieldSearchInput.on("click", ( () => {
                        (0,
                        Xt.sendSnowPlowData)(new _o)
                    }
                    ));
                    s.find(".js-search-reset").on("click", (e => this._view.resetAllFilters()));
                    const l = () => {
                        const e = this.$filtersPopup.get(0).clientWidth >= 1292;
                        e && !this._$filtersWrap.is(".js-2col") ? this._$filtersWrap.addClass("js-2col tv-screener-dialog__wrap--2col") : !e && this._$filtersWrap.is(".js-2col") && this._$filtersWrap.removeClass("js-2col tv-screener-dialog__wrap--2col")
                    }
                    ;
                    this.$filtersPopup = bo(wo.filtersBody),
                    this._$filtersWrap = this.$filtersPopup.find(".js-filters-wrap");
                    const a = [];
                    this._view.sortedFields.forEach((e => {
                        Ze[e] && !Ze[e].disabled && Ze[e].control && a.push(this._view.addFieldFilter(e, this._$filtersWrap))
                    }
                    )),
                    Promise.all(a).then(( () => this._$filtersWrap.find(".js-wrap").each(( (e, t) => {
                        this._view.initFilterHandlers(bo(t))
                    }
                    )))),
                    this.$filtersPopup.appendTo(r),
                    e && this._model.settingsSaver.setValue(this._model.settingKey + ".filters.tab", 0),
                    n.tabChanged.subscribe(null, (e => {
                        this.filtersDialogTabChanged(e),
                        i.scrollToStart(),
                        0 !== e && (0,
                        Xt.sendSnowPlowData)(new mo(e))
                    }
                    )),
                    this._view.$filtersButton.addClass("js-no-pointer-events"),
                    i.on("scroll", ( () => {
                        i.$content.find(".js-dropdown-toggle.i-opened").trigger("resetPosition", null, r.parent())
                    }
                    ));
                    const c = this._getActiveFilters(!1).sort();
                    i.on("destroy", (e => {
                        const t = this._getActiveFilters(!1).sort();
                        for (const e in Ze)
                            "condition" === Ze[e].control && Ze[e].value && (Re(Ze[e].value.value) || Re(Ze[e].value.operator)) && (Ze[e].value = null);
                        bo(".tv-screener-dialog__filter-field").removeClass("js-hidden"),
                        this.$fieldSearchInput.val(""),
                        this.$filtersPopup.remove(),
                        delete this.$filtersPopup,
                        this._view.$filtersButton.removeClass("js-no-pointer-events"),
                        delete this._dialog,
                        bo(window).off("resize", l),
                        (0,
                        ho.default)(c, t) || (0,
                        Xt.sendSnowPlowData)(new vo(t.join(", ")))
                    }
                    )),
                    this._model.trackEvent("Open filters dialog"),
                    i.open(),
                    bo(window).on("resize", l),
                    l(),
                    this.$dialogContainer = i.$content,
                    this._dialog = i
                }
                ))
            }
            filtersDialogTabChanged(e) {
                const t = this._categories.map((e => "tv-screener-dialog--cat" + e)).join(" ");
                this.$filtersPopup.removeClass(t).addClass("tv-screener-dialog--cat" + this._categories[e]).scrollTop(0)
            }
            destroy() {
                this._dialog && (this._dialog.close(),
                delete this._dialog)
            }
            _getCategories() {
                const e = [0];
                return this._view.sortedFields.forEach((t => {
                    Ze[t] && !Ze[t].disabled && Ze[t].control && (e.includes(Ze[t].category) || e.push(Ze[t].category))
                }
                )),
                e.sort()
            }
            _getDefaultFiltersForCurrentFilterSet() {
                const {defaultFilterSets: e} = this._model
                  , t = this._model.currentFilterSetId();
                return Object.values(e).filter((e => e.id === t))[0].content.filters
            }
            _fieldValueIsEqualToDefaultFilter(e) {
                const t = this._getDefaultFiltersForCurrentFilterSet()[e]
                  , o = Ze[e].value;
                switch (Ze[e].control) {
                case "condition":
                    return o.operator === t.operator && o.value.toString() === t.value.toString();
                case "range":
                case "select":
                    return o.sort().toString() === t.sort().toString();
                default:
                    return Ze[e].value === o
                }
            }
            _getActiveFilters(e=!0) {
                const t = [];
                for (const o in Ze)
                    if (Ze[o].value) {
                        if ("condition" === Ze[o].control && (Re(Ze[o].value.operator) || Re(Ze[o].value.value)))
                            continue;
                        e ? t.push(vt(Ze[o])) : t.push(o)
                    }
                return t
            }
        }
        var ko = o(941285)
          , xo = o(927301)
          , Mo = o(763532);
        class Eo {
            constructor() {
                this._handlers = []
            }
            registerHandlers(e) {
                this._handlers.push(e)
            }
            beforeAppendSymbol(e, t) {
                this._handlers.forEach((o => {
                    o.beforeAppendSymbol && o.beforeAppendSymbol(e, t)
                }
                ))
            }
            beforeAppendContextMenuItems(e) {
                return this._handlers.reduce(( (t, o) => o.beforeAppendContextMenuItems ? t.concat(o.beforeAppendContextMenuItems(e)) : t), [])
            }
            afterSymbolConfirm(e, t) {
                this._handlers.forEach((o => {
                    o.afterSymbolConfirm && o.afterSymbolConfirm(e, t)
                }
                ))
            }
            beforeAppendSymbolsHeader(e) {
                this._handlers.forEach((t => {
                    t.beforeAppendSymbolsHeader && t.beforeAppendSymbolsHeader(e)
                }
                ))
            }
        }
        var Fo = o(857769)
          , To = o(251954)
          , Ao = o(357517);
        class Io {
            constructor() {
                this._retries = 5,
                this._cache = null,
                this._tryLoad = (e, t) => {
                    this._retries = this._retries - 1;
                    this._startLoading(e).then(t, 0 !== this._retries ? o => {
                        (0,
                        Ao.isAbortError)(o) || setTimeout(( () => this._tryLoad(e, t)), 3e3)
                    }
                    : void 0)
                }
            }
            load(e) {
                return this._cache || (this._cache = new Promise(this._tryLoad.bind(this, e ?? null))),
                this._cache
            }
        }
        class Do extends Io {
            _startLoading() {
                return Promise.all([o.e(11553), o.e(42377)]).then(o.bind(o, 825806)).then((e => e.HammerJS))
            }
        }
        var Po = o(50959)
          , Lo = o(632227)
          , $o = o(497754)
          , Bo = o.n($o)
          , Ro = o(169986)
          , Oo = o(45554)
          , No = o(650133);
        function Wo(e) {
            const t = Object.keys(e.modes)
              , o = Object.values(e.modes)
              , [i,n] = Po.useState(t[0]);
            return Po.createElement(Ro.CustomBehaviourContext.Provider, {
                value: window.TradingView.onChartPage ? Ro.presetPlatform : Ro.presetDefault
            }, Po.createElement(Vo, {
                isActive: i === t[0],
                title: o[0]
            }), Po.createElement("span", {
                className: No.switcherContainer
            }, Po.createElement(Oo.Switch, {
                onChange: function(o) {
                    const i = o.currentTarget.checked ? t[1] : t[0];
                    n(i),
                    e.onChange(i)
                },
                checked: i === t[1]
            })), Po.createElement(Vo, {
                isActive: i === t[1],
                title: o[1]
            }))
        }
        function Vo(e) {
            return Po.createElement("span", {
                className: Bo()(No.modeTitle, e.isActive && No.modeTitleActive)
            }, e.title)
        }
        var qo = o(118821)
          , zo = o(43681)
          , Uo = o(389401)
          , jo = o(400236)
          , Ho = o(79205)
          , Go = o(58407)
          , Xo = o(444530);
        function Ko(e) {
            const {children: t, className: o, onResize: i, onClick: n} = e
              , r = (0,
            Xo.useResizeObserver)(( ([e]) => {
                i(e.target.getBoundingClientRect())
            }
            ));
            return Po.createElement("div", {
                ref: r,
                className: o,
                onClick: n
            }, t)
        }
        var Yo = o(690863);
        class Jo extends Po.PureComponent {
            constructor(e) {
                super(e),
                this._getDropdownHeight = () => {
                    if (!this._dropdownParent)
                        return;
                    const e = window.innerHeight - this._dropdownParent.getBoundingClientRect().bottom - 20;
                    return e && e < 50 ? void 0 : e
                }
                ,
                this._getFirstHiddenItemIndex = () => {
                    let e;
                    if (this.state.availableWidth && !this._itemSizes.includes(null)) {
                        let t = 0;
                        for (e = 0; e < this.props.items.length; e++) {
                            const o = t + (this._itemSizes[e] || 0);
                            if (!((e === this.props.items.length - 1 ? o : o + 41) < this.state.availableWidth))
                                break;
                            t = o
                        }
                    } else
                        e = this.state.availableWidth ? this.props.items.length : 0;
                    return e
                }
                ,
                this._onElementResize = ([e]) => {
                    this.setState({
                        availableWidth: e.contentRect.width,
                        isOpened: !1
                    })
                }
                ,
                this._onSelect = e => {
                    this.props.onSelect && this.props.onSelect(e),
                    this.setState({
                        activeItem: e,
                        isOpened: !1
                    })
                }
                ,
                this._onDropdownSelect = (e, t) => {
                    this.props.onSelect && this.props.onSelect(t.actualIndex),
                    this.setState({
                        activeItem: t.actualIndex,
                        isOpened: !1
                    })
                }
                ,
                this._onOutsideClick = e => {
                    this.state.isOpened && (this.state.isOpened && (e.preventDefault(),
                    e.stopPropagation()),
                    this.setState({
                        isOpened: !1
                    }))
                }
                ,
                this._onDropdownItemClick = () => {
                    this.setState({
                        isOpened: !this.state.isOpened
                    })
                }
                ,
                this._onItemResize = (e, t) => {
                    this._itemSizes[e] = t.width,
                    this._itemSizes.includes(null) || this.forceUpdate()
                }
                ,
                this._itemSizes = this.props.items.map((e => null)),
                this.state = {
                    availableWidth: 0,
                    activeItem: this.props.activeItem || 0,
                    isOpened: !1
                }
            }
            render() {
                const e = this._getFirstHiddenItemIndex()
                  , t = this.props.items.slice(0, e)
                  , o = this.props.items.slice(e)
                  , i = t.map(( (e, t) => {
                    const o = this.state.activeItem === t
                      , i = $o(qo.itemContent, {
                        [qo.active]: o
                    });
                    return Po.createElement(Ko, {
                        key: e.title,
                        className: $o(qo.item, {
                            [qo.active]: o
                        }),
                        onClick: this._onSelect.bind(this, t),
                        onResize: this._onItemResize.bind(this, t)
                    }, Po.createElement("div", {
                        className: i
                    }, e.title))
                }
                ))
                  , n = o.map(( (e, o) => ({
                    elem: e.title,
                    actualIndex: o + t.length
                })))
                  , r = this.state.activeItem - e
                  , s = r >= 0
                  , l = Po.createElement(Go.OutsideEvent, {
                    handler: this._onOutsideClick,
                    click: !0
                }, (e => Po.createElement("div", {
                    ref: e => e && (this._dropdownParent = Lo.findDOMNode(e))
                }, Po.createElement("div", {
                    className: $o(qo.item, {
                        [qo.active]: s
                    }),
                    ref: e,
                    onClick: this._onDropdownItemClick
                }, Po.createElement("div", {
                    className: $o(qo.itemContent, qo.dropdownItem, {
                        [qo.active]: s
                    })
                }, Po.createElement(Ho.Icon, {
                    className: $o(qo.dropdownIcon, {
                        [qo.active]: this.state.isOpened
                    }),
                    icon: Yo
                }), Po.createElement(jo.DropdownList, {
                    isOpened: this.state.isOpened,
                    items: n,
                    selected: s ? r : void 0,
                    onSelect: this._onDropdownSelect,
                    top: 27,
                    right: 0,
                    itemsClassName: $o(zo.bluishItem, qo.dropdownListItem),
                    selectedClassName: this.props.selectedItemClassName,
                    maxHeight: this._getDropdownHeight()
                }))))));
                return Po.createElement(Uo.Measure, {
                    onResize: this._onElementResize
                }, (e => Po.createElement("div", {
                    className: $o(qo.elementWrap, this.props.className),
                    ref: e
                }, Po.createElement("div", {
                    className: qo.itemsWrap
                }, i, o.length ? l : void 0))))
            }
        }
        function Zo(e, t) {
            Lo.render(Po.createElement(Jo, {
                ...t
            }), e)
        }
        const Qo = ["country", "sector", "industry", "description"]
          , ei = ["close", "bid", "ask", "candlestick"]
          , ti = ["Recommend.All", "Recommend.MA", "Recommend.Other"];
        function oi(e, t) {
            return e.indexOf(t)
        }
        function ii(e) {
            return e.map((e => (0,
            Mo.escapeCSVValue)(e))).join(",")
        }
        function ni(e) {
            return e.map(( (e, t) => Boolean(e) ? t : void 0)).filter(Boolean)
        }
        function ri(e) {
            return ke.find((t => t.key === e))
        }
        var si = o(688706)
          , li = o(608571)
          , ai = o(920389)
          , ci = o(508822);
        class di {
            constructor() {
                this.event = "export_screener_data",
                this.source = "export_button",
                this.location = "toolbar",
                this.state = "",
                this.value = ""
            }
        }
        class ui {
            constructor(e, t) {
                this.event = "change_forex_group",
                this.source = "forex_group_selector",
                this.location = "toolbar",
                this.state = e,
                this.value = t
            }
        }
        var hi = o(531327);
        function pi(e) {
            return Promise.all([o.e(96266), o.e(18883), o.e(32937), o.e(46195), o.e(92537), o.e(15371), o.e(61171), o.e(25563), o.e(97540), o.e(72232), o.e(90579), o.e(93015), o.e(44535), o.e(78257), o.e(10445), o.e(24543), o.e(52507), o.e(48064), o.e(47712), o.e(89077), o.e(62526), o.e(46356), o.e(67911)]).then(o.bind(o, 311132)).then((t => t.showScreenerMarketDialog(e)))
        }
        const mi = new Set(["dps_common_stock_prim_issue_yoy_growth_fy", "earnings_per_share_diluted_qoq_growth_fq", "earnings_per_share_diluted_yoy_growth_fq", "earnings_per_share_diluted_yoy_growth_fy", "earnings_per_share_diluted_yoy_growth_ttm", "ebitda_qoq_growth_fq", "ebitda_yoy_growth_fq", "ebitda_yoy_growth_fy", "ebitda_yoy_growth_ttm", "free_cash_flow_margin_fy", "free_cash_flow_margin_ttm", "free_cash_flow_qoq_growth_fq", "free_cash_flow_yoy_growth_fq", "free_cash_flow_yoy_growth_fy", "free_cash_flow_yoy_growth_ttm", "gross_profit_margin_fy", "gross_profit_qoq_growth_fq", "gross_profit_yoy_growth_fq", "gross_profit_yoy_growth_fy", "gross_profit_yoy_growth_ttm", "net_income_bef_disc_oper_margin_fy", "net_income_qoq_growth_fq", "net_income_yoy_growth_fq", "net_income_yoy_growth_fy", "net_income_yoy_growth_ttm", "oper_income_margin_fy", "total_assets_qoq_growth_fq", "total_assets_yoy_growth_fq", "total_assets_yoy_growth_fy", "total_debt_qoq_growth_fq", "total_debt_yoy_growth_fq", "total_debt_yoy_growth_fy", "total_revenue_qoq_growth_fq", "total_revenue_yoy_growth_fq", "total_revenue_yoy_growth_fy", "total_revenue_yoy_growth_ttm"]);
        function _i(e, t) {
            return !!t.title && (t.title.toLowerCase() !== t.shortTitle?.toLowerCase() || function(e) {
                return mi.has(e)
            }(e))
        }
        var gi = o(993815)
          , vi = o(779e3);
        function fi(e, t) {
            const o = setInterval(( () => {
                const i = document.querySelector(e);
                if (i) {
                    clearInterval(o);
                    new ResizeObserver(t).observe(i),
                    t()
                }
            }
            ), 20)
        }
        var yi = o(586240)
          , bi = o(779893);
        const wi = parseInt(yi["size-sticky-symbol-header-height"]);
        function Si(e) {
            const {$toolbar: t} = e
              , o = t.outerHeight()
              , i = e.table.$stickyHeader
              , n = document.querySelector(".js-sticky-symbol-header-container") ? 64 + wi : 64;
            function r(t) {
                const r = t || bi(document).scrollTop()
                  , {isSticky: s, upperScrollLimit: l, bottomScrollLimit: a} = function(t) {
                    const r = e.table._$emptyMessage ? e.table._$emptyMessage.outerHeight() : 0
                      , s = e.$content.offset().top + e.$content.outerHeight()
                      , l = r || 48
                      , a = e.$content.offset().top - n - o
                      , c = s - l - n - o - i.outerHeight();
                    return {
                        isSticky: t >= a && t <= c,
                        bottomScrollLimit: c,
                        upperScrollLimit: a
                    }
                }(r);
                if (s)
                    return "sticky";
                return Math.abs(a - l) < 20 || r < l ? "absolute" : "bottom"
            }
            function s() {
                const o = r()
                  , n = (0,
                Gt.isRtl)() ? e.$content.offset().left - bi(window).scrollLeft() : e.$content.offset().left
                  , s = e.$content.width()
                  , l = bi(e.table._table).width()
                  , a = function(t) {
                    const o = $t.breakpoints.tablet
                      , i = r();
                    if (bi(window).width() > o)
                        return "absolute" === i ? {
                            left: "",
                            right: ""
                        } : {
                            left: t,
                            right: ""
                        };
                    const n = e.$content.scrollLeft();
                    if ((0,
                    Gt.isRtl)()) {
                        const t = e._getResizerBridgeWidth();
                        return "absolute" === i ? {
                            left: "",
                            right: n
                        } : {
                            left: "",
                            right: t + n
                        }
                    }
                    return {
                        left: t - n,
                        right: ""
                    }
                }(n)
                  , c = {
                    left: n,
                    width: s
                }
                  , d = {
                    ...a,
                    width: l
                };
                if (t.css({
                    left: "",
                    right: ""
                }),
                i.css({
                    left: "",
                    right: ""
                }),
                "absolute" === o)
                    return t.css({
                        width: s
                    }),
                    void i.css(d);
                t.css(c),
                i.css(d)
            }
            function l(e) {
                t.css({
                    top: e
                });
                const n = e + o;
                i.css({
                    top: n
                })
            }
            const a = function() {
                let e = bi(document).scrollTop()
                  , a = r(e);
                return () => {
                    const c = bi(document).scrollTop()
                      , u = r(c);
                    if ("bottom" === u) {
                        d(u);
                        return l(e + n - c),
                        void (a = "bottom")
                    }
                    if (a !== u) {
                        if (d(u),
                        "absolute" === u)
                            return t.css({
                                top: 0
                            }),
                            i.css({
                                top: o
                            }),
                            s(),
                            void (a = "absolute");
                        "sticky" === u && (s(),
                        l(n),
                        e = c,
                        a = "sticky")
                    }
                }
            }();
            function c() {
                s(),
                a()
            }
            function d(e) {
                const o = "absolute" === e;
                t.toggleClass("tv-screener-toolbar--markets_absolute", o),
                i.toggleClass("tv-screener-sticky-header-wrapper--markets_absolute", o),
                t.toggleClass("tv-screener-toolbar--markets_sticky", !o),
                i.toggleClass("tv-screener-sticky-header-wrapper--standalone_sticky", !0),
                i.toggleClass("tv-screener-sticky-header-wrapper--markets_sticky", !o)
            }
            const u = function() {
                let e;
                return () => {
                    clearTimeout(e),
                    e = setTimeout(c, 0)
                }
            }();
            document.addEventListener("scroll", (function() {
                a(),
                (0,
                Gt.isRtl)() && s()
            }
            ), {
                passive: !0
            }),
            e.$content[0].addEventListener("scroll", s),
            window.addEventListener("resize", u),
            fi(".widgetbar-wrap", s),
            fi(".tv-screener-table", s),
            d(r()),
            c()
        }
        var Ci = o(778785);
        function ki(e) {
            const {$before: t=null, $appendTo: o=null, $dropdownContainer: i=null, beforeMakingSelectPopup: n= () => {}
            , makeSelectPopup: r, afterMakingSelectPopup: s= () => {}
            , afterSelectPopupAppend: l= () => {}
            } = e
              , a = {
                $dropdownContainer: i
            };
            n();
            const {$wrap: c, $button: d, $dropdownContent: u} = r(a);
            return s(c, d, u),
            (t || o) && (t ? c.insertBefore(t) : c.appendTo(o),
            l(c, d, u)),
            d
        }
        var xi, Mi = o(137674), Ei = o(212363);
        !function(e) {
            e[e.Header = 0] = "Header",
            e[e.Table = 1] = "Table"
        }(xi || (xi = {}));
        const Fi = {
            [xi.Header]: {
                description: "Open header context menu",
                prepend: !1
            },
            [xi.Table]: {
                description: "Open context menu",
                prepend: !0
            }
        };
        function Ti(e, t, i) {
            return async function() {
                const [{Action: e},{AddToWatchlistAction: t}] = await Promise.all([o.e(34215).then(o.bind(o, 172073)), o.e(26417).then(o.bind(o, 518557))]);
                return {
                    default: e,
                    addToWatchlist: t
                }
            }().then((o => t(e, o))).then((t => {
                const o = Object.values(t);
                return Fi[i].prepend ? function(e, t) {
                    return e._lifecycle.beforeAppendContextMenuItems(t.length > 0 ? "bottom" : void 0).concat(t)
                }(e.view, o) : o
            }
            ))
        }
        function Ai(e, t, i) {
            const {view: n, e: r} = e;
            return Ti(e, t, i).then((e => {
                return t = e,
                i = r,
                o.e(34215).then(o.bind(o, 257381)).then(( ({ContextMenuManager: e}) => e.showMenu(t, i)));
                var t, i
            }
            )).then(( () => {
                const e = Fi[i].description;
                n._model.trackEvent(e)
            }
            ))
        }
        var Ii, Di = o(990266), Pi = o(810978), Li = o(324020), $i = o(301393), Bi = o(702008), Ri = o(779893);
        function Oi(e, t) {
            const {view: o} = e
              , i = o._bridge
              , n = t.default
              , r = o._selectableList ? o._selectableList.getSelectedKeys().length : 1
              , s = {
                ...e,
                selectedSymbolsCount: r
            };
            if ((0,
            vi.isExternalWidget)(i))
                return {
                    ...Wi(s, n)
                };
            if ((0,
            vi.isScreenerPage)(i) || (0,
            vi.isMarketPage)(i)) {
                return {
                    ...0 === r ? Wi(s, n) : {},
                    ...Ni(s, t.addToWatchlist)
                }
            }
            return {
                ...Ni(s, t.addToWatchlist),
                ...Vi(s, n),
                ...qi(s, n)
            }
        }
        function Ni(e, t) {
            const {view: i, symbol: n, shortName: r, selectedSymbolsCount: s} = e;
            let l, a;
            0 === s ? (l = p.t(null, {
                replace: {
                    symbolName: r
                }
            }, o(206539)),
            a = [n]) : (l = p.t(null, void 0, o(770218)),
            a = i._selectableList ? i._selectableList.getSelectedKeys().slice(0) : []);
            return {
                addToWatchListAction: new t({
                    label: l,
                    disabled: !0,
                    onExecute: () => {
                        (0,
                        Pi.runOrSigninWithFeature)(( () => {
                            const e = i._getWatchlist();
                            e && (e.addSymbols(a),
                            (0,
                            Xt.sendSnowPlowData)(new Di.DispatchContextMenuActionEvent(Ii.AddToWatchlist,"row",!0)))
                        }
                        ), {
                            feature: "watchList",
                            source: "add symbol to watchlist"
                        })
                    }
                    ,
                    icon: Bi
                })
            }
        }
        function Wi(e, t) {
            const {view: i} = e;
            return ["sector", "industry"].includes(i._model.screener_type) ? function(e, t) {
                const {e: i} = e
                  , n = Ri(i.target).closest(".tv-screener-table__result-row").find(".tv-screener__symbol");
                return {
                    openSymbolPageAction: new t({
                        actionId: "Watchlist.OpenSymbolOverview",
                        options: {
                            label: p.t(null, {
                                replace: {
                                    symbol: n.text()
                                }
                            }, o(87294)),
                            onExecute: () => {
                                window.open(n.attr("href"), "_blank"),
                                (0,
                                Xt.sendSnowPlowData)(new Di.DispatchContextMenuActionEvent(Ii.OpenSymbolPage,"row",!0))
                            }
                        }
                    })
                }
            }(e, t) : function(e, t) {
                const {view: i, shortName: n, symbol: r} = e;
                return {
                    openChartAction: new t({
                        actionId: "Watchlist.OpenSymbolChart",
                        options: {
                            label: p.t(null, {
                                replace: {
                                    symbol: n
                                }
                            }, o(575633)),
                            onExecute: () => {
                                const {applySymbol: e} = i._bridge;
                                e && (e(r, !0),
                                (0,
                                Xt.sendSnowPlowData)(new Di.DispatchContextMenuActionEvent(Ii.OpenChart,"row",!0)))
                            }
                        }
                    })
                }
            }(e, t)
        }
        function Vi(e, t) {
            const {view: i, symbol: n, shortName: r, selectedSymbolsCount: s} = e;
            let l, a;
            0 === s ? (l = p.t(null, {
                replace: {
                    symbol: r
                }
            }, o(54712)),
            a = [n]) : (l = p.t(null, void 0, o(114227)),
            a = i._selectableList.getSelectedKeys());
            return {
                compareAction: new t({
                    actionId: "Watchlist.AddSymbolToCompare",
                    options: {
                        label: l,
                        onExecute: async () => {
                            for (const e of a)
                                await (i._bridge.chartWidgetCollection?.activeChartWidget.value().addCompareAsOverlay(e, false))
                        }
                        ,
                        icon: $i
                    }
                })
            }
        }
        function qi(e, t) {
            const {symbol: i, shortName: n, selectedSymbolsCount: r} = e;
            if (r > 0)
                return {};
            return {
                addToTextNotesAction: new t({
                    actionId: "Note.Create",
                    options: {
                        icon: Li,
                        label: p.t(null, {
                            replace: {
                                symbol: n
                            }
                        }, o(837674)),
                        onExecute: () => {
                            (0,
                            ai.runOrSignIn)(( () => {
                                (0,
                                Xt.sendSnowPlowData)(new Di.DispatchContextMenuActionEvent(Ii.AddTextNote,"row",!0)),
                                window.widgetbar?.setPage("base"),
                                (0,
                                Mi.createSymbolNote)(i)
                            }
                            ), {
                                source: "Add text note in screener"
                            })
                        }
                    }
                })
            }
        }
        !function(e) {
            e.AddToWatchlist = "add_to_watchlist",
            e.OpenChart = "open_chart",
            e.AddToCompare = "add_to_compare",
            e.AddTextNote = "add_text_note",
            e.OpenSymbolPage = "open_symbol_page"
        }(Ii || (Ii = {}));
        var zi = o(547465)
          , Ui = o(820028)
          , ji = o(61499)
          , Hi = o(331633)
          , Gi = o(842060);
        o(757554);
        function Xi(e) {
            const t = (0,
            Gi.getStyleClasses)(e.size, 2, e.className);
            return (0,
            Gi.isCircleLogoWithUrlProps)(e) ? `<img class="${t}" crossorigin src="${e.logoUrl}" alt="">` : `<span class="${t}">${e.placeholderLetter || ""}</span>`
        }
        var Ki = o(115078);
        function Yi(e) {
            const {primaryLogoUrl: t, secondaryLogoUrl: o, size: i, className: n} = e;
            return `<span class="${(0,
            Ki.getBlockStyleClasses)(i, n)}">\n\t\t\t${Ji({
                logoUrl: o,
                size: i
            })}\n\t\t\t${Ji({
                logoUrl: t,
                size: i
            })}\n\t\t</span>`
        }
        function Ji(e) {
            const {logoUrl: t, size: o} = e
              , i = (0,
            Ki.getLogoStyleClasses)(o, 2, Boolean(t));
            return void 0 === t ? `<span class="${i}"></span>` : `<img class="${i}" crossorigin src="${t}" alt="" />`
        }
        function Zi(e) {
            const {symbolHtml: t, logoUrl: o, symbolFirstLetter: i, size: n="xsmall"} = e;
            return Qi({
                symbolHtml: t,
                logoHtml: Xi({
                    logoUrl: o,
                    size: n,
                    placeholderLetter: i,
                    className: "tv-screener-table__logo-container"
                })
            })
        }
        function Qi(e) {
            const {logoHtml: t="", symbolHtml: o="", wrapHtmlClass: i=""} = e;
            return `\n\t\t<div class="tv-screener-table__symbol-container ${i}">\n\t\t\t<div class="tv-screener-table__symbol-addition"></div>\n\t\t\t${t}\n\t\t\t<div class="tv-screener-table__symbol-container-description">\n\t\t\t\t${o}\n\t\t\t</div>\n\t\t</div>\n\t`
        }
        var en = o(849204);
        const tn = (0,
        en.getLogoUrlResolver)();
        function on(e) {
            if (e && "null" !== e)
                return tn.getSymbolLogoUrl(e, en.LogoSize.Medium)
        }
        function nn(e) {
            const {fieldsOrder: t, proSymbol: o, rowData: i, symbolHtml: n} = e
              , r = t.indexOf(u.LogoId);
            if (-1 !== r) {
                const e = i[r];
                return Zi({
                    symbolHtml: n,
                    symbolFirstLetter: rn(o),
                    logoUrl: on(e)
                })
            }
            const s = t.indexOf(u.BaseCurrencyLogoId)
              , l = -1 !== s
              , a = t.indexOf(u.CurrencyLogoId)
              , c = -1 !== a;
            if (l && c) {
                const e = i[s]
                  , t = i[a];
                return function(e, t, o) {
                    return Qi({
                        symbolHtml: e,
                        logoHtml: Yi({
                            primaryLogoUrl: t,
                            secondaryLogoUrl: o,
                            size: "xsmall",
                            className: "tv-screener-table__logo-container"
                        })
                    })
                }(n, on(e), on(t))
            }
            if (l) {
                const e = i[s];
                return Zi({
                    symbolHtml: n,
                    symbolFirstLetter: rn(o),
                    logoUrl: on(e)
                })
            }
            if (c) {
                const e = i[a];
                return Zi({
                    symbolHtml: n,
                    symbolFirstLetter: rn(o),
                    logoUrl: on(e)
                })
            }
            return Qi({
                symbolHtml: n
            })
        }
        function rn(e) {
            return (0,
            Ei.shortName)(e)[0]
        }
        function sn(e, t, o) {
            return e.get($(t, o))
        }
        var ln;
        !function(e) {
            e.Bool = "bool",
            e.FundamentalPrice = "fundamental_price",
            e.Number = "number",
            e.Percent = "percent",
            e.Price = "price",
            e.Text = "text",
            e.Time = "time"
        }(ln || (ln = {}));
        const an = ["&mdash;", '<span class="tv-screener-table__cell--color-normal">—</span>'];
        function cn(e, t, o, i, n) {
            if (!un() && !n)
                return "";
            const r = !e && o === ln.Price || !t && o === ln.FundamentalPrice || an.includes(i)
              , s = ![ln.Price, ln.FundamentalPrice].includes(o);
            if (r || s)
                return "";
            let l;
            return l = o === ln.Price ? e : t,
            `<span class="tv-screener-table__cell-currency-value">${l}</span>`
        }
        const dn = "screener.showCurrencyLabel";
        function un() {
            return n.getBool(dn, !0)
        }
        var hn = o(366619)
          , pn = o(267562)
          , mn = o(182951)
          , _n = o(891250)
          , gn = o(779893)
          , vn = o(779893);
        class fn {
            constructor(e) {
                this._setOptions(e),
                this._fields = {},
                this._fieldsOrder = Array.isArray(e.fieldsOrder) && e.fieldsOrder || [],
                this.fieldsOrderChange = new zi.Delegate,
                this._columnsMap = new Map,
                this.afterFixCols = new zi.Delegate,
                this._additionalColumns = [],
                this._hiddenColumns = 0,
                this._throttleFixCols = (0,
                uo.default)(( () => {
                    "minimized" !== (this._model._bridge.bottomToolbarMode ? this._model._bridge.bottomToolbarMode.value() : "normal") && (this._unhideColumns(),
                    this._unhideCells(),
                    this._fixCols())
                }
                ), 10),
                this.dragStarted = new Ui.WatchedValue,
                this._fieldsOrderChange = !1,
                this._updateEmptyMessageIcon = this._updateEmptyMessageIcon.bind(this),
                Hi.watchedTheme.subscribe(this._updateEmptyMessageIcon)
            }
            _setOptions(e) {
                this._options = e || {},
                this._model = this._options.model,
                this._defaultFormatter = this._options.defaultFormatter || (e => e.value),
                this._nullFormatter = this._options.nullFormatter || ( () => "&mdash;"),
                this._widthChange = this._options.widthChange,
                this._visibilityChange = this._options.visibilityChange,
                this._noDataString = this._options.noDataString,
                this._isUnavailableWidgetMarket = this._options.isUnavailableWidgetMarket,
                this._disableStickyHeader = e.disableStickyHeader
            }
            updateSortField(e, t) {
                const o = this.getTh(e);
                e && t && o.size() && (this.$theadRow.find(".tv-screener-table__sort--desc,.tv-screener-table__sort--asc").removeClass("tv-screener-table__sort--desc tv-screener-table__sort--asc"),
                o.find(".js-table-sort").empty().addClass(`tv-screener-table__sort--${t}`).append("asc" === t ? mn : _n))
            }
            highlightCell(e, t, o) {
                const i = this.$tbody[0].querySelector(`tr[data-symbol="${e}"] td[data-field-key="${t}"]`);
                if (i) {
                    i.classList.add("tv-screener-table__cell--highlighted");
                    const e = i.querySelector("span");
                    if (e) {
                        const t = o ? "tv-screener-table__cell--growing" : "tv-screener-table__cell--falling";
                        e.classList.add(t)
                    }
                }
            }
            flickRow(e) {
                this.$tbody[0].querySelectorAll(`tr[data-symbol="${e}"] td`).forEach((e => {
                    const t = e.querySelector("span");
                    t && t.classList.remove("tv-screener-table__cell--growing", "tv-screener-table__cell--falling")
                }
                ))
            }
            _createTable() {
                if (this._table)
                    return;
                const e = document.createElement("table")
                  , t = ["tv-data-table"];
                this._options.addTableClasses && t.push(...this._options.addTableClasses),
                e.classList.add(...t);
                const o = document.createElement("colgroup")
                  , i = document.createElement("thead")
                  , n = ["tv-data-table__thead"];
                this._options.addTheadClasses && n.push(...this._options.addTheadClasses),
                i.classList.add(...n);
                const r = document.createElement("tr")
                  , s = ["tv-data-table__thead-row"];
                this._options.addTheadRowClasses && s.push(...this._options.addTheadRowClasses),
                r.classList.add(...s);
                const l = document.createElement("tbody");
                l.classList.add("tv-data-table__tbody"),
                e.appendChild(o),
                e.appendChild(i),
                i.appendChild(r),
                e.appendChild(l),
                this._table = e,
                this._colgroup = o,
                this._theadRow = r,
                this._tbody = l,
                window.addEventListener("resize", ( () => this._throttleFixCols())),
                this._widthChange.subscribe(this, ( () => this._throttleFixCols())),
                this._model._bridge.bottomToolbarMode && this._model._bridge.bottomToolbarMode.subscribe(( () => this._throttleFixCols())),
                this._visibilityChange && this._visibilityChange.subscribe((e => {
                    e && this._throttleFixCols()
                }
                ))
            }
            _createStickyWrapper() {
                if (this._stickyWrapper)
                    return;
                const e = ["tv-data-table-sticky-wrapper"];
                this._options.addStickyHeaderWrapperClasses && e.push(...this._options.addStickyHeaderWrapperClasses);
                const t = document.createElement("div");
                t.classList.add(...e);
                const o = this._table.cloneNode(!0);
                t.append(o),
                this._stickyWrapper = t
            }
            _createHeader() {
                const e = document.createDocumentFragment()
                  , t = document.createDocumentFragment();
                this._disableStickyHeader || this._createStickyWrapper();
                for (let i = 0; i < this._columnsOrder.length; ++i) {
                    const n = this._columnsOrder[i];
                    if (!this._fields[n])
                        continue;
                    const r = document.createElement("th");
                    r.setAttribute("data-field", n);
                    const s = ["tv-data-table__th", "tv-data-table__cell", "js-tv-data-table-th", `js-tv-data-table-th-${this._esc(n)}`];
                    if (this._options.addThClasses) {
                        const e = "function" == typeof this._options.addThClasses ? this._options.addThClasses(n, this._fields[n]) : this._options.addThClasses;
                        s.push(...e)
                    }
                    r.classList.add(...(o = s,
                    o.filter(Boolean)));
                    const l = "function" == typeof this._options.titleFormatter ? this._options.titleFormatter(n, this._fields[n]) : this._fields[n] && (this._fields[n].content || this._fields[n].title) || n;
                    l instanceof gn ? r.append(l[0]) : r.innerHtml = l,
                    this._setDraggable(r),
                    t.append(r);
                    const a = document.createElement("col");
                    a.classList.add("js-tv-data-table-col", `js-tv-data-table-col-${this._esc(n)}`),
                    e.append(a)
                }
                var o;
                yn(this._colgroup),
                yn(this._theadRow);
                const i = this._fields[this._model.searchField] ? this._fields[this._model.searchField].searchValue : void 0;
                if (this._disableStickyHeader)
                    this._colgroup.append(e),
                    this._theadRow.append(t),
                    this._setSearchInput(this._theadRow, i);
                else {
                    const o = this._stickyWrapper.querySelector("table")
                      , n = o.querySelector("colgroup")
                      , r = o.querySelector("thead tr");
                    yn(n),
                    yn(r);
                    const s = e.cloneNode(!0);
                    n.append(e),
                    this._colgroup.append(s);
                    const l = t.cloneNode(!0);
                    r.append(t),
                    this._theadRow.append(l),
                    this._theadRowSticky = r,
                    o.classList.add("tv-screener-table--fixed"),
                    vn(this._theadRow).find(".js-table-sort").remove(),
                    this._setSearchInput(this._theadRowSticky, i)
                }
            }
            _setDraggable(e) {
                const t = vn(e);
                if (t.is(".js-draggable"))
                    return;
                const i = vn(this._theadRow);
                let n = !1;
                t.addClass("js-draggable").on("mousedown touchstart", (e => {
                    if (t.data("field") === this._model.searchField)
                        return;
                    e.preventDefault(),
                    t.css({
                        position: "relative",
                        left: 0
                    });
                    const r = t.offset().left;
                    let s = r;
                    const l = e.pageX || e.originalEvent.touches[0].pageX
                      , a = e => {
                        const c = (e.pageX || e.originalEvent.touches[0].pageX) - l;
                        if (!n) {
                            if (Math.abs(c) < 10)
                                return;
                            o.e(34215).then(o.bind(o, 257381)).then(( ({ContextMenuManager: e}) => {
                                null !== e.getShown() && (n = !1,
                                t.css("left", "auto"),
                                vn(window).off("mousemove touchmove", a),
                                this._onDragStop(t))
                            }
                            )),
                            this._onDragStart(t),
                            t.one("click", (e => {
                                n && e.stopPropagation()
                            }
                            ))
                        }
                        n = !0;
                        const d = i.offset().left
                          , u = i.outerWidth()
                          , h = t.outerWidth()
                          , p = Math.max(d, Math.min(d + u - h, r + c))
                          , m = p + h / 2;
                        let _ = vn()
                          , g = !1;
                        const v = t.prev();
                        if (v.size() && ((0,
                        Gt.isRtl)() ? m > v.offset().left + v.outerWidth() / 2 : p <= d || m < v.offset().left + v.outerWidth() / 2))
                            _ = v;
                        else {
                            const e = t.next();
                            if (e.size() && !e.is(".i-hidden")) {
                                (p + h >= d + u || ((0,
                                Gt.isRtl)() ? m < e.offset().left + e.outerWidth() / 2 : m > e.offset().left + e.outerWidth() / 2)) && (_ = e,
                                g = !0)
                            }
                        }
                        const f = _.data("field");
                        if (_.size() && "name" !== f) {
                            const e = t.data("field")
                              , o = vn(this._colgroup).find(`.js-tv-data-table-col-${this._esc(e)}`)
                              , i = vn(this._colgroup).find(`.js-tv-data-table-col-${this._esc(f)}`);
                            let n = vn()
                              , r = vn();
                            this._stickyWrapper && (n = vn(this._stickyWrapper).find(`.js-tv-data-table-col-${this._esc(e)}`),
                            r = vn(this._stickyWrapper).find(`.js-tv-data-table-col-${this._esc(f)}`)),
                            g ? (o.insertAfter(i),
                            n.size() && r.size() && n.insertAfter(r)) : (o.insertBefore(i),
                            n.size() && r.size() && n.insertBefore(r));
                            let l = vn()
                              , a = vn();
                            this._stickyWrapper && (l = vn(this._stickyWrapper).find(`.js-tv-data-table-th-${this._esc(e)}`),
                            a = vn(this._stickyWrapper).find(`.js-tv-data-table-th-${this._esc(f)}`)),
                            g ? (t.insertAfter(_),
                            s = t.offset().left - _[0].offsetWidth,
                            l.size() && a.size() && l.insertAfter(a)) : (t.insertBefore(_),
                            s = t.offset().left + _[0].offsetWidth,
                            l.size() && a.size() && l.insertBefore(a)),
                            this._swapCols(e, f)
                        }
                        t.css("left", p - s)
                    }
                    ;
                    vn(window).on("mousemove touchmove", a).one("mouseup touchend", (e => {
                        setTimeout(( () => {
                            n = !1
                        }
                        ), 0),
                        t.css("left", "auto"),
                        vn(window).off("mousemove touchmove", a),
                        n && this._onDragStop(t)
                    }
                    ))
                }
                ))
            }
            _setSearchInput(e, t) {
                const o = e.querySelector(".js-search-query");
                if (!o)
                    return;
                const i = o.querySelector(".js-search-input")
                  , n = o.querySelector(".js-input-reset");
                (0,
                vi.isScreenerPage)(this._model._bridge) && i.focus();
                const r = Boolean(t);
                n.classList.toggle("i-hidden", !r),
                r && (i.value = t),
                i.addEventListener("input", ( () => {
                    n.classList.toggle("i-hidden", 0 === i.value.length)
                }
                ));
                const s = (0,
                Lt.default)(( () => {
                    this._fields[this._model.searchField].searchValue = i.value,
                    this._model.loading || this._model.update()
                }
                ), 400);
                i.addEventListener("input", ( () => s()))
            }
            _onDragStart(e) {
                this._model.preventPrevScanRequest(),
                this.dragStarted.setValue(!0);
                const t = e.data("field")
                  , o = this._getColByField(t);
                o && (this._options.addDraggingThClasses && e[0].classList.add(...this._options.addDraggingThClasses),
                this._options.addDraggingColClasses && o.classList.add(...this._options.addDraggingColClasses))
            }
            _swapCols(e, t) {
                const o = this._columnsOrder.indexOf(e)
                  , i = this._columnsOrder.indexOf(t);
                this._columnsOrder[o] = this._columnsOrder.splice(i, 1, this._columnsOrder[o])[0],
                this._fieldsOrderChanged = !0;
                const n = Math.min(o, i)
                  , r = Math.max(o, i)
                  , s = this._tbody.children;
                for (let e = 0; e < s.length; e++) {
                    const t = s[e].children
                      , o = t[n];
                    t[r].after(o)
                }
                const l = this._fieldsOrder.indexOf(e)
                  , a = this._fieldsOrder.indexOf(t);
                this._fieldsOrder[l] = this._fieldsOrder.splice(a, 1, this._fieldsOrder[l])[0]
            }
            _onDragStop(e) {
                this.dragStarted.setValue(!1);
                const t = e.data("field")
                  , o = this._getColByField(t);
                o && (this._options.addDraggingThClasses && e[0].classList.remove(...this._options.addDraggingThClasses),
                this._options.addDraggingColClasses && o.classList.remove(...this._options.addDraggingColClasses),
                this._fieldsOrderChanged && (this.fieldsOrderChange.fire(),
                this._fieldsOrderChanged = !1,
                this._model.trackEvent(`Drag and drop ${"big" === this._options.table_style ? "quotes" : "non-quotes"} column`),
                (0,
                Xt.sendSnowPlowData)(new io(t))),
                this._fixCols())
            }
            _getColByField(e) {
                return this._colgroup.querySelector(`.js-tv-data-table-col-${this._esc(e)}`)
            }
            _fixCols() {
                const e = Array.from(this._theadRow.children);
                if (0 === e.length)
                    return;
                this._table.classList.remove("tv-screener-table--fixed");
                const t = this._table.querySelectorAll("col");
                let o = e.map((e => Math.floor(e.getBoundingClientRect().width)));
                const i = "big" === this._options.table_style
                  , n = window.innerWidth > $t.breakpoints.tablet
                  , r = this._table.parentNode.offsetWidth;
                let s = bn(o);
                if (i && n && s > r) {
                    do {
                        s > r && (o.pop(),
                        this._hideColumn()),
                        s = bn(o)
                    } while (s > r);
                    const e = Math.floor((r - s) / o.length);
                    o = o.map((t => t + e));
                    const t = o.length - 1
                      , i = o[t]
                      , n = r - bn(o);
                    o[t] = i + n
                }
                if (t.forEach(( (e, t) => {
                    const i = o[t];
                    i ? e.style.width = `${i}px` : e.classList.add("i-hidden")
                }
                )),
                this._stickyWrapper) {
                    const e = this._stickyWrapper
                      , t = e.querySelector("colgroup")
                      , i = e.querySelector("table")
                      , n = this._colgroup.cloneNode(!0);
                    t.replaceWith(n),
                    i.classList.add("tv-screener-table--fixed"),
                    this._stickyWrapper.style.width = function(e, t) {
                        if (!((0,
                        vi.isMarketPage)(e._model._bridge) && window.innerWidth > $t.breakpoints.phone))
                            return;
                        return e._stickyWrapper.querySelectorAll("th").forEach(( (e, o) => {
                            t[o] ? e.classList.remove("i-hidden") : e.classList.add("i-hidden")
                        }
                        )),
                        `${bi(e._table).width()}px`
                    }(this, o) || `${s}px`
                }
                this._table.classList.add("tv-screener-table--fixed"),
                this.afterFixCols.fire()
            }
            _hideColumn() {
                const e = this._theadRow.children;
                for (let t = e.length - 1; t >= 0; t--) {
                    const o = e[t];
                    if (!o.classList.contains("i-hidden")) {
                        o.classList.add("i-hidden");
                        break
                    }
                }
                this._hiddenColumns++
            }
            _unhideColumns() {
                const e = this._table.querySelectorAll("col")
                  , t = this._theadRow.querySelectorAll("th");
                e.forEach(( (e, o) => {
                    e.style.width = "",
                    e.classList.remove("i-hidden"),
                    t[o].classList.remove("i-hidden")
                }
                )),
                this._hiddenColumns = 0
            }
            _unhideCells() {
                if (!this._tbody)
                    return;
                this._tbody.querySelectorAll("td.i-hidden").forEach((e => {
                    e.classList.remove("i-hidden")
                }
                ))
            }
            toggleSignals(e) {
                const t = this._fields[e];
                t.displaySignal = !t.displaySignal;
                const o = this._columnsOrder.indexOf(e);
                if (-1 === o)
                    return;
                const i = this._tbody.querySelectorAll(`.tv-data-table__row .tv-data-table__cell:nth-child(${o + 1}) .tv-screener-table__signal`);
                0 !== i.length && (i.forEach((e => e.classList.toggle("i-hidden", !t.displaySignal))),
                this._fixCols())
            }
            get $element() {
                return this._createTable(),
                vn(this._table)
            }
            get $tbody() {
                return this._createTable(),
                vn(this._tbody)
            }
            get $stickyHeader() {
                return this._createTable(),
                this._createStickyWrapper(),
                vn(this._stickyWrapper)
            }
            get $theadRow() {
                return this._disableStickyHeader ? vn(this._theadRow) : vn(this._theadRowSticky)
            }
            get additionalColumns() {
                return this._additionalColumns
            }
            get fieldsOrder() {
                return this._fieldsOrder
            }
            get columnsOrder() {
                return this._columnsOrder
            }
            setColumnsMap(e) {
                this._columnsMap = e
            }
            setFields(e) {
                this._fieldsOrder = [],
                this._columnsOrder = [];
                for (const [t,o] of Object.entries(e))
                    this._fieldsOrder.push(t),
                    o.skipField || this._columnsOrder.push(t);
                this._fields = {},
                this._additionalColumns = [],
                this._fieldsOrder.forEach((t => {
                    this._fields[t] = e[t],
                    e[t] && e[t].additionalColumns && e[t].additionalColumns.forEach((e => {
                        this._additionalColumns.includes(e) || this._additionalColumns.push(e)
                    }
                    ))
                }
                )),
                this.fieldsOrderChange.fire(),
                this._fieldsOrderChange = !0
            }
            update(e) {
                this._fieldsOrderChange && (this._unhideColumns(),
                this._createTable(),
                this._createHeader()),
                this.clearData(),
                this.append(e),
                this._fieldsOrderChange && (this._fieldsOrderChange = !1),
                this._fixCols()
            }
            _updateEmptyMessageIcon() {
                if (!this._$emptyMessage)
                    return;
                const e = function() {
                    const e = Hi.watchedTheme.value();
                    return e || (document.querySelector("html")?.classList.contains("theme-dark") ? ji.StdTheme.Dark : ji.StdTheme.Light)
                }()
                  , t = this._$emptyMessage.find("i")
                  , o = e === ji.StdTheme.Light ? pn : hn;
                t.html(o)
            }
            _setEmptyMessage() {
                let e, t = "";
                (0,
                vi.isScreenerPage)(this._model._bridge) ? t = "tv-screener-table__empty-result--fixed" : ((0,
                vi.isChartPage)(this._model._bridge) || (0,
                vi.isExternalWidget)(this._model._bridge)) && (t = "tv-screener-table__empty-result--relative"),
                e = this._isUnavailableWidgetMarket ? p.t(null, void 0, o(838821)).format({
                    openLink: '<a href="https://www.tradingview.com/" target="_blank" rel="noopener" class="tv-screener-table__empty-result-link">',
                    closeLink: "</a>"
                }) : this._noDataString || p.t(null, void 0, o(476822)),
                this._$emptyMessage = vn(`\n\t\t\t<div class="tv-screener-table__empty-result ${t}">\n\t\t\t\t<i class="js-no-results-icon"></i>\n\t\t\t\t<div class="tv-screener-table__empty-description">${e}</div>\n\t\t\t</div>\n\t\t`).insertAfter(this._table),
                this._updateEmptyMessageIcon(),
                (0,
                vi.isMarketPage)(this._model._bridge) ? this._fixCols() : this._model._view.fixStandaloneWidth()
            }
            append(e) {
                this._$emptyMessage && this._$emptyMessage.remove();
                const t = sn(this._columnsMap, "currency", this._model.selectedIntervalId)
                  , o = sn(this._columnsMap, "fundamental_currency_code", this._model.selectedIntervalId)
                  , i = document.createDocumentFragment();
                for (let n = 0; n < e.length; n++) {
                    const r = e[n];
                    if (!Array.isArray(r.d))
                        continue;
                    const s = r.d[t]
                      , l = r.d[o]
                      , a = ["tv-data-table__row"];
                    if (this._options.addRowClasses) {
                        const e = "function" == typeof this._options.addRowClasses ? this._options.addRowClasses(r) : this._options.addRowClasses;
                        a.push(...e)
                    }
                    const c = [];
                    if (this._options.addRowAttrs) {
                        const e = "function" == typeof this._options.addRowAttrs ? this._options.addRowAttrs(r) : this._options.addRowAttrs;
                        for (const [t,o] of Object.entries(e))
                            c.push([t, o])
                    }
                    const h = document.createDocumentFragment();
                    let p = this._hiddenColumns;
                    for (let e = this._fieldsOrder.length - 1; e >= 0; --e) {
                        const t = this._fieldsOrder[e]
                          , o = this._fields[t];
                        if (!o || o.skipField)
                            continue;
                        const i = sn(this._columnsMap, t, this._model.selectedIntervalId)
                          , n = o.additionalColumns ? o.additionalColumns.map((e => wn(r.d, sn(this._columnsMap, e, this._model.selectedIntervalId)))) : [];
                        let a = "";
                        const c = ["tv-data-table__cell"];
                        let m;
                        if (o.tooltip && ("function" == typeof o.tooltip ? a = o.tooltip(...n, o) : "string" == typeof o.tooltip && (a = o.tooltip),
                        c.push("apply-common-tooltip")),
                        "price" === o.type && n.length >= 4) {
                            const e = n.slice(-4);
                            e[2] = "true" === e[2],
                            m = _t(...e)
                        } else
                            m = pt(o, this._model.screener_type, !1);
                        "name" === t && n.push(r.s);
                        const _ = wn(r.d, i);
                        let g = null === _ ? this._nullFormatter() : m && m.format(_) || this._defaultFormatter({
                            value: _,
                            fieldKey: t,
                            field: o,
                            rowData: r,
                            fieldsOrder: this._fieldsOrder,
                            title: a,
                            columnsMap: this._columnsMap
                        });
                        if (this._options.addCellClasses) {
                            const e = "function" == typeof this._options.addCellClasses ? this._options.addCellClasses({
                                value: _,
                                fieldKey: t,
                                field: o
                            }) : this._options.addCellClasses;
                            c.push(...e)
                        }
                        const v = o.additionalFormatter ? o.additionalFormatter(...n) : "";
                        o.mutateDisplayValue && (g = o.mutateDisplayValue(g, ...n, o)),
                        this._model.hasMarkedSymbols() && c.push("tv-screener-table__cell--with-marker"),
                        p > 0 && (c.push("i-hidden"),
                        p--);
                        let f = g + v + cn(s, l, o.type, g, (0,
                        vi.isMarketPage)(this._model._bridge));
                        (t === u.Name || t === u.Sector && this._model.screener_type === d.CryptoMkt) && (f = nn({
                            symbolHtml: f,
                            fieldsOrder: this._fieldsOrder,
                            rowData: r.d,
                            proSymbol: r.s
                        }));
                        const y = document.createElement("td");
                        y.classList.add(...c),
                        y.title = a && "name" !== t ? a : "",
                        y.setAttribute("data-field-key", t),
                        y.innerHTML = f,
                        h.prepend(y)
                    }
                    const m = document.createElement("tr");
                    m.classList.add(...a),
                    c.forEach((e => m.setAttribute(...e))),
                    m.append(h),
                    this._options.onRowBuild && this._options.onRowBuild(m, r),
                    i.appendChild(m)
                }
                this._tbody.appendChild(i),
                0 === this._tbody.querySelectorAll("tr").length && this._setEmptyMessage(),
                this._options.onUpdate && this._options.onUpdate()
            }
            clearData(e) {
                if (this._tbody)
                    if (e) {
                        const t = this._tbody.children
                          , o = t.length;
                        for (let i = e; i < o; i++) {
                            const o = t[e];
                            this._tbody.removeChild(o)
                        }
                    } else
                        this._tbody.innerHTML = ""
            }
            setThContent(e, t) {
                const o = this.getTh(e);
                o.size() && (o.empty(),
                t instanceof gn ? o.append(t) : o.html(t),
                "name" === e && this._setSearchInput(this.$theadRow[0], this._fields[e].searchValue))
            }
            setColumnTitle(e, t) {
                const o = this.getTh(e);
                o.size() && o.find(".js-head-title").text(t)
            }
            setSearchText(e) {
                const t = this.getTh(this._model.searchField);
                t.size() && t.find(".js-field-total").text(e)
            }
            getTh(e) {
                const t = this.$theadRow;
                return t && t.find(`.js-tv-data-table-th-${this._esc(e)}`) || vn()
            }
            _esc(e) {
                return e.replace(/[\.|]/g, "_")
            }
        }
        function yn(e) {
            const t = e.children;
            0 !== t.length && Array.from(t).forEach((t => e.removeChild(t)))
        }
        function bn(e) {
            return e.reduce(( (e, t) => e + t))
        }
        function wn(e, t) {
            return e[t]
        }
        var Sn = o(199583)
          , Cn = o(23203);
        const kn = {
            america: "usa",
            euronext: "europe",
            hongkong: "hong-kong",
            newzealand: "new-zealand",
            uk: "united-kingdom",
            rsa: "south-africa",
            srilanka: "sri-lanka"
        };
        function xn(e, t, o="sector") {
            return e && t ? (kn[t] && (t = kn[t]),
            `/markets/stocks-${t}/sectorandindustry-${o}/${(i = e,
            i.replace(/[^a-zA-Z0-9]+/g, "-").replace(/-+/g, "-").replace(/^-|-$/g, "")).toLowerCase()}/`) : "/markets/stocks-usa/sectorandindustry-sector/";
            var i
        }
        function Mn(e) {
            const t = e._model
              , o = e._bridge
              , i = {
                screenerType: An(t),
                market: t.markets[0],
                utm: t.utm,
                largeChartUrl: t.largeChartUrl,
                tableStyle: o.table_style,
                screenerPlacement: (0,
                vi.getScreenerPage)(o),
                openChartOnSameTab: o.open_chart_on_same_tab,
                bridgeBaseUrl: o.baseUrl,
                selectedIntervalId: t.selectedIntervalId
            };
            return e => function(e) {
                switch (e.fieldKey) {
                case u.Name:
                    return function(e) {
                        const {value: t, title: o, screenerPlacement: i, openChartOnSameTab: n} = e;
                        if ("chart" !== i) {
                            const i = In(e);
                            return `<a class="tv-screener__symbol apply-common-tooltip" title="${(0,
                            xo.htmlEscape)(o)}" href="${(0,
                            xo.htmlEscape)(i)}" ${n ? "" : 'target="_blank" rel="noopener"'}>${t}</a>`
                        }
                        return `<div class="tv-screener__symbol tv-screener__symbol--text apply-common-tooltip" title="${o}">${t}</div>`
                    }(e);
                case u.Description:
                    return function(e) {
                        const {value: t, screenerType: o, market: i} = e;
                        if (["sector", "industry"].includes(o)) {
                            const e = En(t);
                            return `<a class="tv-screener__symbol" target="_blank" rel="noopener" href="${xn(t, i, o)}">\n\t\t\t\t\t\t${e}\n\t\t\t\t\t</a>`
                        }
                        return Fn(t)
                    }(e);
                case u.Sector:
                    return function(e) {
                        const {value: t, fieldKey: o, screenerType: i, market: n, tableStyle: r, utm: s, openChartOnSameTab: l} = e;
                        if (i === d.CryptoMkt) {
                            const o = In(e);
                            return `<a class="tv-screener__symbol" href="${(0,
                            xo.htmlEscape)((0,
                            Sn.addUtmToUrl)(o, s))}" ${l ? "" : 'target="_blank" rel="noopener"'}>\n\t\t\t\t\t\t${t}\n\t\t\t\t\t</a>`
                        }
                        if ("big" === r)
                            return Tn(t, n, o);
                        return t
                    }(e);
                case u.Industry:
                    return function(e) {
                        const {value: t, fieldKey: o, screenerType: i, market: n, tableStyle: r} = e;
                        if ("big" === r && i !== d.CryptoMkt)
                            return Tn(t, n, o);
                        return Fn(t)
                    }(e);
                case u.Country:
                    return (0,
                    si.triesTranslateCountrieName)(e.value);
                default:
                    return e.value
                }
            }({
                ...e,
                ...i
            })
        }
        function En(e) {
            return (0,
            G.triesTranslateScreenerData)(e)
        }
        function Fn(e) {
            const t = En(e);
            return `<span class="tv-screener-table__cell--fix-width" title="${t}">${t}</span>`
        }
        function Tn(e, t, o) {
            const i = En(e);
            return `<a class="tv-screener__symbol" target="_blank" rel="noopener" href="${xn(e, t, o)}">\n\t\t\t\t<span class="tv-screener__symbol--secondary">${i}</span>\n\t\t\t</a>`
        }
        function An(e) {
            return e.screener_type
        }
        function In(e) {
            const {rowData: t, screenerType: o, screenerPlacement: i, utm: n, largeChartUrl: r, columnsMap: s, selectedIntervalId: l} = e;
            if (o === d.CryptoMkt) {
                const e = {
                    proName: t.s,
                    type: "crypto"
                };
                return "widget" === i && r ? (0,
                Cn.makeTemplateSymbolUrl)(r, e) : (0,
                Cn.makeSymbolPageUrl)(e)
            }
            const a = sn(s, "exchange", l);
            let c;
            a && (c = t.d[a]);
            const u = {
                proName: t.s,
                exchange: c,
                type: o
            };
            return o === d.ContinuousFutures ? (0,
            Cn.makeSymbolChartUrl)(u) : "widget" === i && r ? (0,
            Cn.makeTemplateSymbolUrl)(r, u) : (0,
            Cn.makeSymbolPageUrl)(u, n)
        }
        var Dn, Pn = o(625214);
        function Ln(e) {
            const t = e._fields_order
              , i = e._disableStickyHeader
              , n = e._lifecycle
              , r = e.widthChange
              , s = e._model
              , l = s.screener_type
              , a = e._bridge
              , c = a.table_style
              , h = a.hide_controls
              , m = a.visible
              , _ = (0,
            vi.getScreenerPage)(a)
              , g = Ze.description
              , v = {
                model: s,
                fieldsOrder: t,
                titleFormatter: (t, o) => {
                    const i = e._getThContent(t, o);
                    return t === u.Name && n.beforeAppendSymbolsHeader(i.get(0)),
                    i
                }
                ,
                defaultFormatter: Mn(e),
                addTheadClasses: ["tv-screener-table__thead", i ? "tv-screener-table__thead--sticky" : "tv-screener-table__thead--regular"],
                addThClasses: ["tv-data-table__sortable", "tv-screener-table__sortable", "tv-screener-table__th", c ? `tv-screener-table__th--${c}` : "", "widget" === _ && h ? "tv-screener-table__th--no-toolbar" : ""],
                addCellClasses: e => {
                    const {value: t, fieldKey: o, field: i} = e
                      , n = ["tv-screener-table__cell"];
                    return n.push(...function(e) {
                        const t = [];
                        e.align === Dn.Right || e.align === Dn.Center || e.control && "select" !== e.control || t.push("tv-screener-table__cell--left");
                        e.align !== Dn.Center || e.control || t.push("tv-screener-table__cell--center");
                        return t
                    }(i)),
                    i.highlightChange && t && n.push(t >= 0 ? "tv-screener-table__cell--up" : "tv-screener-table__cell--down"),
                    o !== u.Name || !g.disabled && g.checked || n.push("widget" === _ ? "tv-screener-table__cell--widget-without-description" : "tv-screener-table__cell--without-description"),
                    c && n.push(`tv-screener-table__cell--${c}`),
                    "widget" === _ && n.push(...function(e, t) {
                        const o = [];
                        e && o.push("tv-screener-table__cell--no-toolbar");
                        t === d.CryptoMkt && o.push("tv-screener-table__cell--crypto_mkt");
                        return o
                    }(h, l)),
                    n
                }
                ,
                widthChange: r,
                visibilityChange: m,
                table_style: c,
                noDataString: e._noDataString,
                isUnavailableWidgetMarket: e._isUnavailableWidgetMarket,
                disableStickyHeader: i,
                onRowBuild: (t, o) => {
                    const i = e._selectableList;
                    "chart" === _ && Pn.linking.proSymbol.value() === o.s && i && (e._setActiveElem(t),
                    i.focusItem(t)),
                    n.beforeAppendSymbol(o.s, t)
                }
                ,
                onUpdate: () => {
                    const t = e._selectableList;
                    t && t.restore()
                }
            }
              , f = {
                ...v,
                sortable: !0,
                addTableClasses: ["tv-screener-table"],
                addTheadRowClasses: ["tv-data-table__stroke", "tv-screener-table__head"],
                addRowClasses: () => ["tv-data-table__stroke", "tv-screener-table__result-row"],
                addRowAttrs: e => ({
                    "data-symbol": e.s
                }),
                addStickyHeaderWrapperClasses: ["tv-screener-sticky-header-wrapper"],
                addDraggingThClasses: ["tv-screener-table__th--dragging"],
                addDraggingColClasses: ["tv-screener-table__col--dragging"]
            }
              , y = new fn(f);
            return y.setFields({
                name: {
                    title: p.t(null, void 0, o(905791))
                }
            }),
            y
        }
        !function(e) {
            e.Center = "center",
            e.Right = "right"
        }(Dn || (Dn = {}));
        var $n, Bn = o(779893);
        function Rn(e) {
            const {view: t} = e;
            return t._bridge.hide_controls ? Promise.resolve() : Ai(e, On, xi.Header)
        }
        function On(e, t) {
            const {fieldKey: o} = e
              , i = t.default
              , n = Ze[o]
              , r = {
                ...e,
                field: n
            };
            return {
                ...Nn(r, i),
                ...Wn(r, i),
                ...Vn(r, i),
                ...qn(r, i)
            }
        }
        function Nn(e, t) {
            const {view: i, fieldKey: r} = e;
            if ("name" !== r)
                return {};
            const s = new t({
                actionId: "Screener.ToggleVisibility.Description",
                options: {
                    label: !Ze.description.disabled && Ze.description.checked ? p.t(null, void 0, o(838716)) : p.t(null, void 0, o(2948)),
                    disabled: Ze.description.disabled,
                    onExecute: () => {
                        const e = !Ze.description.checked;
                        Ze.description.checked = e,
                        i.table.update(i._data),
                        i.$fieldSetsButton.toggleClass("tv-screener-toolbar__button--unsaved", i._model.isFieldSetChanged()),
                        (0,
                        Xt.sendSnowPlowData)(new Di.DispatchContextMenuActionEvent($n.ToggleDescription,"header",e))
                    }
                }
            })
              , l = new t({
                actionId: "Screener.ToggleVisibility.SymbolType",
                options: {
                    label: !Ze.type.disabled && Ze.type.checked ? p.t(null, void 0, o(750892)) : p.t(null, void 0, o(907661)),
                    disabled: Ze.type.disabled,
                    onExecute: () => {
                        const e = !Ze.type.checked;
                        Ze.type.checked = e,
                        i.table.update(i._data),
                        i.$fieldSetsButton.toggleClass("tv-screener-toolbar__button--unsaved", i._model.isFieldSetChanged()),
                        (0,
                        Xt.sendSnowPlowData)(new Di.DispatchContextMenuActionEvent($n.ToggleSymbolType,"header",e))
                    }
                }
            })
              , a = !["forex", "crypto"].includes(i._model.screener_type)
              , c = new t({
                actionId: "Screener.ToggleVisibility.Currency",
                options: {
                    label: un() ? p.t(null, void 0, o(645946)) : p.t(null, void 0, o(557413)),
                    onExecute: () => {
                        const e = !un();
                        var t;
                        t = e,
                        n.setValue(dn, t),
                        i.table.update(i._data),
                        (0,
                        Xt.sendSnowPlowData)(new Di.DispatchContextMenuActionEvent($n.ToggleShowCurrency,"header",e))
                    }
                }
            });
            return {
                ...a ? {
                    toggleCurrencyDisplayAction: c
                } : null,
                toggleDescriptionAction: s,
                toggleSymbolTypeAction: l
            }
        }
        function Wn(e, t) {
            const {view: i, fieldKey: n, field: r} = e;
            if ("name" === n)
                return {};
            return {
                removeColumnAction: new t({
                    actionId: "Screener.Column.Remove",
                    options: {
                        label: p.t(null, void 0, o(433500)),
                        onExecute: () => {
                            r.checked = !1;
                            const e = i._table.fieldsOrder.filter((e => e !== n));
                            i._model.fieldSetChanged.fire(e.filter((e => Ze[e] && !0 !== Ze[e].disabled && !0 !== Ze[e].hiddenColumn))),
                            i._model.update(),
                            i.$fieldSetsButton.toggleClass("tv-screener-toolbar__button--unsaved", i._model.isFieldSetChanged()),
                            (0,
                            Xt.sendSnowPlowData)(new Di.DispatchContextMenuActionEvent($n.RemoveColumn,"header",n))
                        }
                    }
                })
            }
        }
        function Vn(e, t) {
            const {view: i, fieldKey: n, field: r, e: s} = e
              , l = s.currentTarget || s.target
              , a = new t({
                actionId: "Screener.Filter.Reset",
                options: {
                    label: p.t(null, void 0, o(357670)),
                    onExecute: () => {
                        i.resetFilter(n),
                        (0,
                        Xt.sendSnowPlowData)(new Di.DispatchContextMenuActionEvent($n.ResetFilter,"header",n))
                    }
                }
            })
              , c = new t({
                actionId: "Screener.Filter.Change",
                options: {
                    label: p.t(null, void 0, o(577779)),
                    onExecute: () => {
                        const e = Bn(l).closest("th");
                        i.showInplaceEditor(n, e),
                        s.stopPropagation(),
                        (0,
                        Xt.sendSnowPlowData)(new Di.DispatchContextMenuActionEvent($n.ChangeFilter,"header",n))
                    }
                }
            });
            if (r.control) {
                i.fieldValueString(n) || a.update({
                    disabled: !0
                })
            } else
                a.update({
                    disabled: !0
                }),
                c.update({
                    disabled: !0
                });
            return {
                resetFilterAction: a,
                changeFilterAction: c
            }
        }
        function qn(e, t) {
            const {view: i, fieldKey: n, field: r} = e;
            if (!r.hasOwnProperty("displaySignal"))
                return {};
            const {displaySignal: s} = r;
            return {
                toggleSignalAction: new t({
                    actionId: "Screener.ToggleVisibility.Rating",
                    options: {
                        label: s ? p.t(null, void 0, o(219445)) : p.t(null, void 0, o(59823)),
                        onExecute: () => {
                            i._table.toggleSignals(n),
                            (0,
                            Xt.sendSnowPlowData)(new Di.DispatchContextMenuActionEvent($n.ToggleSignal,"header",!s))
                        }
                    }
                })
            }
        }
        !function(e) {
            e.ActiveOnly = "active_only",
            e.ToggleDescription = "show_description",
            e.ToggleSymbolType = "show_symbol_type",
            e.TogglePrimaryOnly = "show_primary_only",
            e.RemoveColumn = "remove_column",
            e.ResetFilter = "reset_filter",
            e.ChangeFilter = "change_filter",
            e.ToggleSignal = "show_rating",
            e.ToggleShowCurrency = "toggle_show_currency"
        }($n || ($n = {}));
        var zn = o(793242)
          , Un = o(157234);
        const jn = "screener-market-select-mode";
        var Hn = o(35387)
          , Gn = o(67905)
          , Xn = o(491540)
          , Kn = o(779893);
        const Yn = o(625214).linking;
        o(236550);
        const {Delegate: Jn} = o(547465)
          , Zn = o(735566).getLogger("Screener.View")
          , {operators: Qn, fields: er} = o(606550)
          , tr = p.t(null, {
            context: "forex_screener_pairs_select"
        }, o(567132))
          , or = p.t(null, void 0, o(580066))
          , ir = p.t(null, void 0, o(882675))
          , nr = o(182951)
          , rr = o(891250)
          , sr = [-1, 10, 60]
          , lr = [-1, 10]
          , ar = {
            bonds: {
                yields: p.t(null, {
                    context: "Bonds"
                }, o(393630)),
                prices: p.t(null, {
                    context: "Bonds"
                }, o(290229))
            },
            crypto_mkt: {
                USD: "USD",
                BTC: "BTC"
            }
        }
          , cr = `<div class="tv-screener-table__search-query js-search-query ${Ze.description.disabled || !Ze.description.checked ? "tv-screener-table__search-query--without-description" : ""}">\n\t\t<input\n\t\t\ttype="text"\n\t\t\tautocomplete="off"\n\t\t\tclass="tv-screener-table__search-input js-search-input"\n\t\t/>\n\t\t<span class="tv-search-bar__search-icon tv-screener-table__search-icon">${o(62555)}</span>\n\t\t<span class="tv-search-bar__input-reset tv-screener-table__input-reset i-hidden js-input-reset">${o(83170)}</span>\n\t</div>`;
        class dr {
            constructor(e, t) {
                this._bridge = e,
                this._model = t,
                this._onWidget = e.onWidget,
                this._activeElem = null,
                this._changeSymbol = (0,
                Lt.default)(this._changeSymbol, 500),
                this._lifecycle = new Eo,
                this.sortedFields = Object.keys(Ze).filter((e => Boolean(vt(Ze[e])))),
                this._popups = new ao(t,this,e),
                this._dialog = new Co(t,this,e),
                this._disableStickyHeader = this._bridge.disableStickyHeader,
                this._periodPicker = e.period_picker,
                this._noDataString = e.no_data_string,
                this._isUnavailableWidgetMarket = e.isUnavailableWidgetMarket,
                this._periodPickerButtons = [{
                    id: "yesterday",
                    title: p.t(null, void 0, o(943320))
                }, {
                    id: "today",
                    title: p.t(null, void 0, o(205935))
                }, {
                    id: "tomorrow",
                    title: p.t(null, void 0, o(315404))
                }, {
                    id: "this_week",
                    title: p.t(null, void 0, o(847228))
                }, {
                    id: "next_week",
                    title: p.t(null, void 0, o(116468))
                }];
                const i = "undefined" === this._model.settingKey ? this._model.screener_type : this._model.settingKey;
                this._fields_order = this._model.settingsSaver.getJSON(i + ".fields_order", []),
                this._data = [],
                this._lastSetId = null,
                this.widthChange = new Jn,
                this._bridge.width && this._bridge.width.subscribe(( () => {
                    this.widthChange.fire()
                }
                )),
                this._$groupSelect = null,
                this._preventHighlightChanges = !1,
                this._table = Ln(this),
                this._model.fieldSetChanged.subscribe(null, (e => {
                    const t = {};
                    e.forEach((e => {
                        t[e] = Ze[e]
                    }
                    )),
                    this._table.setFields(t)
                }
                )),
                this._model.filterSetChanged.subscribe(null, ( () => {
                    this.$filterSetsButton.toggleClass("tv-screener-toolbar__button--unsaved", this._model.isFilterSetChanged())
                }
                )),
                this._table.fieldsOrderChange.subscribe(null, ( () => {
                    this._model.fieldsOrder.setValue(this._table.fieldsOrder),
                    this.$fieldSetsButton.toggleClass("tv-screener-toolbar__button--unsaved", this._model.isFieldSetChanged()),
                    this._model.settingsSaver.setJSON(i + ".fields_order", this._table.fieldsOrder, {
                        forceFlush: !0
                    })
                }
                ));
                let n = 0
                  , r = !1;
                this._model.loadingStart.subscribe(null, (e => {
                    e ? (r = !0,
                    this._bridge.standalone && (n = Kn(document).scrollTop()),
                    this._showSpinner(this.$bottomLoadingScreen)) : (n = 0,
                    this._model.isFastRefresh || this._showSpinner())
                }
                )),
                this._model.loadingStart.subscribe(null, ( () => this.resetRefreshCounter(!0))),
                this._model.loadingComplete.subscribe(null, ( () => {
                    r && this._bridge.standalone && 0 !== n && Kn(document).scrollTop() !== n ? (r = !1,
                    Kn(document).scrollTop(n),
                    n = 0) : this._bridge.standalone && this._isScrollBottom() && Kn(document).scrollTop(Kn(document).scrollTop() / 2),
                    this._hideSpinner(),
                    this.resetRefreshCounter()
                }
                )),
                this._model.eodRestriction.subscribe(( () => this.updateIntervalButton()), {
                    callWithLast: !0
                }),
                window.loginStateChange && window.loginStateChange.subscribe(null, ( () => {
                    if (this.resetRefreshCounter(),
                    "forex" === this._model.screener_type) {
                        const e = this._model.selectedGroups;
                        Ze.sector.value = Array.isArray(e) && e[0] === p.t(null, void 0, o(882675)) ? null : e,
                        this._$groupSelectButton && (this._$groupSelectButton.empty(),
                        this.updateGroupsButton(this._$groupSelectButton, e))
                    }
                }
                )),
                this._bridge.standalone && Kn(window).on("scroll", ( () => {
                    Kn(".js-dropdown-toggle.i-opened").trigger("resetPosition")
                }
                ));
                const s = (0,
                Lt.default)(( () => {
                    this._tempBusy = !1
                }
                ), 250)
                  , l = () => {
                    this._tempBusy || (this._tempBusy = !0),
                    s()
                }
                ;
                this._bridge.standalone && Kn(window).on("scroll", l),
                Kn(window).on("resize", l),
                this.widthChange.subscribe(this, l),
                this._bridge.standalone || this._model.loadingComplete.subscribe(null, ( () => {
                    this.isEndReached() ? (this.$content.addClass("tv-screener__content-pane--fully-loaded"),
                    this._table.$element.css("margin-bottom", -this._contentPadding)) : (this.$content.removeClass("tv-screener__content-pane--fully-loaded"),
                    this._table.$element.css("margin-bottom", ""))
                }
                )),
                TradingView.onChartPage && To.subscribe("screener.selected_type_on_chart", (e => {
                    this._model.changeScreenerType(e).then(( () => {
                        this._lastSetId = null,
                        this._popups.setMarketsList((0,
                        v.getMarketsByScreenerType)(this._model.screener_type)),
                        "forex" === this._model.screener_type ? this._$groupSelect.removeClass("i-hidden") : this._$groupSelect.addClass("i-hidden"),
                        this.updateIntervalButton(this._$selectIntervalButton, this._model.selectedIntervalId),
                        this._popups.updateRefreshIntervalsPopupContent()
                    }
                    )).then(( () => this.updateMarketButton())).catch((e => {
                        e && Zn.logError(e)
                    }
                    ))
                }
                ))
            }
            getSelectedSymbols() {
                return this._selectableList ? this._selectableList.getSelectedKeys() : []
            }
            getFocusedSymbol() {
                if (this._selectableList)
                    return this._selectableList.getFocusedKey()
            }
            registerHooksHandlers(e) {
                this._lifecycle.registerHandlers(e)
            }
            _isScrollBottom() {
                return Kn(window).scrollTop() + Kn(window).height() === Kn(document).height()
            }
            _initSelectableList() {
                this._selectableList = (0,
                Bt.createSelectableList)({
                    list: this.$content.get(0),
                    listItemClass: "tv-screener-table__result-row",
                    selectedListItemClass: "tv-screener-table__result-row--selected",
                    focusedListItemClass: "tv-screener-table__result-row--focused",
                    onNavigate: this._onSymbolsNavigate.bind(this),
                    onConfirm: this._onSymbolConfirm.bind(this),
                    getNodeKey: e => e.dataset.symbol
                })
            }
            _getThContent(e, t) {
                t || (t = Ze[e]);
                const i = _i(e, t) ? Kn(`<div class="tv-screener-table__head-wrap js-head-wrap apply-common-tooltip common-tooltip-fixed" title="${t.title}" data-field="${e}">`) : Kn(`<div class="tv-screener-table__head-wrap js-head-wrap" data-field="${e}">`);
                t.disableHeaderControl && i.addClass("tv-screener-table__head-wrap--disable-interaction");
                const n = Kn('<div class="tv-screener-table__head-left js-head-left"></div>').appendTo(i)
                  , r = Kn('<div class="tv-screener-table__head-left--text"></div>').appendTo(n)
                  , s = Kn(`<div class="js-head-title">${t.shortTitle || t.title}</div>`).appendTo(r);
                e === this._model.searchField && n.addClass(!Ze.description.disabled && Ze.description.checked ? "tv-screener-table__head-left--name-col" : this._onWidget ? "tv-screener-table__head-left--widget-name-col-without-description" : "tv-screener-table__head-left--name-col-without-description");
                const l = Kn(`<span class="tv-screener-table__sort js-table-sort ${this._model._sortField.value() === e ? `tv-screener-table__sort--${this._model._sortDirection.value()}` : ""}">${"asc" === this._model._sortDirection.value() ? nr : rr}</span>`);
                if (e === this._model.searchField) {
                    let e;
                    e = this._totalCount ? this._bridge.hide_load_more && this._bridge.page_size && this._totalCount >= this._bridge.page_size ? p.t(null, {
                        plural: "{number} matches",
                        count: this._bridge.page_size
                    }, o(646182)).format({
                        number: this._bridge.page_size
                    }) : p.t(null, {
                        plural: "{number} matches",
                        count: this._totalCount
                    }, o(646182)).format({
                        number: this._totalCount
                    }) : p.t(null, void 0, o(681982)),
                    Kn(`<div class="js-field-total tv-screener-table__field-value--total">${e}</div>`).appendTo(n),
                    this._onWidget || Kn(cr).appendTo(n)
                }
                let a = !1;
                if (t.control && !this._bridge.hide_controls) {
                    const t = Kn(`<i data-field="${e}" class="js-filter-button tv-screener-table__filter-button">${o(630001)}</i>`);
                    t.appendTo(i);
                    if (this.fieldValueString(e)) {
                        t.addClass("tv-screener-table__filter-button--active");
                        const o = Kn(`<span class="js-field-value tv-screener-table__field-value apply-overflow-tooltip${"name" === e ? " tv-screener-table__field-value--name" : ""}">${this.fieldValueString(e)}</span>`);
                        n.append(o),
                        a = !0
                    }
                }
                return l.appendTo(i),
                s.addClass(a ? "tv-screener-table__head-left--title-two-lines" : "tv-screener-table__head-left--title-three-lines"),
                i
            }
            _updateTableSortField() {
                const e = this._model._sortField.value()
                  , t = this._model._sortDirection.value();
                this._table.updateSortField(e, t)
            }
            setFieldActive(e, t, o) {
                this._dialog.$filtersPopup && (o || (o = this._dialog.$filtersPopup.find(`.js-filter-field-${e.replace(/\W/g, "")}`)),
                o && o.size() && o.toggleClass("tv-screener-dialog__filter-field--active", t))
            }
            _resetSearchCount() {
                const e = this._getThContent(this._model.searchField).find(".js-field-total").text();
                this._table.setSearchText(e)
            }
            _resetField(e) {
                this.setFieldActive(e, this._model.fieldActive(e));
                const t = this._getThContent(e);
                if ("name" === e && this._lifecycle.beforeAppendSymbolsHeader(t.get(0)),
                this._table.setThContent(e, t),
                !this._dialog.$filtersPopup && this.$inplaceEditor && e === this._inplaceEditorField) {
                    const t = !this._isFilterValueEmpty(e)
                      , o = this.$inplaceEditor.find(".js-reset")
                      , i = this.$inplaceEditor.find(".js-wrap");
                    t ? (o.removeClass("i-hidden"),
                    i.removeClass("tv-screener-inplace-editor__filter-without-reset"),
                    this.$inplaceEditor.removeClass("tv-screener-inplace-editor__without-reset")) : (o.addClass("i-hidden"),
                    i.addClass("tv-screener-inplace-editor__filter-without-reset"),
                    this.$inplaceEditor.addClass("tv-screener-inplace-editor__without-reset"))
                }
            }
            _setupStickyHeader() {
                if (this._disableStickyHeader)
                    return;
                const e = this._table.$stickyHeader;
                e.insertBefore(this.$content);
                const t = Kn('<span class="tv-screener-sticky-header-wrapper__right-substrate"></span>').prependTo(this.$content);
                let n = Math.round(this.$toolbar.outerHeight());
                if (new ResizeObserver(( () => this.onResizeToolbar())).observe(this.$toolbar[0]),
                (0,
                vi.isMarketPage)(this._bridge))
                    Si(this);
                else if (this._bridge.standalone) {
                    const o = 148;
                    let i;
                    this.$toolbar.toggleClass("tv-screener-toolbar--standalone_sticky", !0).css({
                        top: o
                    }),
                    this._bridge.$body.css({
                        "padding-top": n
                    }),
                    e.css({
                        top: n
                    });
                    const r = (i, r) => {
                        r || (r = Kn(document).scrollTop()),
                        this._bridge.$body.css({
                            "padding-top": n
                        }),
                        this.$toolbar.css({
                            top: i ? 0 : o - r
                        }),
                        e.css({
                            top: n
                        }),
                        t.css({
                            top: i ? n : 0
                        })
                    }
                      , s = e => Kn(document).scrollTop() - (this.$content.offset().top - e) > 0;
                    Kn(document).on("scroll", ( () => {
                        n = Math.round(this.$toolbar.outerHeight());
                        const o = Kn(document).scrollTop()
                          , l = Kn(document).scrollLeft();
                        let a;
                        this._onWidget || (a = s(n),
                        r(a, o),
                        this._$mainContainer.css("top", -o)),
                        e.toggleClass("tv-screener-sticky-header-wrapper--standalone_sticky", a);
                        const c = (0,
                        Gt.isRtl)() ? document.body.clientWidth - this.$content[0].getBoundingClientRect().right : -l;
                        e.css({
                            [(0,
                            Gt.isRtl)() ? "right" : "left"]: a ? c : "auto"
                        }),
                        t.toggleClass("tv-screener-sticky-header-wrapper__right-substrate--standalone_sticky", a),
                        i !== a && this.updateToolbarButtons(),
                        i = a,
                        this.$bottomLoadingScreen.css({
                            left: l
                        })
                    }
                    )),
                    Kn(window).on("resize", ( () => {
                        this.fixStandaloneWidth(),
                        n = Math.round(this.$toolbar.outerHeight());
                        const e = s(n);
                        r(e),
                        this.onResizeToolbar()
                    }
                    )),
                    this.fixStandaloneWidth(),
                    this._table.afterFixCols.subscribe(null, ( () => {
                        this.fixStandaloneHorizontalScroll()
                    }
                    ))
                } else {
                    this._bridge.$body.css({
                        overflow: "hidden"
                    });
                    let o = !1
                      , n = !1;
                    this.onResizeToolbar();
                    const r = () => {
                        const o = Math.round(e.outerHeight());
                        t.css({
                            top: -o
                        }),
                        this.$content.css({
                            top: o
                        }),
                        this._table.$element.css({
                            top: -o,
                            position: "relative"
                        })
                    }
                    ;
                    (TradingView.onChartPage || this._onWidget) && r(),
                    this.$content.on("scroll", ( () => {
                        (0,
                        i.hide)(),
                        Fo.PopupColorSelector.hide(),
                        (0,
                        Gt.isRtl)() ? e.css("right", -(this.$content[0].scrollWidth - this.$content[0].clientWidth - (0,
                        Gt.getLTRScrollLeft)(this.$content[0]))) : e.css("left", -this.$content.scrollLeft()),
                        this._onWidget && this._bridge.hide_controls && e.css({
                            top: 0
                        })
                    }
                    )),
                    TradingView.onChartPage && Kn(document).on("scroll", ( () => {
                        window.innerWidth <= $t.breakpoints.tablet && (o = this.$content.get(0).getBoundingClientRect().top < 0),
                        e.toggleClass("tv-screener-sticky-header-wrapper--standalone_sticky", o),
                        n !== o && e.css({
                            left: o ? -this.$content.scrollLeft() : 0
                        }),
                        n = o
                    }
                    ))
                }
                this._bridge.hide_controls || (this.$headerFieldsButton = Kn(`<div class="tv-screener-sticky-header-wrapper__fields-button apply-common-tooltip common-tooltip-vertical common-tooltip-otl" title="${p.t(null, void 0, o(156194))}">\n\t\t\t\t${o(407499)}\n\t\t\t</div>`).appendTo(e),
                this.$headerFieldsButton.attr({
                    "data-name": "header_fields-button"
                }),
                this._popups.setFieldsPopup(this.$headerFieldsButton, "tv-screener-sticky-header-wrapper__fields-button-wrap", "tv-dropdown__body--position_right")),
                this._model.loadingComplete.subscribe(null, ( () => {
                    t.show()
                }
                ), !0)
            }
            _showSpinner(e=this.$loadingScreen) {
                e.removeClass("js-hidden"),
                clearTimeout(this._spinnerTimeoutId),
                this._spinner || (this._spinnerTimeoutId = setTimeout(( () => {
                    this._spinner = (new ko.Spinner).spin(e.get(0))
                }
                ), 100))
            }
            _hideSpinner() {
                this.$loadingScreen.addClass("js-hidden"),
                this.$bottomLoadingScreen.addClass("js-hidden"),
                clearTimeout(this._spinnerTimeoutId),
                this._spinner && (this._spinner.stop(),
                delete this._spinner)
            }
            _getResizerBridgeWidth() {
                return window.widgetbar ? (0,
                hi.getWidgetBarPadding)(window.widgetbar.resizerBridge.width.value()) : 0
            }
            fixStandaloneWidth() {
                if (this._bridge.standalone) {
                    this._bridge.$body.css({
                        "padding-right": "",
                        "padding-left": ""
                    });
                    const e = this._getResizerBridgeWidth()
                      , t = (0,
                    Gt.isRtl)() ? "padding-left" : "padding-right";
                    this.$toolbar.width(Kn(window).width() - e),
                    this._$mainHeader.css({
                        [t]: e
                    }),
                    this.updateToolbarButtons(),
                    this._table && this._table._$emptyMessage && !(0,
                    vi.isMarketPage)(this._model._bridge) && this._table._$emptyMessage.css({
                        width: `calc(100% - ${e}px`
                    }),
                    this.widthChange.fire()
                }
            }
            fixStandaloneHorizontalScroll() {
                if (this._bridge.standalone) {
                    const e = this._getResizerBridgeWidth()
                      , t = this._table.$element.width() + ((0,
                    Gt.isRtl)() ? 0 : e)
                      , o = Kn(window).width() < t
                      , i = (0,
                    Gt.isRtl)() ? "padding-left" : "padding-right";
                    this._bridge.$body.css({
                        [i]: o ? t : ""
                    }),
                    this.$toolbar.width(Kn(window).width() - e),
                    this.updateToolbarButtons()
                }
            }
            prepareLayout() {
                this._bridge.$body.addClass("tv-screener" + (this._bridge.standalone ? " tv-screener--standalone" : "")),
                this.$loadingScreen = Kn(`<div class="tv-screener__loading-screen${this._bridge.standalone && !this._bridge.table_loading_screen ? " tv-screener__loading-screen--standalone" : ""}">`).appendTo(this._bridge.$body),
                this.$toolbar = Kn(`<div class="tv-screener-toolbar${this._bridge.standalone ? " tv-screener-toolbar--standalone" : ""} ${this._disableStickyHeader ? "tv-screener-toolbar--markets" : ""}">`).appendTo(this._bridge.$body),
                this.$toolbar.on("contextmenu", (function(e) {
                    e.preventDefault()
                }
                )),
                Kn(".tv-screener__content-pane").remove(),
                this.$content = Kn('<div class="tv-screener__content-pane" tabindex="100">').data({
                    localScroll: !this._bridge.standalone
                }).appendTo(this._bridge.$body),
                this.$content.on("contextmenu", (function(e) {
                    e.target.classList.contains("tv-screener__content-pane") && e.preventDefault()
                }
                )),
                this.$bottomLoadingScreen = Kn('<div class="tv-screener__bottom-loading-screen">').appendTo(this._bridge.$body),
                this._$mainContainer = Kn(".tv-screener__standalone-main-container"),
                this._$mainHeader = this._$mainContainer.find(".tv-header"),
                this._onWidget || (this.$refreshButton = Kn(`<div class="tv-screener-toolbar__button tv-screener-toolbar__button--with-options tv-screener-toolbar__button--refresh apply-common-tooltip common-tooltip-fixed" title="${p.t(null, void 0, o(110430))}"></div>`).attr({
                    "data-name": "screener-refresh",
                    "data-role": "button"
                }).append(Kn(o(820713)).attr({
                    class: "tv-screener-toolbar__button-icon tv-screener-toolbar__button-icon--standalone-refresh",
                    width: "18",
                    height: "18"
                })).appendTo(this.$toolbar),
                this.$refreshCounter = Kn('<span class="tv-screener-toolbar__refresh-counter">').text("00:00").appendTo(this.$refreshButton),
                this.$refreshIntervalButton = Kn(`<div class="tv-screener-toolbar__button tv-screener-toolbar__button--options tv-screener-toolbar__button--space_right apply-common-tooltip common-tooltip-fixed" title="${p.t(null, void 0, o(754010))}"></div>`).attr({
                    "data-name": "screener-refresh-interval",
                    "data-role": "button"
                }).append(Kn(o(407499)).attr({
                    width: 3,
                    height: 13,
                    class: "tv-screener-toolbar__button-icon",
                    style: "top: -1px"
                })).appendTo(this.$toolbar));
                const e = this._model.currentFieldSetId()
                  , t = this._model.getFieldSetById(e);
                this.$fieldSetsButton = Kn(`<div class="tv-screener-toolbar__button tv-screener-toolbar__button--animated\n\t\t\ttv-screener-toolbar__button--with-options tv-screener-toolbar__button--arrow-down\n\t\t\ttv-screener-toolbar__button--with-state apply-common-tooltip common-tooltip-fixed js-field-sets" title=" ${p.t(null, void 0, o(559798))}">\n\t\t\t\t${t ? t.title : ""}\n\t\t\t</div>`).attr({
                    "data-name": "screener-field-sets",
                    "data-role": "button",
                    "data-field-set": e
                }).appendTo(this.$toolbar),
                this.$fieldsButton = Kn(`<div class="tv-screener-toolbar__button tv-screener-toolbar__button--options\n\t\t\ttv-screener-toolbar__button--square apply-common-tooltip common-tooltip-fixed\n\t\t\ttv-screener-toolbar__button--space_right" title=" ${p.t(null, void 0, o(156194))}">`).attr({
                    "data-name": "screener-fields",
                    "data-role": "button"
                }).append(Kn(o(944499)).attr({
                    class: "tv-screener-toolbar__button-icon"
                })).appendTo(this.$toolbar),
                this.$favoritesBar = Kn('<div class="tv-screener-toolbar__favorites">').appendTo(this.$toolbar),
                this.$periodPicker = Kn('<div class="tv-screener-toolbar__period-picker">').appendTo(this.$toolbar);
                const i = ar[this._model.screener_type];
                i && (this._createSwitch(i),
                this.$toolbar.addClass("tv-screener-toolbar--one-line"));
                const n = this._model.currentFilterSetId()
                  , r = this._model.getFilterSetById(n);
                this.$filterSetsButton = Kn(`<div class="tv-screener-toolbar__button tv-screener-toolbar__button--with-options\n\t\t\ttv-screener-toolbar__button--arrow-down tv-screener-toolbar__button--with-state\n\t\t\tapply-common-tooltip common-tooltip-fixed js-filter-sets" title="${p.t(null, void 0, o(196428))}">`).attr({
                    "data-name": "screener-filter-sets",
                    "data-role": "button",
                    "data-filter-set": n
                }).appendTo(this.$toolbar),
                this.$filterSetsButtonTitle = Kn(`<span>${r ? r.title : ""}</span>`).appendTo(this.$filterSetsButton),
                this.$filtersButton = Kn(`<div class="tv-screener-toolbar__button tv-screener-toolbar__button--options tv-screener-toolbar__button--filters apply-common-tooltip i-disabled common-tooltip-fixed" title="${p.t(null, void 0, o(54494))}">${p.t(null, void 0, o(846994))}</div>`).attr({
                    "data-name": "screener-filter",
                    "data-role": "button"
                }).append(Kn(o(630001)).attr({
                    class: "tv-screener-toolbar__button-icon tv-screener-toolbar__button-icon--filters"
                })).appendTo(this.$toolbar),
                this._model.loadingComplete.subscribe(null, ( () => {
                    this.$filtersButton.removeClass("i-disabled")
                }
                ), !0);
                const s = Kn('<div class="tv-screener-toolbar__filter-count-wrap">').on("click", ( () => {
                    this.showActiveFilters(),
                    (0,
                    Xt.sendSnowPlowData)(new po("filter_counter_button",this._getFiltersCounterValue()))
                }
                )).appendTo(this.$toolbar);
                if (this.$filterCount = Kn(`<span class="tv-screener-toolbar__filter-count js-hidden apply-common-tooltip common-tooltip-vertical common-tooltip-otl" title="${p.t(null, void 0, o(200803))}">`).attr({
                    "data-name": "screener-filter-count",
                    "data-role": "button"
                }).appendTo(s),
                this._table.$element.appendTo(this.$content),
                this.initHandlers(),
                this._bridge.selection_disabled || this._initSelectableList(),
                this._onWidget && this._bridge.hide_controls && (this._contentPadding = this.$content.innerHeight() - this.$content.height(),
                this.$content.css("height", `calc(100% - ${this._contentPadding}px)`),
                this.$toolbar.hide()),
                this._bridge.hide_controls)
                    [this.$refreshButton, this.$refreshIntervalButton, this.$fieldSetsButton, this.$fieldsButton, this.$filterSetsButton, this.$filtersButton, this.$filterCount].forEach((e => {
                        e && e.hide()
                    }
                    )),
                    this._onWidget && (this._bridge.$body.addClass("tv-screener--hidden-toolbar"),
                    this.$loadingScreen.addClass("tv-screener__loading-screen--hidden-toolbar"));
                else {
                    this._onWidget || (this._$selectIntervalButton = this.addIntervalSelect({
                        $before: this.$filterSetsButton
                    }).attr({
                        "data-name": "screener-time-interval",
                        "data-role": "button"
                    }),
                    this._$downloadButton = Kn(`<div class="tv-screener-toolbar__button tv-screener-toolbar__button--space_right tv-screener-toolbar__button--export apply-common-tooltip common-tooltip-fixed i-disabled" title="${p.t(null, void 0, o(301093))}"></div>`).attr({
                        "data-name": "screener-export-data",
                        "data-role": "button"
                    }).append(Kn(o(764162)).attr({
                        class: "tv-screener-toolbar__button-icon tv-screener-toolbar__button-icon--export"
                    })),
                    this._$downloadButton.insertBefore(this._$selectIntervalButton),
                    this._$downloadButton.on("click", (e => {
                        (0,
                        Rt.runOrGoPro)(( () => {
                            this._$downloadButton.toggleClass("i-loading", !0),
                            this._model.getDownloadData().then((e => {
                                const [t,...o] = this._table.columnsOrder
                                  , i = [t, "description", ...o];
                                try {
                                    const t = function(e, t, o, i) {
                                        const n = new Map
                                          , r = [];
                                        for (const e of t)
                                            r.push(Ze[e].title),
                                            n.set(e, oi(o, e));
                                        const s = [r];
                                        for (const t of e) {
                                            const e = [];
                                            for (const [r,s] of Array.from(n.entries())) {
                                                const n = Ze[r]
                                                  , l = t.d[s];
                                                if (null === l)
                                                    e.push("");
                                                else if (Qo.includes(r))
                                                    e.push((0,
                                                    G.triesTranslateScreenerData)(l));
                                                else if ("earnings_release_date" === r || "earnings_release_next_date" === r) {
                                                    const t = pt(n, i, !1);
                                                    e.push(t.format(l))
                                                } else if (n.signalComputation)
                                                    ti.includes(r) ? e.push(n.signalComputation(l).title) : e.push(l.toString());
                                                else {
                                                    const i = n.additionalColumns ? n.additionalColumns.map((e => t.d[oi(o, e)])) : [];
                                                    if (n.mutateDisplayValue && !ei.includes(r))
                                                        e.push(n.mutateDisplayValue(l, ...i, r));
                                                    else if ("candlestick" === r && n.additionalColumns) {
                                                        const {additionalColumns: t} = n
                                                          , o = ni(i);
                                                        if (0 === o.length)
                                                            e.push("");
                                                        else {
                                                            const i = o.map((e => t[e])).map(ri).filter(Boolean).map((e => e.name)).join(", ");
                                                            e.push(i)
                                                        }
                                                    } else
                                                        e.push(l.toString())
                                                }
                                            }
                                            s.push(e)
                                        }
                                        return s
                                    }(e.data, i, this._model.getRequestColumns(), this._model.screener_type)
                                      , o = t.map(ii).join("\r\n")
                                      , n = li.dateFormatFunctions["yyyy-MM-dd"](new Date, !0)
                                      , r = `${this._model.markets.join("_")}_${n}.csv`;
                                    (0,
                                    Mo.saveTextFile)(r, o, "text/csv")
                                } catch (e) {
                                    Zn.logError(e.toString())
                                }
                                this._$downloadButton.toggleClass("i-loading", !1),
                                this._model.trackEvent("Export screener data")
                            }
                            ))
                        }
                        ), Ht.ProductFeaturesEnum.SCREENER_EXPORT_DATA, {
                            feature: "screenerExportData"
                        }),
                        (0,
                        Xt.sendSnowPlowData)(new di)
                    }
                    )),
                    this._model.loadingComplete.subscribe(null, ( () => {
                        this._$downloadButton.removeClass("i-disabled")
                    }
                    ), !0));
                    const e = this.addMarketSelect({
                        $before: this.$filterSetsButton
                    })
                      , t = Kn('<div class="tv-screener-toolbar__market-count-wrap">').on("click", ( () => {
                        this._showMarketsDialog()
                    }
                    ));
                    this.$marketCount = Kn(`<span class="tv-screener-toolbar__filter-count tv-screener-toolbar__filter-count--market-count js-hidden apply-common-tooltip common-tooltip-vertical common-tooltip-otl" title="${p.t(null, void 0, o(482673))}">`).attr({
                        "data-name": "screener-market-count",
                        "data-role": "button"
                    }).appendTo(t),
                    Kn(e).after(t),
                    this._$groupSelectButton = this.addGroupSelect({
                        $before: this.$filterSetsButton
                    }),
                    this._popups.setFieldsPopup(this.$fieldsButton, "tv-screener-toolbar__button-wrap"),
                    this._popups.setFieldSetsPopup(this.$fieldSetsButton),
                    this._popups.setFilterSetsPopup(this.$filterSetsButton),
                    this._onWidget || this._popups.setRefreshIntervalsPopup(this.$refreshIntervalButton)
                }
                var l;
                (l = this._model.timezone) && l !== K && (K = l),
                this._periodPicker ? (at(),
                this._selectedPeriodId = "today",
                this._setNewEarningsPeriod(this._selectedPeriodId),
                this.updatePeriodPicker(),
                this.$favoritesBar.hide(),
                Ze.earnings_release_next_date.onFilterChange = e => {
                    const t = this._periodPickerButtons.find((t => t.title === e));
                    this.changeEarningsPeriod(t ? t.id : "", !0)
                }
                ) : this.$periodPicker.hide(),
                this._showSpinner(),
                this.updateToolbarButtons(),
                this.onResizeToolbar()
            }
            onResizeToolbar() {
                if (this._disableStickyHeader)
                    return;
                if (this._table.$stickyHeader.position().top < 0)
                    return;
                const e = Math.round(this.$toolbar.outerHeight());
                (0,
                vi.isExternalWidget)(this._bridge) && this._bridge.hide_controls ? this._table.$stickyHeader.css({
                    top: 0
                }) : this._table.$stickyHeader.css({
                    top: e
                })
            }
            showMaintenance() {
                this._bridge.$body.html(`<div class="tv-screener__maintenance">${p.t(null, void 0, o(673937))}</div>`)
            }
            initHandlers() {
                this.$toolbar.on("hover", this.adjustToolbarWidth.bind(this)),
                this.$fieldSetsButton.on("transitionend", this.updateToolbarButtons.bind(this));
                const e = e => {
                    const t = e.data("field");
                    if (!1 === Ze[t].sortableColumn)
                        return;
                    const o = this._model._sortField.value()
                      , i = this._model._sortDirection.value();
                    Ze[t].disableHeaderControl || (o === t && this._model._sortDirection.setValue("asc" === i ? "desc" : "asc"),
                    this._model._sortField.setValue(t),
                    this._model.update())
                }
                ;
                if (Ci.mobiletouch) {
                    (new Do).load().then((t => {
                        const o = new t(Kn(".tv-screener")[0],{
                            touchAction: "auto"
                        });
                        o.get("press").set({
                            time: 500
                        }),
                        o.on("press", (e => {
                            const t = Kn(e.target).closest(".js-head-wrap");
                            if (t.length) {
                                Rn({
                                    view: this,
                                    fieldKey: Kn(t).data("field"),
                                    e: e.srcEvent
                                })
                            }
                            e.preventDefault()
                        }
                        )),
                        o.on("tap", (t => {
                            if (Kn(t.target).closest(".js-search-input").length)
                                return;
                            const o = Kn(t.target).closest(".js-head-wrap");
                            o.length && e(o)
                        }
                        ))
                    }
                    ))
                } else
                    Kn(".tv-screener").on("click", ".js-head-wrap", (t => {
                        const o = Kn(t.currentTarget);
                        e(o),
                        t.stopPropagation()
                    }
                    )).on("contextmenu", ".js-head-wrap", (e => {
                        Rn({
                            view: this,
                            fieldKey: Kn(e.currentTarget).data("field"),
                            e
                        }),
                        e.preventDefault()
                    }
                    )),
                    Kn(".tv-screener").on("click", ".js-filter-button", (e => {
                        const t = Kn(e.currentTarget).closest("th")
                          , o = t.data("field");
                        this.showInplaceEditor(o, t),
                        e.stopPropagation()
                    }
                    ));
                Kn(".tv-screener").on("click", ".js-search-input", (e => {
                    e.stopPropagation()
                }
                )),
                Kn(".tv-screener").on("click", ".js-input-reset", (e => {
                    Kn(e.currentTarget).addClass("i-hidden"),
                    Kn(".tv-screener").find(".js-search-input").val(""),
                    Ze[this._model.searchField].searchValue = "",
                    this._model.update(),
                    e.stopPropagation()
                }
                )),
                Kn(".tv-screener").on("click", ".js-filter-button", (e => {
                    const t = Kn(e.currentTarget).closest("th")
                      , o = t.data("field");
                    this.showInplaceEditor(o, t),
                    e.stopPropagation()
                }
                )),
                this._bridge.table_context_menu_disabled || this._initTableContextMenu(),
                this.$content.on("scrolltoend", (e => {
                    this._model.loading || this._model.update(null, !0)
                }
                )),
                this.$refreshButton && this.$refreshButton.click((e => {
                    (0,
                    ai.runOrSignIn)(( () => {
                        this._model.loading || this.refresh(),
                        (0,
                        Xt.sendSnowPlowData)(new no)
                    }
                    ), {
                        source: "Screener refresh button"
                    })
                }
                )),
                this.$filtersButton.click(( () => {
                    this._dialog.showFiltersDialog(),
                    (0,
                    Xt.sendSnowPlowData)(new po("filter_button",this._getFiltersCounterValue()))
                }
                )),
                Yn.proSymbol.subscribe((e => {
                    const t = this.$content.find(`[data-symbol="${e}"]`).get(0);
                    this._setActiveElem(t),
                    this._selectableList && (t ? this._selectableList.focusItem(t) : this._selectableList.clear())
                }
                )),
                this.$fieldSetsButton.on("click", ( () => {
                    this._lastSetId = null
                }
                )),
                this.$toolbar.on("click", ".js-favorite-item", (e => {
                    const t = Kn(e.currentTarget).attr("data-set");
                    this._lastSetId !== t && (this._model.preventPrevScanRequest(),
                    this.updateSetId(t, !1, this._bridge.hide_controls)),
                    (0,
                    Xt.sendSnowPlowData)(new Yt("columnset_favorites_picker",t))
                }
                )),
                this.$toolbar.on("click", ".js-period-picker-item", (e => {
                    const t = Kn(e.currentTarget).attr("data-period");
                    this.changeEarningsPeriod(t)
                }
                )),
                Kn(window).resize((e => this.updateToolbarButtons())),
                this._bridge.width && this._bridge.width.subscribe(( () => this.updateToolbarButtons())),
                this._bridge.visible && this._bridge.visible.subscribe((e => {
                    e && (this.updateToolbarButtons(),
                    this.adjustToolbarWidth())
                }
                )),
                this.updateFavoritesToolbar()
            }
            _initTableContextMenu() {
                this.$content.on("contextmenu", ".tv-screener-table__result-row", (e => {
                    const t = Kn(e.currentTarget).data("symbol");
                    this._selectableList && this._selectableList.focusItem(e.currentTarget),
                    function(e) {
                        const t = (0,
                        Ei.ticker)(e.symbol);
                        Ai({
                            ...e,
                            shortName: t
                        }, Oi, xi.Table)
                    }({
                        view: this,
                        symbol: t,
                        e
                    }),
                    e.preventDefault()
                }
                ))
            }
            _onSymbolsNavigate(e) {
                const t = e.cursor;
                if (t) {
                    if (TradingView.onChartPage && this._setActiveElem(t),
                    ["sector", "industry"].includes(this._model.screener_type))
                        return;
                    const e = t.dataset.symbol;
                    this._changeSymbol(e)
                }
            }
            _changeSymbol(e) {
                const t = Yn.preventFeedBySymbol;
                Yn.setPreventFeedBySymbol(!0),
                Yn.setSymbolAndLogInitiator(e, "screener"),
                Yn.setPreventFeedBySymbol(t),
                this._model.trackEvent("Change symbol from table")
            }
            _setActiveElem(e) {
                this._activeElem && this._activeElem.classList.remove("tv-screener-table__result-row--active"),
                e ? (e.classList.add("tv-screener-table__result-row--active"),
                this._activeElem = e) : this._activeElem = null
            }
            _onSymbolConfirm(e) {
                e.items.forEach((t => {
                    const o = t.dataset.symbol;
                    o && this._lifecycle.afterSymbolConfirm(o, e.action)
                }
                ))
            }
            changeEarningsPeriod(e, t=!1) {
                if (this._selectedPeriodId === e)
                    return;
                this._selectedPeriodId = e,
                this.updatePeriodPicker(),
                this._model.applyFieldSetContent(_);
                "tomorrow" === e || "next_week" === e ? (Ze.earnings_per_share_fq.mutateDisplayValue = () => ct,
                Ze.eps_surprise_fq.mutateDisplayValue = () => ct,
                Ze.eps_surprise_percent_fq.mutateDisplayValue = () => ct,
                Ze.revenue_fq.mutateDisplayValue = () => ct) : ht(),
                t || this._setNewEarningsPeriod(e, ( () => {
                    this._resetField("earnings_release_next_date"),
                    this._model.preventPrevScanRequest(),
                    this._model.update()
                }
                ))
            }
            _setNewEarningsPeriod(e, t= () => {}
            ) {
                const o = Ze.earnings_release_next_date.sourceRange.find((t => t.key === e));
                o && (Ze.earnings_release_next_date.value = o.name,
                t())
            }
            get totalCount() {
                return this._totalCount
            }
            get itemsCount() {
                return this._itemsCount
            }
            set itemsCount(e) {
                this._itemsCount = +e
            }
            set lastSetId(e) {
                this._lastSetId = e
            }
            get popups() {
                return this._popups
            }
            isEndReached() {
                return 0 === this._data.length || "number" == typeof this._totalCount && this._data.length >= this._totalCount
            }
            display(e, t, o) {
                if (this._hideSpinner(),
                this._setFiltersCount(),
                this._setMarketsCount(),
                this.$filterSetsButton.toggleClass("tv-screener-toolbar__button--unsaved", this._model.isFilterSetChanged()),
                !e || e.error || !e.data && !e.symbols)
                    "abort" !== o && (this.resetItems(),
                    this._table.setColumnsMap(t),
                    this._table.update([]),
                    this._resetField("name"),
                    "error" === o ? Zn.logError(e.responseText || o) : e && e.error && Zn.logError(e.error));
                else {
                    let o = e.data || e.symbols;
                    for (let e = 0; e < o.length; ++e)
                        o[e].f && (o[e].d = o[e].f);
                    if (void 0 === this._totalCount)
                        this._bridge.table_style || this.fixStandaloneWidth(),
                        this._table.setColumnsMap(t),
                        this._table.update(o),
                        this._data = o;
                    else {
                        const e = this._getInvalidatedFrom(o);
                        0 === e ? (this._data = o,
                        this._table.setColumnsMap(t),
                        this._table.update(o)) : (e > 0 ? (o = o.slice(e),
                        this._data = this._data.slice(0, e),
                        this._table.clearData(e)) : o = o.slice(this._data.length),
                        this._data = this._data.concat(o),
                        this._table.setColumnsMap(t),
                        this._table.append(o))
                    }
                    setTimeout(( () => this.highlightChanges()), 0),
                    this._totalCount = e.totalCount,
                    this._resetSearchCount(),
                    this._model._initialSortField && (this._model._sortField.setValue(this._model._initialSortField, !0),
                    this._model._sortDirection.setValue(this._model._initialSortDirection, !0),
                    delete this._model._initialSortField,
                    delete this._model._initialSortDirection)
                }
            }
            _getInvalidatedFrom(e) {
                for (let t = 0; t < this._data.length; ++t) {
                    if (!e[t] || this._data[t].s !== e[t].s || !e[t].d)
                        return t;
                    for (let o = 0; o < this._data[t].d.length; ++o)
                        if (this._data[t].d[o] !== e[t].d[o])
                            return t
                }
                return -1
            }
            get table() {
                return this._table
            }
            resetItems() {
                delete this._totalCount,
                this._data = []
            }
            _getFiltersCounterValue() {
                const e = this._model.currentFilterState();
                return e.filters && Object.keys(e.filters).length || 0
            }
            _setFiltersCount() {
                const e = this._getFiltersCounterValue();
                this.$filterCount.text(`${e}`).toggleClass("js-hidden", !e)
            }
            _setMarketsCount() {
                const e = this._model.markets.length;
                this.$marketCount && this.$marketCount.text(`${e}`).toggleClass("js-hidden", 1 === e || this._model.isEntireWorld)
            }
            _concatFieldValues(e, t) {
                var o = [];
                return e.forEach((e => {
                    o.push(this._getFieldValueFromRangeTitles(e, t))
                }
                )),
                o.join(", ")
            }
            _getFieldValueFromRangeTitles(e, t, o=!1) {
                return Ze[t].rangeTitles && Ze[t].rangeTitles[e] ? Ze[t].rangeTitles[e][o ? 1 : 0] : "string" != typeof e ? "" : e
            }
            fieldValueString(e) {
                const t = Ze[e].value;
                if (Re(t) || !1 === t)
                    return "";
                if ("select" === Ze[e].control) {
                    const i = p.t(null, {
                        plural: "{number} items",
                        count: t.length,
                        context: "combobox_input"
                    }, o(432121)).format({
                        number: t.length
                    });
                    return Array.isArray(t) ? `<span title="${this._concatFieldValues(t, e)}" class="apply-common-tooltip">${i}</span>` : this._getFieldValueFromRangeTitles(t, e, "dr" === t && "name" === e)
                }
                return "range" === Ze[e].control ? Array.isArray(t) ? this._rangeLeftValue(e) + " – " + this._rangeRightValue(e) : "" : "toggle" === Ze[e].control ? -1 !== e.toLowerCase().indexOf("high") ? p.t(null, void 0, o(980121)) : p.t(null, void 0, o(478104)) : "condition" !== Ze[e].control || Re(t.operator) || Re(t.value) ? "" : "in_range" === t.operator ? t.value[0] === t.value[1] ? Qn.equal + " " + t.value[0] : -1e100 === t.value[0] || this._isLessThenMin(t.value[0], e) ? Qn.less + " " + t.value[1] : 1e100 === t.value[1] || this._isGreaterThenMax(t.value[1], e) ? Qn.greater + " " + t.value[0] : this._rangeLeftValue(e) + " – " + this._rangeRightValue(e) : "not_in_range" === t.operator ? t.value[0] === t.value[1] ? Qn.nequal + " " + t.value[0] : -1e100 === t.value[0] || this._isLessThenMin(t.value[0], e) ? Qn.greater + " " + t.value[1] : 1e100 === t.value[1] || this._isGreaterThenMax(t.value[1], e) ? Qn.less + " " + t.value[0] : `${Qn.not_in_range} ${this._rangeLeftValue(e)} – ${this._rangeRightValue(e)}` : Qn[t.operator] + " " + ("number" == typeof t.value ? t.value : Ze[t.value].title)
            }
            updateToolbarButtons() {
                this._bridge.period_picker ? this.updatePeriodPicker() : this._bridge.originalStandalone && this.updateOldFavoritesToolbar()
            }
            updateOldFavoritesToolbar() {
                this.$hiddenFavoritesButtonWrap && this.$hiddenFavoritesButtonWrap.hide(),
                this.$favoritesBar.find(".js-favorite-item").remove();
                let e = 0;
                this.hiddenFavorites = [];
                const t = this.$favoritesBar.width()
                  , i = "forex" !== this._model.screener_type || this._bridge.hide_controls ? 40 : 160
                  , n = e => e === this._model.currentFieldSetId();
                if (this._model.favoriteFieldSets) {
                    let o = null;
                    for (let r = 0; r < this._model.favoriteFieldSets.length; ++r) {
                        const s = this._model.favoriteFieldSets[r]
                          , l = this._model.getFieldSetById(s);
                        if (!l)
                            return;
                        const a = Kn(`<div class="tv-screener-toolbar__favorites-item js-favorite-item" data-set="${l.id}">\n\t\t\t\t\t${(0,
                        xo.htmlEscape)(l.title)}\n\t\t\t\t</div>`).toggleClass("tv-screener-toolbar__favorites-item--active", n(l.id));
                        o ? a.insertAfter(o) : a.prependTo(this.$favoritesBar);
                        let c = a.outerWidth();
                        a[0].scrollWidth > c && a.addClass("apply-common-tooltip").attr("title", l.title),
                        c += 9,
                        e += c,
                        e + i > t ? (e -= c,
                        a.remove(),
                        this.hiddenFavorites.push({
                            id: l.id,
                            title: l.title
                        })) : o = a
                    }
                }
                if (this.hiddenFavorites.length) {
                    if (this.hiddenFavorites.length === this._model.favoriteFieldSets.length && this.$hiddenFavoritesButtonWrap)
                        return void this.$hiddenFavoritesButtonWrap.hide();
                    if (this.$hiddenFavoritesButtonWrap)
                        this.$hiddenFavoritesButtonWrap.trigger("resetContent").show();
                    else {
                        const e = Kn(`<div class="tv-screener-toolbar__favorites-item tv-screener-toolbar__favorites-more apply-common-tooltip common-tooltip-fixed" title="${p.t(null, void 0, o(679584))}">`).appendTo(this.$favoritesBar);
                        this.$hiddenFavoritesButtonWrap = this._popups.setHiddenFavoritesPopup(e, ( () => this.hiddenFavorites), n, (e => this.updateSetId(e, !1, this._bridge.hide_controls)))
                    }
                }
            }
            updateSetId(e, t, o) {
                this._lastSetId = e,
                this._model.applyFieldSet(e, t, o)
            }
            updateNewFavoritesToolbar() {
                if (!this._model.favoriteFieldSets)
                    return;
                const e = {
                    items: this._model.favoriteFieldSets.map((e => ({
                        title: this._model.getFieldSetById(e).title
                    }))),
                    activeItem: this._model.favoriteFieldSets.indexOf(this._model.currentFieldSetId()),
                    onSelect: e => {
                        const t = this._model.favoriteFieldSets[e];
                        this._lastSetId !== t && (this._model.preventPrevScanRequest(),
                        this.updateSetId(t, !1, this._bridge.hide_controls))
                    }
                    ,
                    className: "tv-screener-toolbar__no-scroll-choicer-react-root",
                    selectedItemClassName: "tv-screener-toolbar__no-scroll-choicer-react-root-dropdown-item--selected"
                };
                Zo(this.$favoritesBar.get(0), e)
            }
            updateFavoritesToolbar() {
                this._onWidget || (this._bridge.originalStandalone ? this.updateOldFavoritesToolbar() : this.updateNewFavoritesToolbar())
            }
            updatePeriodPicker() {
                const e = {
                    items: this._periodPickerButtons.map((e => ({
                        title: e.title
                    }))),
                    activeItem: this._periodPickerButtons.findIndex((e => e.id === this._selectedPeriodId)),
                    onSelect: e => {
                        const t = this._periodPickerButtons[e].id;
                        this.changeEarningsPeriod(t)
                    }
                    ,
                    className: "tv-screener-toolbar__no-scroll-choicer-react-root",
                    selectedItemClassName: "tv-screener-toolbar__no-scroll-choicer-react-root-dropdown-item--selected"
                };
                Zo(this.$periodPicker.get(0), e)
            }
            _getWatchlist() {
                if (window.widgetbar) {
                    const t = window.widgetbar.setPage("base");
                    let o;
                    for (var e = 0; e < t.widgets.length; e++)
                        if ("watchlist" === t.widgets[e].type) {
                            o = t.widgets[e].widgetObject;
                            break
                        }
                    return o
                }
                return null
            }
            adjustToolbarWidth(e) {
                const t = this.$fieldSetsButton[0].getBoundingClientRect();
                if (e && "mouseenter" === e.type)
                    this.$fieldSetsButton.css("width", t.width);
                else {
                    this.$fieldSetsButton.css("width", "auto");
                    const e = this.$fieldSetsButton[0].getBoundingClientRect();
                    this.$fieldSetsButton.css("width", t.width),
                    this.$fieldSetsButton[0].offsetWidth,
                    this.$fieldSetsButton.css("width", e.width)
                }
            }
            initFilterHandlers(e) {
                const t = function() {
                    const e = {}
                      , t = to.UserActionState.Type;
                    return (o, i, n, r) => {
                        let s = n;
                        e.hasOwnProperty(o) && (e[o].state === t && (s = t),
                        clearTimeout(e[o].sender),
                        n === to.UserActionState.Click && !1 === i) || (e[o] = {
                            state: s,
                            sender: setTimeout(( () => (0,
                            Xt.sendSnowPlowData)(new fo(i.toString(),n,o,r))), 1e4)
                        })
                    }
                }()
                  , o = (e, t) => t.reduce(( (t, o) => (o === e && (o -= 1),
                t += Math.floor(o / e / (1 / 4)))), "");
                e.off("change.op").on("change.op", "select.js-filter-operator", (o => {
                    const i = Kn(o.target)
                      , n = i.attr("name");
                    Ze[n].value || (Ze[n].value = {}),
                    Ze[n].value.operator = i.val(),
                    this._resetField(n),
                    this._model.update();
                    const {operator: r} = Ze[n].value
                      , s = e.hasClass("tv-screener-dialog__filter-field") ? "filter_dialog" : "columns";
                    t(n, r, to.UserActionState.Click, s)
                }
                )),
                e.off("change.op-val").on("change.op-val", "select.js-filter-operator-value", (o => {
                    const i = Kn(o.target)
                      , {value: n} = o.target
                      , r = i.attr("name");
                    Ze[r].value || (Ze[r].value = {}),
                    Ze[r].value.value = i.val(),
                    this._resetField(r),
                    this._model.update();
                    let {operator: s} = Ze[r].value;
                    const l = e.hasClass("tv-screener-dialog__filter-field") ? "filter_dialog" : "columns";
                    "" !== n && (s += "." + n),
                    t(r, s, to.UserActionState.Click, l)
                }
                )),
                e.off("update.op-arb-val").on("update.op-arb-val", "input.js-filter-operator-arb-value", (o => {
                    const i = Kn(o.target)
                      , n = i.attr("name");
                    Ze[n].value || (Ze[n].value = {});
                    let r = +i.val();
                    isFinite(r) && !Re(i.val()) || (r = null),
                    Ze[n].value.value = r,
                    this._resetField(n),
                    this._model.update();
                    const {operator: s} = Ze[n].value
                      , l = e.hasClass("tv-screener-dialog__filter-field") ? "filter_dialog" : "columns";
                    t(n, s, to.UserActionState.Click, l)
                }
                ));
                const i = e.find("input.js-filter-operator-between-left")
                  , n = e.find("input.js-filter-operator-between-right")
                  , r = e => {
                    const t = Kn(e.target).attr("name");
                    Ze[t].value || (Ze[t].value = {});
                    let o = +i.val();
                    (!isFinite(o) || Re(i.val()) || this._isLessThenMin(o, t) || this._isGreaterThenMax(o, t)) && (o = -1e100);
                    let r = +n.val();
                    if ((!isFinite(r) || Re(n.val()) || this._isLessThenMin(r, t) || this._isGreaterThenMax(r, t)) && (r = 1e100),
                    o > r) {
                        const e = o;
                        o = r,
                        r = e
                    }
                    Ze[t].value.value = [o, r],
                    -1e100 === Ze[t].value.value[0] && 1e100 === Ze[t].value.value[1] && (Ze[t].value.value = ""),
                    this._resetField(t),
                    this._model.update()
                }
                ;
                e.off("update.op-between-left-val").on("update.op-between-left-val", "input.js-filter-operator-between-left", r),
                e.off("update.op-between-right-val").on("update.op-between-right-val", "input.js-filter-operator-between-right", r),
                e.off("change.toggle-val").on("change.toggle-val", "input.js-filter-toggle", (o => {
                    const i = Kn(o.target)
                      , n = i.attr("name");
                    Ze[n].value = i.prop("checked"),
                    this._resetField(n),
                    this._model.update();
                    const r = e.hasClass("tv-screener-dialog__filter-field") ? "filter_dialog" : "columns";
                    t(n, i.prop("checked"), to.UserActionState.Click, r)
                }
                )),
                e.off("click.reset").on("click.reset", ".js-reset", (e => {
                    const t = Kn(e.currentTarget).data("field");
                    this.resetFilter(t)
                }
                ));
                let s = "";
                e.off("keydown.filterInput").on("keydown.filterInput", "input:not(.js-search-input):not(.js-filter-operator-arb-value)", (e => {
                    const t = Kn(e.currentTarget);
                    s = t.val()
                }
                )),
                e.off("keyup.filterInput").on("keyup.filterInput", "input:not(.js-search-input):not(.js-filter-operator-arb-value)", (i => {
                    const n = Kn(i.currentTarget)
                      , r = n.data("field")
                      , l = n.data("bound");
                    if (void 0 === r || void 0 === l || s === n.val())
                        return;
                    const a = [this.parseRangeValue(r, n.val(), l), Ze[r].value ? Ze[r].value[1 - l] : Ze[r].range[1 - l]].sort(this._model.numericSorter)
                      , c = this.approximateSliderValues(r, a);
                    if (e.find(`.tv-slider[data-field="${r}"]`).slider("values", c),
                    Ze[r].value = a,
                    this._resetField(r),
                    this._model.update(),
                    Ze[r].values) {
                        const i = e.hasClass("tv-screener-dialog__filter-field") ? "filter_dialog" : "columns"
                          , n = o(Ze[r].values.length + 1, c);
                        t(r, n, to.UserActionState.Type, i)
                    }
                }
                ));
                e.find(".tv-slider").off("slidechange").on("slidechange", ( (e, t) => {
                    const o = Kn(e.currentTarget).data("field");
                    Ze[o].values ? 0 === t.values[0] && t.values[1] === Ze[o].values.length + 1 ? Ze[o].value = null : Ze[o].value = [0 === t.values[0] ? -1e100 : parseInt(Ze[o].values[t.values[0] - 1], 10), t.values[1] === Ze[o].values.length + 1 ? 1e100 : parseInt(Ze[o].values[t.values[1] - 1], 10)] : t.values[0] === Ze[o].range[0] && t.values[1] === Ze[o].range[1] ? Ze[o].value = null : Ze[o].value = t.values,
                    this._resetField(o),
                    this._model.update()
                }
                )).off("slide").on("slide", ( (e, t) => {
                    const o = Kn(e.currentTarget)
                      , i = o.data("field");
                    let n = t.values[0]
                      , r = t.values[1];
                    if (n === r)
                        return !1;
                    Ze[i].values && (n = 0 === t.values[0] ? this._rangeMinValue(i) : pt(Ze[i], this._model.screener_type).format(Ze[i].values[t.values[0] - 1]),
                    r = t.values[1] === Ze[i].values.length + 1 ? this._rangeMaxValue(i) : pt(Ze[i], this._model.screener_type).format(Ze[i].values[t.values[1] - 1])),
                    t.value === t.values[0] ? o.find(".tv-slider__label--left").val(n) : (t.value === t.values[1] || o.find(".tv-slider__label--left").val(n),
                    o.find(".tv-slider__label--right").val(r))
                }
                )).on("slidechange", ( (i, n) => {
                    const r = Kn(i.currentTarget).data("field");
                    if (Ze[r].values) {
                        const i = e.hasClass("tv-screener-dialog__filter-field") ? "filter_dialog" : "columns"
                          , s = o(Ze[r].values.length + 1, n.values);
                        t(r, s, to.UserActionState.Slide, i)
                    }
                }
                ))
            }
            parseRangeValue(e, t, o) {
                if (-1 !== t.indexOf("<"))
                    return Ze[e].range[0];
                if (-1 !== t.indexOf(">"))
                    return Ze[e].range[1];
                t = t.replace(/%/g, "");
                let i = pt(Ze[e], this._model.screener_type).parse(t);
                if (!i.res)
                    return Ze[e].range[o];
                const n = i.value || 0 === i.value ? i.value : i.price;
                return i = Math.min(Ze[e].range[1], Math.max(Ze[e].range[0], n)),
                i
            }
            approximateSliderValues(e, t) {
                const o = [0, 0]
                  , i = [].concat(-1e100, Ze[e].values, 1e100);
                for (let e = 0; e < 2; e++)
                    for (let n = 0; n < i.length; n++)
                        Math.abs(t[e] - i[n]) < Math.abs(t[e] - i[o[e]]) && (o[e] = n);
                return o
            }
            updateFilterSearch() {
                const e = this._dialog.$fieldSearchInput.val().trim().replace(/^,\s*|\s*,$/, "").toLowerCase().split(/\s*,\s*/);
                this._dialog.$filtersPopup.find(".js-filter-field").removeClass("js-found");
                const t = this._dialog.$filtersPopup.find(".js-filters-wrap").get(0);
                e.forEach((e => {
                    let o = !1;
                    for (const i in Ze) {
                        const n = Array.from(t.querySelectorAll(`.js-filter-field-${i.replace(/\W/g, "")}:not(.js-found)`))
                          , r = vt(Ze[i])
                          , s = -1 !== i.toLowerCase().indexOf(e) || Boolean(r) && -1 !== r.toLowerCase().indexOf(e);
                        s && (o = !0),
                        n.forEach((e => {
                            e.classList.toggle("js-hidden", !s),
                            e.classList.toggle("js-found", s)
                        }
                        ))
                    }
                    o || 0 === e.length || (0,
                    Xt.sendSnowPlowData)(new go(e))
                }
                ))
            }
            showActiveFilters() {
                if (this._dialog.$filtersPopup)
                    return;
                const e = this._dialog._getActiveFilters();
                this._dialog.showFiltersDialog(!0).then(( () => {
                    this._dialog.$dialogContainer.find(".js-search-input").val(e.join(", ")),
                    this.updateFilterSearch()
                }
                ))
            }
            resetAllFilters() {
                this._resetAllFilters = !0;
                for (const e in Ze)
                    this._isFilterValueEmpty(e) || this.resetFilter(e);
                this._dialog.$dialogContainer.find(".js-search-input").val(""),
                this.updateFilterSearch(),
                this._resetAllFilters = !1
            }
            resetFilter(e) {
                if (!Ze[e].value || !1 === Ze[e].resettableFilter)
                    return;
                Ze[e].value = null;
                const t = this._dialog.$filtersPopup || this.$inplaceEditor;
                if (t)
                    if ("select" === Ze[e].control)
                        t.find(`.js-filter-field-${e.replace(/\W/g, "")}`).trigger("reset");
                    else if ("condition" === Ze[e].control)
                        t.find(`[name="${e}"]`).val("").trigger("change");
                    else if ("toggle" === Ze[e].control)
                        t.find(`[name="${e}"]`).prop("checked", !1);
                    else if ("range" === Ze[e].control) {
                        let o = Ze[e].range;
                        Ze[e].values && (o = [0, Ze[e].values.length + 1]),
                        t.find(`.ui-slider[data-field="${e}"]`).slider("values", o).trigger("slide", {
                            values: o
                        })
                    }
                this._resetField(e),
                this._model.update()
            }
            _rangeLeftValue(e) {
                let t = Ze[e].value;
                return "in_range" !== t.operator && "not_in_range" !== t.operator || (t = t.value),
                this._isLessThenMin(t[0], e) ? this._rangeMinValue(e) : pt(Ze[e], this._model.screener_type).format(t[0])
            }
            _rangeRightValue(e) {
                let t = Ze[e].value;
                return "in_range" !== t.operator && "not_in_range" !== t.operator || (t = t.value),
                this._isGreaterThenMax(t[1], e) ? this._rangeMaxValue(e) : pt(Ze[e], this._model.screener_type).format(t[1])
            }
            _isGreaterThenMax(e, t) {
                return Ze[t].range && e >= Ze[t].range[1]
            }
            _isLessThenMin(e, t) {
                return Ze[t].range && e <= Ze[t].range[0]
            }
            _rangeMinValue(e) {
                return "<" + pt(Ze[e], this._model.screener_type).format(Ze[e].values[0])
            }
            _rangeMaxValue(e) {
                return ">" + pt(Ze[e], this._model.screener_type).format(Ze[e].values[Ze[e].values.length - 1])
            }
            _highlightActiveItems(e) {
                if (!e.find(".js-filter-checkbox:checked").size())
                    return e.find(".tv-control-select__option-wrap").removeClass("i-active"),
                    void e.find(".js-item-wrap-any .tv-control-select__option-wrap").addClass("i-active");
                e.find(".js-filter-checkbox:checked, .js-filter-checkbox-any:checked").each((function() {
                    e.find(".tv-control-select__option-wrap").removeClass("i-active"),
                    Kn(this).closest(".tv-control-select__option-wrap").addClass("i-active")
                }
                ))
            }
            _closeDropdown(e) {
                e.tvDropdown("close"),
                this.$inplaceEditor && this.$inplaceEditor.focus()
            }
            _createMultiSelectItems(e, t, o, i, n) {
                const r = (Ze[e].useDefaultRange ? Ze[e].defaultRange : Ze[e].range).slice().sort(( (t, o) => {
                    if (!1 !== Ze[e].sortSelectedFirst) {
                        const i = Ze[e].value === t || Array.isArray(Ze[e].value) && ~Ze[e].value.indexOf(t)
                          , n = Ze[e].value === o || Array.isArray(Ze[e].value) && ~Ze[e].value.indexOf(o);
                        if (i && !n)
                            return -1;
                        if (n && !i)
                            return 1
                    }
                    return !1 === Ze[e].sortable ? 0 : t > o ? 1 : -1
                }
                ));
                for (let s = null === o ? 0 : -1; s < r.length; ++s) {
                    let l = -1 === s ? ir : r[s];
                    const a = Kn(`<input type="checkbox" name="${l}" class="js-filter-checkbox${-1 === s ? "-any" : ""}"${Ze[e].value === l || Array.isArray(Ze[e].value) && ~Ze[e].value.indexOf(l) ? "checked" : ""}>`);
                    -1 === s && (o = a),
                    -1 === s && n && (l = n);
                    const c = Ze[e].rangeTitles
                      , d = c && c[l] && c[l][2]
                      , u = this._getFieldValueFromRangeTitles(l, e);
                    let h;
                    h = d && !0 === d.nowrap ? `<span class="tv-control-checkbox__label--nowrap">${u}</span>` : "country" === e ? (0,
                    si.triesTranslateCountrieName)(u) : (0,
                    G.triesTranslateScreenerData)(u);
                    const p = Kn(`<div class="tv-dropdown-behavior__item js-item-wrap${-1 === s ? "-any" : ""}">`).appendTo(t);
                    Kn(`<label data-field="${e}" class="tv-control-select__option-wrap ${i}__dropdown-checkbox-item">`).append(a).append(`<span class="tv-control-checkbox__label">${h}</span>`).appendTo(p),
                    a.tvControlCheckbox()
                }
                return o
            }
            _createMultiSelectItemsElement(e, t, o, i, n=!1, r= () => {}
            , s=!1, l) {
                const a = {
                    changed: !1,
                    resetOptions: null
                };
                let c = Kn()
                  , d = Kn();
                const u = "forex-group" === o.attr("data-select-name")
                  , h = o => {
                    const i = !t.find(".js-filter-checkbox:checked").size();
                    s ? c && c.prop("checked", !0) : d.prop("checked", i),
                    n && this._highlightActiveItems(t),
                    o || this._resetField(e),
                    this._model.update(),
                    a.changed = !o,
                    r(t, i)
                }
                ;
                let p = Kn();
                return a.resetOptions = o => {
                    t.empty(),
                    d = this._createMultiSelectItems(e, t, s ? null : d, i, l),
                    !0 !== o && (this._tryExecuteFilterChangeHandler(e),
                    h(!0)),
                    p = Kn()
                }
                ,
                a.resetOptions(),
                t.on("change", ".js-filter-checkbox", (i => {
                    const r = Kn(i.target)
                      , l = r.attr("name");
                    if (n && Ze[e].value === l)
                        return r.prop("checked", !0),
                        void this._closeDropdown(o);
                    c = Kn(),
                    r.prop("checked") ? (Ze[e].value ? n ? (t.find(".js-filter-checkbox").not(r).prop("checked", !1),
                    Ze[e].value = l) : (Array.isArray(Ze[e].value) || (Ze[e].value = [Ze[e].value]),
                    Ze[e].value.push(l)) : Ze[e].value = l,
                    u && (0,
                    Xt.sendSnowPlowData)(new ui("added",l))) : (Array.isArray(Ze[e].value) ? (Ze[e].value.splice(Ze[e].value.indexOf(l), 1),
                    1 === Ze[e].value.length ? Ze[e].value = Ze[e].value[0] : Ze[e].value.length || (s ? (c = r,
                    Ze[e].value = l) : Ze[e].value = null)) : s ? (c = r,
                    Ze[e].value = l) : Ze[e].value = null,
                    u && (0,
                    Xt.sendSnowPlowData)(new ui("removed",l))),
                    this._tryExecuteFilterChangeHandler(e),
                    h(),
                    n && this._closeDropdown(o)
                }
                )),
                s || t.on("click touchend", ".js-filter-checkbox-any", (i => {
                    const r = Kn(i.target).attr("name");
                    i.preventDefault(),
                    setTimeout(( () => {
                        if (!Ze[e].value)
                            return d.prop("checked", !0),
                            void this._closeDropdown(o);
                        d.prop("checked") ? (p.prop("checked", !0),
                        Ze[e].value = p.toArray().map((e => e.name)),
                        Ze[e].value.length ? 1 === Ze[e].value.length && (Ze[e].value = Ze[e].value[0]) : Ze[e].value = null) : (p = t.find(".js-filter-checkbox:checked"),
                        t.find(".js-filter-checkbox").prop("checked", !1),
                        Ze[e].value = null,
                        u && (0,
                        Xt.sendSnowPlowData)(new ui("added",r))),
                        this._tryExecuteFilterChangeHandler(e),
                        h(),
                        n && this._closeDropdown(o)
                    }
                    ), 0)
                }
                )),
                a
            }
            _tryExecuteFilterChangeHandler(e) {
                Ze[e].onFilterChange && Ze[e].onFilterChange(Ze[e].value)
            }
            _createMultiselectFilter(e, t, i, n, r=!1) {
                const s = Kn(`<div class="${n}__selectbox-container js-filter-field-${e.replace(/\W/g, "")} js-dropdown-toggle">`).appendTo(t)
                  , l = Kn(`<i class="${n}__selectbox-dropdown-toggle">`).append(Kn(o(376844)).attr({
                    width: 12,
                    height: 7
                }))
                  , a = Kn(`<span class="${n}__selectbox-caption ${n}__selectbox-caption--text-overflow">\n\t\t\t<span class="${n}__selectbox-caption-label js-label"></span>\n\t\t</span>`).append(l).appendTo(s)
                  , c = a.find(".js-label")
                  , d = Kn('<div class="tv-dropdown__body tv-dropdown-behavior__body">');
                let u = Kn();
                if ((Ze[e].useDefaultRange ? Ze[e].defaultRange : Ze[e].range).length >= 16) {
                    const e = Kn(`<div class="${n}__search-wrap">`).appendTo(d);
                    u = Kn(`<input type="text" placeholder="${p.t(null, void 0, o(508573))}" class="${n}__search-input">`).appendTo(e);
                    const t = Kn(`<div class="tv-control-select__option-wrap ${n}__search-no-matches js-hidden">No matches</div>`).appendTo(d);
                    u.on("change input", (e => {
                        const o = u.val().trim().toLowerCase();
                        o ? m.find(".js-item-wrap").each((function() {
                            const e = Kn(this);
                            e.toggleClass("js-hidden", !~e.text().toLowerCase().indexOf(o))
                        }
                        )) : m.find(".js-item-wrap").removeClass("js-hidden"),
                        m.find(".js-item-wrap-any").toggleClass("js-hidden", !!m.find(".js-item-wrap.js-hidden").size()),
                        t.toggleClass("js-hidden", !!m.find(".js-item-wrap:not(.js-hidden)").size()),
                        s.tvDropdown("updateScroll")
                    }
                    ))
                }
                const h = Kn('<div class="tv-dropdown-behavior__scroll">').appendTo(d)
                  , m = Kn('<div class="tv-screener-fields-popup__items-wrap tv-dropdown-behavior__inscroll">').appendTo(h)
                  , _ = this._createMultiSelectItemsElement(e, m, s, n, r, ( () => {
                    c.empty(),
                    m.find(".js-filter-checkbox:checked, .js-filter-checkbox-any:checked").each(( (t, o) => {
                        c.append(Kn('<span class="tv-screener-dialog__filter-field-content-value">').text(this._getFieldValueFromRangeTitles(Kn(o).attr("name"), e)))
                    }
                    )),
                    s.focus()
                }
                ), Ze[e].noAny)
                  , g = e => {
                    if (!0 !== e && !s.is(".i-opened"))
                        return;
                    const t = s.closest(".i-scrollable");
                    if (t.size() && (s.offset().top + s.height() < t.offset().top || s.offset().top > t.offset().top + t.height()))
                        return void s.tvDropdown("close");
                    const o = i.offset()
                      , n = s.offset();
                    let r = Kn(window).height() - n.top + Kn(window).scrollTop() - 35;
                    u.size() && (r -= 45);
                    const l = Math.max(i.height() - (n.top - o.top), 60);
                    if (h.css("maxHeight", Math.min(l, r)),
                    this._setDropdownPosition(d, s, i),
                    d.parent().is(i)) {
                        const e = s.tvDropdown("getInstance").scroll;
                        e.updateScrollBar(),
                        e.updateScroll()
                    } else
                        d.appendTo(i)
                }
                ;
                let v;
                s.tvDropdown({
                    $wrap: a,
                    $body: d,
                    scroll: !0,
                    closeWithEsc: !0,
                    noAnimation: !0
                }).on("resetPosition", g).on("beforeOpenMenu", ( () => {
                    _.changed && (_.resetOptions(!0),
                    _.changed = !1),
                    g(!0),
                    r && (m.find(".tv-control-checkbox__box, .js-filter-checkbox, .js-filter-checkbox-any").hide(),
                    this._highlightActiveItems(m),
                    m.find(".tv-control-checkbox__label").css("margin-right", 0)),
                    l.addClass(`${n}__selectbox-dropdown-toggle--open`)
                }
                )).on("afterOpenMenu", ( () => {
                    v = m.find(".js-filter-checkbox:checked"),
                    u.size() && setTimeout(( () => {
                        u.focus().on("focusout", (function() {
                            u.focus(),
                            setTimeout((function() {
                                u.focus()
                            }
                            ), 10)
                        }
                        )),
                        u.add(".tv-screener-inplace-editor__dropdown-checkbox-item").on("keypress keyup", (e => {
                            27 === e.keyCode && this._closeDropdown(s)
                        }
                        ))
                    }
                    ), 0)
                }
                )).on("beforeCloseMenu", ( () => {
                    l.removeClass(`${n}__selectbox-dropdown-toggle--open`),
                    u.off("focusout keypress keyup")
                }
                )).on("afterCloseMenu", ( () => {
                    s.tvDropdown("updateScroll"),
                    d.detach();
                    const t = m.find(".js-filter-checkbox:checked")
                      , o = "tv-screener-dialog" === n ? "filter_dialog" : "columns"
                      , i = Array.from(t).map((e => e.name)).join(",");
                    i !== Array.from(v).map((e => e.name)).join(",") && (0,
                    Xt.sendSnowPlowData)(new fo(i,to.UserActionState.Click,e,o))
                }
                )).on("reset", _.resetOptions).on("mousedownoutside", ( () => {
                    s.tvDropdown("close")
                }
                )),
                d.on("mousedown touchstart", (e => e.stopPropagation()))
            }
            _applySelectbox(e, t, i={}) {
                const n = i.classPrefix || "tv-screener-dialog"
                  , r = Kn(`<label class="${n}__selectbox-container js-dropdown-toggle">`);
                i.addClass && r.addClass(i.addClass),
                r.insertAfter(e),
                e.appendTo(r);
                const s = Kn(`<i class="${n}__selectbox-dropdown-toggle">`).append(Kn(o(376844)).attr({
                    width: 12,
                    height: 7
                }))
                  , l = Kn(`<span class="${n}__selectbox-caption">\n\t\t\t<span class="${n}__selectbox-caption-label js-label"></span>\n\t\t</span>`).append(s).appendTo(r)
                  , a = Kn('<div class="tv-dropdown__body tv-dropdown-behavior__body">')
                  , c = Kn('<div class="tv-dropdown-behavior__scroll">').appendTo(a)
                  , d = Kn('<div class="tv-screener-fields-popup__items-wrap tv-dropdown-behavior__inscroll">').appendTo(c)
                  , u = () => {
                    a.find(".js-option-selected").removeClass("i-active js-option-selected");
                    const t = a.find(`[data-value="${e.val()}"]`)
                      , o = !t.data("value");
                    t.addClass("i-active js-option-selected").toggleClass(`${n}__selectbox-option--no-value`, o),
                    l.find(".js-label").toggleClass(`${n}__selectbox-caption--no-value`, o).text(t.text())
                }
                  , h = () => {
                    d.empty();
                    const t = e.get(0).childNodes;
                    for (let e = 0; e < t.length; ++e)
                        Kn(`<span data-value="${t[e].value}" class="tv-dropdown-behavior__item tv-control-select__option js-option">\n\t\t\t\t\t<span class="tv-control-select__option-wrap ${n}__selectbox-option-wrap">${t[e].textContent}</span>\n\t\t\t\t</span>`).appendTo(d);
                    u()
                }
                ;
                h(),
                e.on("change", u);
                const p = e => {
                    if (!0 !== e && !r.is(".i-opened"))
                        return;
                    const o = r.closest(".i-scrollable");
                    if (o.size() && (r.offset().top + r.height() < o.offset().top || r.offset().top > o.offset().top + o.height()))
                        return void r.tvDropdown("close");
                    const i = t.offset()
                      , n = r.offset()
                      , s = Math.max(t.height() - (n.top - i.top), 60)
                      , l = Kn(window).height() - n.top + Kn(window).scrollTop() - 35;
                    c.css("maxHeight", Math.min(s, l)),
                    this._setDropdownPosition(a, r, t),
                    a.appendTo(t)
                }
                ;
                return r.on("resetPosition", p).on("beforeOpenMenu", ( () => {
                    p(!0),
                    s.addClass(`${n}__selectbox-dropdown-toggle--open`)
                }
                )).on("beforeCloseMenu", ( () => s.removeClass(`${n}__selectbox-dropdown-toggle--open`))).on("afterCloseMenu", ( () => {
                    r.tvDropdown("updateScroll"),
                    a.detach()
                }
                )).tvDropdown({
                    $wrap: l,
                    $body: a,
                    scroll: !0,
                    closeWithEsc: !0,
                    noAnimation: !0
                }),
                d.on("click", ".js-option", (t => {
                    const o = Kn(t.currentTarget).data("value");
                    e.val() !== o && (e.val(o),
                    e.trigger("change")),
                    r.tvDropdown("close")
                }
                )),
                a.on("mousedown touchstart", (e => e.stopPropagation())),
                e.on("reset", h),
                r
            }
            _setDropdownPosition(e, t, o) {
                const i = o.offset()
                  , n = t.offset();
                e.css("top", n.top - i.top - 15),
                (0,
                Gt.isRtl)() ? e.css("right", o[0].scrollWidth - (n.left + t.width()) + i.left - (0,
                Gt.getLTRScrollLeft)(o[0])) : e.css("left", n.left - i.left)
            }
            _isFilterValueEmpty(e) {
                const t = Ze[e].value;
                return t && "condition" === Ze[e].control ? "" === t.value || null == t.value : !(t && (!Array.isArray(t) || t.length) && ("object" != typeof t || Object.keys(t).find((e => !!t[e]))))
            }
            addFieldFilter(e, t, i="tv-screener-dialog", n) {
                const r = Kn('<div class="' + i + "__filter-field js-filter-field js-filter-field-" + e.replace(/\W/g, "") + " " + i + "__filter-field--cat" + Ze[e].category + ' js-wrap">')
                  , s = !this._isFilterValueEmpty(e);
                if (s) {
                    const e = t.find(".tv-screener-dialog__filter-field--active");
                    e.length > 0 ? r.insertAfter(e.last()) : t.prepend(r)
                } else
                    r.appendTo(t);
                n && (s ? t.removeClass("tv-screener-inplace-editor__without-reset") : (r.addClass("tv-screener-inplace-editor__filter-without-reset"),
                t.addClass("tv-screener-inplace-editor__without-reset")));
                let l = Ze[e].filterTitle || Ze[e].title;
                "toggle" === Ze[e].control && "is_primary" !== e && "active_symbol" !== e && (l = p.t(null, void 0, o(865073)).format({
                    title: l
                })),
                Kn(`<div class="${i}__filter-field-title js-filter-field-title-${e.replace(/\W/g, "")}">${l}</div>`).appendTo(r),
                this.setFieldActive(e, s, r);
                const a = Kn(`<div class="${i}__filter-field-content ${i}__filter-field-content--${Ze[e].control} js-filter-field-_content">`).appendTo(r);
                return Kn(`<div class="${i}__filter-field-reset ${s || !n ? "" : "i-hidden "}apply-common-tooltip js-reset" data-field="${e}" title="${p.t(null, void 0, o(658318))}">`).append(Kn(o(966631))).appendTo(r),
                new Promise((t => {
                    setTimeout(( () => {
                        if ("select" === Ze[e].control)
                            this._createMultiselectFilter(e, a, n ? this._bridge.$body : this._dialog.$dialogContainer, i, Ze[e].isSingle);
                        else if ("range" === Ze[e].control) {
                            const t = {
                                range: !0
                            };
                            let o = Ze[e].range[0]
                              , i = Ze[e].range[1];
                            Ze[e].values ? (t.min = 0,
                            t.max = Ze[e].values.length + 1,
                            Ze[e].value && Array.isArray(Ze[e].value) ? (t.values = this.approximateSliderValues(e, Ze[e].value),
                            o = this._rangeLeftValue(e),
                            i = this._rangeRightValue(e)) : (t.values = [0, Ze[e].values.length + 1],
                            o = this._rangeMinValue(e),
                            i = this._rangeMaxValue(e))) : (t.min = Ze[e].range[0],
                            t.max = Ze[e].range[1],
                            t.values = Ze[e].value || [Ze[e].range[0], Ze[e].range[1]]),
                            Kn(`<div class="tv-slider" data-field="${e}">\n\t\t\t\t\t\t<div class="tv-slider__labels">\n\t\t\t\t\t\t\t<input type="text" data-field="${e}" data-bound="0" class="tv-slider__label tv-slider__label--left" value="${o}"/>\n\t\t\t\t\t\t\t<input type="text" data-field="${e}" data-bound="1" class="tv-slider__label tv-slider__label--right" value="${i}"/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>`).slider(t).appendTo(a)
                        } else if ("condition" === Ze[e].control) {
                            const t = Kn(`<select name="${e}" class="js-filter-operator js-hidden">`).appendTo(a);
                            let r, s = !0;
                            for (const o in Qn)
                                Ze[e].hiddenOperators && -1 !== Ze[e].hiddenOperators.indexOf(o) || (s && !Ze[e].value && (s = !1,
                                Ze[e].value = {
                                    operator: o
                                }),
                                Kn(`<option value="${o}"${o === (Ze[e].value && Ze[e].value.operator) ? " selected" : ""}>${Qn[o]}</option>`).appendTo(t));
                            this._applySelectbox(t, n ? this._bridge.$body : this._dialog.$dialogContainer, {
                                classPrefix: i,
                                addClass: `${i}__filter-field-content--left`
                            }),
                            r = Ze[e].conditionFields ? Array.isArray(Ze[e].conditionFields) ? Ze[e].conditionFields : Ze[e].conditionFields[this._model.screener_type] || Ze[e].conditionFields.default || er : er;
                            const l = Kn(`<select name="${e}" class="js-filter-operator-value js-hidden">`).appendTo(a);
                            let c;
                            if (Kn(`<option value="">${p.t(null, void 0, o(351514))}</option>`).appendTo(l),
                            0 === r.length)
                                c = Kn(`<label class="${i}__selectbox-container js-dropdown-toggle ${i}__filter-field-content--middle js-hidden" tabindex="0">\n\t\t\t\t\t\t\t<span class="${i}__selectbox-caption-label js-label ${i}__selectbox-caption--no-value">${p.t(null, void 0, o(351514))}</span>\n\t\t\t\t\t\t</label>`).appendTo(a);
                            else {
                                for (let t = 0; t < r.length; ++t) {
                                    const o = r[t];
                                    Kn(`<option value="${o}"${o === (Ze[e].value && Ze[e].value.operator && Ze[e].value.value) ? " selected" : ""}>${Ze[o].title}</option>`).appendTo(l)
                                }
                                c = this._applySelectbox(l, n ? this._bridge.$body : this._dialog.$dialogContainer, {
                                    classPrefix: i,
                                    addClass: `${i}__filter-field-content--middle js-hidden`
                                })
                            }
                            const d = Kn(`<input type="text" name="${e}" class="${i}__filter-field-content--right ${i}__filter-field-text js-filter-operator-arb-value">`).appendTo(a);
                            Ze[e].value && "number" == typeof Ze[e].value.value && d.val(`${Ze[e].value.value}`);
                            const u = e => {
                                e.ctrlKey || e.metaKey || !e.charCode || !e.which || e.which < 32 || /[\d.-]/.test(String.fromCharCode(e.charCode)) || e.preventDefault()
                            }
                              , h = e => {
                                const t = {
                                    value: e.val()
                                };
                                return e.on("keypress", u).on("change input", (0,
                                Lt.default)((o => {
                                    e.val() !== t.value && (e.trigger("update", o),
                                    t.value = e.val())
                                }
                                ), 500)),
                                t
                            }
                              , m = Kn(`<input type="text" name="${e}" class="${i}__filter-field-content--right ${i}__filter-between-input js-filter-operator-between-left js-hidden">`).appendTo(a);
                            !Ze[e].value || "in_range" !== Ze[e].value.operator && "not_in_range" !== Ze[e].value.operator || m.val(`${-1e100 === Ze[e].value.value[0] || this._isLessThenMin(Ze[e].value.value[0], e) ? "" : Ze[e].value.value[0]}`);
                            const _ = h(m)
                              , g = Kn(`<span class="${i}__filter-between-separator js-hidden">—</span>`).appendTo(a)
                              , v = Kn(`<input type="text" name="${e}" class="${i}__filter-field-content--right ${i}__filter-between-input js-filter-operator-between-right js-hidden">`).appendTo(a);
                            !Ze[e].value || "in_range" !== Ze[e].value.operator && "not_in_range" !== Ze[e].value.operator || v.val(`${1e100 === Ze[e].value.value[1] || this._isGreaterThenMax(Ze[e].value.value[1], e) ? "" : Ze[e].value.value[1]}`);
                            const f = h(v)
                              , y = h(d)
                              , b = () => {
                                const e = t.val()
                                  , o = e && "in_range" !== e && "not_in_range" !== e;
                                c.toggleClass("js-hidden", !o),
                                o || (y.value = "",
                                d.val(""),
                                l.val("").trigger("change"))
                            }
                              , w = e => {
                                const o = t.val()
                                  , i = o && "in_range" !== o && "not_in_range" !== o && !l.val();
                                d.toggleClass("js-hidden", !i),
                                i && !0 !== e && !this._resetAllFilters && setTimeout(( () => {
                                    d.focus()
                                }
                                ), 50)
                            }
                              , S = e => {
                                const o = "in_range" === t.val() || "not_in_range" === t.val();
                                m.toggleClass("js-hidden", !o),
                                g.toggleClass("js-hidden", !o),
                                v.toggleClass("js-hidden", !o),
                                o && !0 !== e && !this._resetAllFilters && setTimeout(( () => {
                                    m.focus()
                                }
                                ), 50),
                                o || !0 === e || (_.value = "",
                                f.value = "",
                                m.val(""),
                                v.val(""),
                                l.val("").trigger("change"))
                            }
                            ;
                            "in_range" === t.val() || "not_in_range" === t.val() ? S(!0) : b(),
                            w(!0),
                            t.on("change", b).on("change", w).on("change", S),
                            l.on("change", w)
                        } else if ("toggle" === Ze[e].control) {
                            Kn(`<label class="${i}__filter-toggle">\n\t\t\t\t\t\t<input type="checkbox" name="${e}" class="${i}__filter-dropdown-item-input tv-screener-filter-rollup__item-input js-filter-toggle" ${Ze[e].value ? "checked" : ""}>\n\t\t\t\t\t\t<span class="${i}__filter-toggle-checkbox-title tv-control-checkbox__label">\n\t\t\t\t\t\t\t${-1 !== e.toLowerCase().indexOf("high") ? p.t(null, void 0, o(980121)) : p.t(null, void 0, o(478104))}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</label>`).appendTo(a).find(".js-filter-toggle").tvControlCheckbox()
                        }
                        t()
                    }
                    ), n ? 0 : It.dur / 3.5)
                }
                ))
            }
            showInplaceEditor(e, t) {
                if (!Ze[e])
                    return;
                this._inplaceEditorField = e,
                this.$inplaceEditorTarget = t,
                this.$inplaceEditor || (this.$inplaceEditor = Kn('<div class="tv-screener-inplace-editor tv-screener-inplace-editor--hidden">').on("mousedownoutside", (e => {
                    const t = Ze[this._inplaceEditorField];
                    "condition" === t.control && t.value && (Re(t.value.value) || Re(t.value.operator)) && (this.$inplaceEditor.hasClass("js-hidden") || (t.value = null));
                    const o = this.$inplaceEditor.find(".js-dropdown-toggle.i-opened");
                    o.size() ? o.one("afterCloseMenu", ( () => {
                        this.$inplaceEditor.addClass("tv-screener-inplace-editor--hidden js-hidden")
                    }
                    )) : this.$inplaceEditor.addClass("tv-screener-inplace-editor--hidden js-hidden")
                }
                )).on("keypress keyup", (e => {
                    27 !== e.keyCode || Kn(".tv-dropdown__body.i-opened").length || this.$inplaceEditor.trigger("mousedownoutside")
                }
                )).attr("tabIndex", "0").appendTo(this._bridge.$body),
                this._bridge.standalone && (this.$inplaceEditor.addClass("tv-screener-inplace-editor--standalone"),
                Kn(document).on("scroll", ( () => {
                    this.$inplaceEditor.is(".js-hidden") || this.$inplaceEditor.css("top", this.$inplaceEditorTarget.offset().top - this._bridge.$body.offset().top)
                }
                )))),
                this.$inplaceEditor.empty().removeClass("tv-screener-inplace-editor__without-reset").removeClass("js-hidden").toggleClass("tv-screener-inplace-editor--slim", "toggle" === Ze[e].control).toggleClass("tv-screener-inplace-editor--wide", "condition" === Ze[e].control),
                this.addFieldFilter(e, this.$inplaceEditor, "tv-screener-inplace-editor", !0).then(( () => {
                    this.initFilterHandlers(this.$inplaceEditor)
                }
                ));
                const o = this.$inplaceEditor.find(".js-reset")
                  , i = Ze[e].inplaceEditorLeftOffset || 0
                  , n = this._getInplaceEditorBound()
                  , r = t.position().left;
                if (this.$inplaceEditor.css("top", t.offset().top - this._bridge.$body.offset().top),
                (0,
                Gt.isRtl)()) {
                    const e = r + t.width()
                      , s = i + Math.min(this.$content.width() - e, n) - o.width();
                    this.$inplaceEditor.css("right", Math.max(s, 0))
                } else
                    this.$inplaceEditor.css("left", Math.max(i + Math.min(r, n) - o.width(), 0));
                this.$inplaceEditor.removeClass("tv-screener-inplace-editor--hidden").focus(),
                this._model.trackEvent("Open inplace editor")
            }
            _getInplaceEditorBound() {
                let e = this._bridge.$body.width() - this.$inplaceEditor.outerWidth() + Kn(document).scrollLeft();
                if (this._bridge.standalone) {
                    const t = this._getResizerBridgeWidth()
                      , o = this._table.$element.width() + t;
                    Kn(window).width() < o && (e = (0,
                    Gt.isRtl)() ? Kn(window).width() - t - this.$inplaceEditor.outerWidth() - Kn(document).scrollLeft() : Kn(window).width() - t - this.$inplaceEditor.outerWidth() + Kn(document).scrollLeft())
                }
                return e
            }
            setFilterSet(e) {
                const t = this._model.getFilterSetById(e);
                this.$filterSetsButton.removeClass("tv-screener-toolbar__button--unsaved").attr("data-filter-set", e),
                this.$filterSetsButtonTitle.text(t.title),
                this._popups.$filterSetsPopup && (this._popups.$filterSetsPopup.find(".tv-screener-popup__item").removeClass("tv-screener-popup__item--active"),
                this._popups.$filterSetsPopup.find(`[data-set="${e}"]`).addClass("tv-screener-popup__item--active"))
            }
            setFieldSet(e) {
                const t = this._model.getFieldSetById(e);
                this.$fieldSetsButton.removeClass("tv-screener-toolbar__button--unsaved").text(t.title).attr("data-field-set", e)
            }
            updateIntervalButton(e=this._$selectIntervalButton, t=this._model.selectedIntervalId) {
                if (!e)
                    return;
                const o = L(t);
                o && e.html(o.shortTitle);
                const i = this._model.eodRestriction.value();
                e.toggleClass("i-hidden", i === Pt.Widget)
            }
            addIntervalSelect({$before: e=null, $appendTo: t=null, $dropdownContainer: i=null}) {
                return ki({
                    $before: e,
                    $appendTo: t,
                    $dropdownContainer: i,
                    makeSelectPopup: e => {
                        const t = Object.assign({
                            buttonTitle: p.t(null, void 0, o(241173))
                        }, e);
                        return this._popups.setSelectPopup({
                            wrapClass: "tv-screener-toolbar__interval-select",
                            buttonClass: "tv-screener-toolbar__button tv-screener-toolbar__button--arrow-down tv-screener-toolbar__button--with-state apply-common-tooltip common-tooltip-fixed i-disabled"
                        }, t)
                    }
                    ,
                    afterMakingSelectPopup: (e, t, o) => {
                        this._popups.setSelectIntervalContent(e, o, (e => {
                            this._model.setSelectedIntervalId(e.id),
                            this.updateIntervalButton(t, e.id),
                            this.updateToolbarButtons(),
                            this.preventHighlightChanges(),
                            this.refresh()
                        }
                        ))
                    }
                    ,
                    afterSelectPopupAppend: (e, t) => {
                        this._model.loadingComplete.subscribe(null, ( () => {
                            t.removeClass("i-disabled"),
                            this.updateIntervalButton(t, this._model.selectedIntervalId)
                        }
                        ), !0)
                    }
                })
            }
            updateGroupsButton(e, t) {
                t.sort(( (e, t) => Ze.sector.sourceRange.indexOf(e) > Ze.sector.sourceRange.indexOf(t) ? 1 : -1));
                for (let i = 0; i < t.length; i++) {
                    const n = t[i] === ir ? tr : `${t[i]}${i === t.length - 1 ? " " + p.t(null, void 0, o(389787)) : ""}`;
                    e.append(Kn('<span class="tv-screener-dialog__filter-field-content-value">').text(n))
                }
                e.attr("data-groups", t)
            }
            addGroupSelect({$before: e=null, $appendTo: t=null, $dropdownContainer: i=null}) {
                return ki({
                    $before: e,
                    $appendTo: t,
                    $dropdownContainer: i,
                    beforeMakingSelectPopup: () => {
                        if ("forex" === this._model.screener_type) {
                            const e = this._model.selectedGroups;
                            -1 === e.indexOf(ir) && (Ze.sector.value = e)
                        }
                    }
                    ,
                    makeSelectPopup: e => {
                        const t = {
                            wrapClass: "",
                            buttonClass: "tv-screener-toolbar__button tv-screener-toolbar__button--space_right tv-screener-toolbar__button--arrow-down tv-screener-toolbar__button--with-state apply-common-tooltip common-tooltip-fixed i-disabled"
                        };
                        "forex" !== this._model.screener_type && (t.wrapClass += " i-hidden");
                        const i = Object.assign({
                            buttonTitle: p.t(null, void 0, o(223477))
                        }, e);
                        return this._popups.setSelectPopup(t, i)
                    }
                    ,
                    afterMakingSelectPopup: (e, t, o) => {
                        t.on("click", ( () => {
                            o.off("change click touchend"),
                            e.attr({
                                "data-select-name": "forex-group"
                            }),
                            this._createMultiSelectItemsElement("sector", o, e, "tv-screener-inplace-editor", !1, (e => {
                                t.empty();
                                const o = [];
                                e.find(".js-filter-checkbox:checked, .js-filter-checkbox-any:checked").each(( (e, t) => {
                                    const i = Kn(t).attr("name");
                                    o.push(i)
                                }
                                )),
                                this._model.setSelectedGroups(o);
                                const i = o.map((e => Pe[e] || e));
                                this.updateGroupsButton(t, i),
                                this.updateToolbarButtons()
                            }
                            ), !1, or)
                        }
                        ))
                    }
                    ,
                    afterSelectPopupAppend: (e, t) => {
                        this._$groupSelect = e,
                        this._model.loadingComplete.subscribe(null, ( () => {
                            t.removeClass("i-disabled"),
                            t.attr({
                                "data-name": "screener-forex-pairs",
                                "data-role": "button"
                            }),
                            this.updateGroupsButton(t, this._model.selectedGroups)
                        }
                        ), !0)
                    }
                })
            }
            updateMarketButton(e) {
                const t = this._model.markets
                  , o = Kn(".js-screener-market-button");
                let i, n, r;
                if (1 === t.length) {
                    const e = t[0]
                      , o = (0,
                    v.getMarketsByScreenerType)(this._model.screener_type);
                    i = t[0],
                    n = o[e].flag ? `<img alt="${s = o[e].flag}" crossorigin src="${(0,
                    Dt.flagUrl)(s)}" class="tv-flag-country tv-flag-country--${s}">` : o[e].icon,
                    r = o[e].title
                } else
                    i = "global",
                    r = "global",
                    n = Kn('\n\t\t\t\t<i alt="globe" class="tv-flag-country tv-flag-country--globe">\n\t\t\t\t</i>\n\t\t\t').html(Xn);
                var s;
                o.attr({
                    "data-name": "screener-markets",
                    "data-role": "button",
                    "data-market": i
                }),
                o.html(n),
                o.parent().toggleClass("tv-screener-market-select--hidden", "stock" !== this._model.screener_type),
                e && e.append(`<span class="tv-screener-market-select__button-title">\n\t\t\t\t${r}\n\t\t\t</span><span class="tv-caret">`)
            }
            _showMarketsDialog() {
                pi(this.getScreenerMarketDialogOptions())
            }
            addMarketSelect({$before: e=null, $appendTo: t=null, $dropdownContainer: i=null, caption: r=!1, classSuffix: s=null}) {
                if (this._onWidget)
                    return;
                const l = ki({
                    $before: e,
                    $appendTo: t,
                    $dropdownContainer: i,
                    makeSelectPopup: () => {
                        const e = {
                            wrapClass: s ? "tv-screener-market-select tv-screener-market-select" + s : "tv-screener-market-select",
                            buttonClass: "tv-screener-market-select__button js-screener-market-button apply-common-tooltip common-tooltip-fixed"
                        }
                          , {wrapClass: t, buttonClass: i} = e
                          , n = Kn(`<div class="${t} tv-dropdown tv-dropdown--inline tv-dropdown-behavior">`);
                        return {
                            $wrap: n,
                            $button: Kn(`<div class="tv-dropdown__button tv-dropdown-behavior__button ${i}" title="${p.t(null, void 0, o(348424))}">`).appendTo(n)
                        }
                    }
                });
                return this.getScreenerMarketDialogOptions = () => ({
                    title: p.t(null, void 0, o(702322)),
                    initialSelectedMarkets: this._model.isEntireWorld ? [(0,
                    Hn.entireWorldMarketsPreset)()] : (0,
                    Gn.getMarketsByNames)(gi.markets, this._model.markets),
                    autofocus: !0,
                    initialMode: (0,
                    Un.isGlobalScreenerAvailable)() ? n.default.getValue(jn, zn.MarketDialogMode.Single) : zn.MarketDialogMode.Single,
                    defaultMarket: gi.defaultStockMarket,
                    onSelectComplete: e => {
                        var t;
                        t = e.mode,
                        n.default.setValue(jn, t);
                        const o = e.markets.map((e => e.value));
                        this.$filterSetsButton.toggleClass("i-disabled", !0),
                        this.$fieldSetsButton.toggleClass("i-disabled", !0),
                        this.$filtersButton.toggleClass("i-disabled", !0),
                        this._model.isEntireWorld = 1 === o.length && "entire_world" === o[0],
                        this._model.setMarket(this._model.isEntireWorld ? [] : o).then(( () => {
                            this.$filterSetsButton.toggleClass("i-disabled", !1),
                            this.$fieldSetsButton.toggleClass("i-disabled", !1),
                            this.$filtersButton.toggleClass("i-disabled", !1),
                            this.updateMarketButton(r && l || null)
                        }
                        )).catch((e => {
                            e && Zn.logError(e)
                        }
                        ))
                    }
                    ,
                    onClose: () => {
                        (0,
                        Xt.sendSnowPlowData)(new ci.ChangeMarketEvent(this._model.markets.join(",")))
                    }
                }),
                l.on("click", ( () => {
                    pi(this.getScreenerMarketDialogOptions())
                }
                )),
                this.updateMarketButton(r && l || null),
                l
            }
            refresh() {
                document.hidden || this._tempBusy || (this._data && (this._prevData = this._data.slice()),
                this._model.invalidateRequest(),
                this._model.update(null, !1, !1, !1, !0))
            }
            get refreshIntervals() {
                return this._model.isFastRefresh ? lr : sr
            }
            resetRefreshCounter(e) {
                if (clearInterval(this._refreshCounterIntervalId),
                !0 === e)
                    return;
                let t = this._model.refreshInterval;
                const o = -1 === t || !user.is_pro && !this._model.isFastRefresh;
                if (this.$refreshButton && this.$refreshButton.toggleClass("tv-screener-toolbar__button--with-counter", !o && !this._model.isFastRefresh).toggleClass("tv-screener-toolbar__button--active", !o),
                o)
                    return;
                const i = () => {
                    if (!this._model.isFastRefresh) {
                        const e = t / 60 | 0
                          , o = t % 60;
                        this.$refreshCounter.text(`${`00${e}`.slice(-2)}:${`00${o}`.slice(-2)}`)
                    }
                    t <= 0 ? this.refresh() : --t
                }
                ;
                i(),
                t >= 0 && (this._refreshCounterIntervalId = setInterval(i, 1e3))
            }
            preventHighlightChanges() {
                this._preventHighlightChanges = !0
            }
            highlightChanges() {
                if (this._preventHighlightChanges)
                    return void (this._preventHighlightChanges = !1);
                if (!this._prevData || !this._data || this._model.marketChangeProcess)
                    return;
                const e = {};
                for (let t = 0; t < (this._prevData || []).length; ++t)
                    e[this._prevData[t].s] = this._prevData[t].d;
                if (delete this._prevData,
                this._model.isFastRefresh) {
                    const t = ["bid", "ask", "close"];
                    for (let o = 0; o < this._data.length; ++o) {
                        const i = this._data[o].s
                          , n = this._data[o].d
                          , r = e[i];
                        if (!r)
                            continue;
                        const s = () => {
                            this._table.flickRow(i)
                        }
                        ;
                        for (let e = 0; e < t.length; e++) {
                            const o = t[e]
                              , s = this._table.fieldsOrder.indexOf(o);
                            if (n[s] !== r[s]) {
                                const e = n[s] > r[s];
                                this._table.highlightCell(i, o, e)
                            }
                        }
                        setTimeout(s, 1e3)
                    }
                    return
                }
                const t = [];
                for (let o = 0; o < this._data.length; ++o) {
                    const i = this._data[o].s
                      , n = this._data[o].d
                      , r = e[i];
                    if (!r)
                        continue;
                    let s = !1;
                    for (let e = 0; e < n.length; ++e)
                        if (n[e] !== r[e]) {
                            s = !0;
                            break
                        }
                    s && t.push(i)
                }
                t.length && this._table.$tbody.find(`tr[data-symbol="${t.join('"],tr[data-symbol="')}"]`).addClass("tv-screener-table__result-row--flick")
            }
            _createSwitch(e) {
                this.$switch = Kn('<div class="tv-screener-toolbar__switch">').appendTo(this.$toolbar);
                const t = {
                    modes: e,
                    onChange: e => this._model.applySwitch(e)
                };
                !function(e, t) {
                    Lo.render(Po.createElement(Wo, {
                        ...t
                    }), e)
                }(this.$switch[0], t)
            }
            get conditionOperators() {
                return Qn
            }
        }
        var ur = o(154834)
          , hr = o(345848)
          , pr = o(226722)
          , mr = o(125226)
          , _r = o(343693)
          , gr = o(175203);
        class vr {
            constructor() {
                this._localSettings = {}
            }
            getValue(e, t) {
                return this._localSettings.hasOwnProperty(e) ? this._localSettings[e] : t
            }
            setValue(e, t) {
                this._localSettings[e] = t
            }
            getInt(e, t) {
                return this.getValue(e, t)
            }
            getBool(e, t) {
                return this.getValue(e, t)
            }
            setInt(e, t) {
                this.setValue(e, t)
            }
            getJSON(e, t) {
                return this.getValue(e, t)
            }
            setJSON(e, t) {
                this.setValue(e, t)
            }
            remove(e) {
                this._localSettings.hasOwnProperty(e) && delete this._localSettings[e]
            }
        }
        var fr = o(778016)
          , yr = o(184026)
          , br = o(546014);
        function wr(e) {
            const {value: t, isMarketCurrency: i, content: n} = e;
            return t === kr.SYMBOL ? p.t(null, void 0, o(25976)) : i && t === kr.MARKET ? p.t(null, void 0, o(754650)) : i ? p.t(null, void 0, o(754650)) + ` (${n})` : n
        }
        function Sr(e) {
            const {isGlobal: t, financialCurrency: i, symbolCurrencies: n} = e;
            let r = [];
            t && r.push({
                value: kr.MARKET,
                isMarketCurrency: !0,
                content: p.t(null, void 0, o(754650)),
                description: p.t(null, void 0, o(497921))
            });
            const s = function(e, t) {
                return e ? {
                    value: kr.GLOBAL,
                    isMarketCurrency: !1,
                    content: xr.USD,
                    description: p.t(null, void 0, o(479677))
                } : {
                    value: t,
                    isMarketCurrency: !0,
                    content: t,
                    description: p.t(null, void 0, o(497921))
                }
            }(t, i);
            r.push(s);
            const l = Object.keys(xr).filter((e => e !== i))
              , a = l.map((e => ({
                value: e,
                isMarketCurrency: !1,
                content: e,
                description: void 0
            })));
            r = [...r, ...a];
            return 1 === n.length && [i, ...l].includes(n[0]) || r.unshift({
                value: kr.SYMBOL,
                isMarketCurrency: !1,
                content: p.t(null, void 0, o(25976)),
                description: p.t(null, void 0, o(424534))
            }),
            {
                defaultCurrency: s,
                currencies: r
            }
        }
        class Cr {
            constructor(e) {
                this.event = "convert_currency",
                this.source = "convert_currency_selector",
                this.location = "toolbar",
                this.state = "",
                this.value = e
            }
        }
        var kr, xr, Mr = o(779893);
        !function(e) {
            e.MARKET = "market",
            e.SYMBOL = "symbol",
            e.GLOBAL = "global"
        }(kr || (kr = {})),
        function(e) {
            e.USD = "USD"
        }(xr || (xr = {}));
        class Er {
            constructor(e, t, i) {
                this.createCurrencySelect = () => ({
                    selectButton: this._initCurrencySelect({
                        $before: this._view.$filterSetsButton.parent()
                    }).attr({
                        "data-name": "screener-price-currency",
                        "data-role": "button"
                    }),
                    currencySelect: this
                }),
                this.getPriceConversionObject = () => {
                    const {value: e, isMarketCurrency: t} = this.getCurrentCurrency();
                    return e === kr.SYMBOL ? {
                        to_symbol: !0
                    } : t ? {
                        to_symbol: !1
                    } : e === kr.GLOBAL ? null : {
                        to_symbol: !1,
                        to_currency: e
                    }
                }
                ,
                this._initCurrencySelect = e => {
                    const {$before: t=null, $appendTo: o=null, $dropdownContainer: i=null} = e;
                    if (!(t || o))
                        throw new Error("Provide at least one of $before or $appendTo for SecreenerCurrencySelect");
                    return ki({
                        $before: t,
                        $appendTo: o,
                        $dropdownContainer: i,
                        makeSelectPopup: this._createSelectButton,
                        afterMakingSelectPopup: this._setSelectContent,
                        afterSelectPopupAppend: this._onLoad
                    })
                }
                ,
                this._createSelectButton = e => {
                    const t = {
                        buttonTitle: p.t(null, void 0, o(806682)),
                        ...e
                    };
                    return this._view._popups.setSelectPopup({
                        wrapClass: "tv-screener-toolbar__currency-select",
                        buttonClass: "tv-screener-toolbar__button tv-screener-toolbar__button--arrow-down tv-screener-toolbar__button--with-state apply-common-tooltip common-tooltip-fixed"
                    }, t)
                }
                ,
                this._setSelectContent = (e, t, o) => {
                    o.empty();
                    for (const e of this._availableCurrencies) {
                        const {value: t, content: i, description: n} = e
                          , r = wr(e);
                        Mr(`<div class="tv-dropdown-behavior__item">\n\t\t\t\t<div\n\t\t\t\t\tdata-currency="${t}"\n\t\t\t\t\ttitle="${n || i}"\n\t\t\t\t\tclass="tv-control-select__option-wrap tv-screener-popup__item js-currency-select ${t === this._currentCurrency.value ? "tv-screener-popup__currency-select--active" : ""}"\n\t\t\t\t>\n\t\t\t\t\t${r}\n\t\t\t\t</div>\n\t\t\t</div>`).appendTo(o)
                    }
                    e.on("afterOpenMenu", ( () => {
                        o.on("click", ".js-currency-select", (t => {
                            t.preventDefault();
                            const i = this._currentCurrency.value
                              , n = t.currentTarget.dataset.currency;
                            n && n !== i && (o.find(".tv-screener-popup__currency-select--active").removeClass("tv-screener-popup__currency-select--active"),
                            o.find(`[data-currency='${n}']`).addClass("tv-screener-popup__currency-select--active"),
                            this._handleSelect(n),
                            setTimeout(( () => {
                                e.tvDropdown("close"),
                                o.off("click")
                            }
                            ), It.dur / 2))
                        }
                        ))
                    }
                    ))
                }
                ,
                this._handleSelect = e => {
                    this._currentCurrency = this._availableCurrencies.filter((t => t.value === e))[0],
                    function(e) {
                        if (e.isMarketCurrency)
                            return void (0,
                            Xt.sendSnowPlowData)(new Cr("market_currency"));
                        if (e.value === kr.SYMBOL)
                            return void (0,
                            Xt.sendSnowPlowData)(new Cr("symbol_currency"));
                        (0,
                        Xt.sendSnowPlowData)(new Cr("usd"))
                    }(this._currentCurrency),
                    this._updateSelectButton(),
                    this._view.preventHighlightChanges(),
                    this._view.refresh()
                }
                ,
                this._onLoad = (e, t) => {
                    this._view._model.loadingComplete.subscribe(null, ( () => {
                        t.removeClass("i-disabled"),
                        this._updateSelectButton()
                    }
                    ), !0)
                }
                ,
                this._updateSelectButton = () => {
                    const {content: e} = this._currentCurrency
                      , t = p.t(null, void 0, o(588467)) + `: ${e}`;
                    this._view._$currencySelectButton.html(t)
                }
                ,
                this._availableCurrencies = e,
                this._currentCurrency = t,
                this._view = i
            }
            getCurrentCurrency() {
                return this._currentCurrency
            }
        }
        function Fr(e, t, o) {
            o._$currencySelectButton && (o._$currencySelectButton.parent().remove(),
            o._model._currencySelect = void 0);
            const i = o._bridge;
            if (!e || (0,
            vi.isExternalWidget)(i) || i.hide_controls)
                return;
            const n = function(e) {
                return Array.isArray(e._model.markets) && e._model.markets.length > 1
            }(o)
              , {defaultCurrency: r, currencies: s} = Sr({
                isGlobal: n,
                financialCurrency: e,
                symbolCurrencies: t
            });
            if (1 === s.length)
                return;
            const l = new Er(s,r,o)
              , {selectButton: a, currencySelect: c} = l.createCurrencySelect();
            o._$currencySelectButton = a,
            o._model._currencySelect = c
        }
        var Tr = o(825957)
          , Ar = o(130969);
        const Ir = {
            stock: {
                title: p.t(null, void 0, o(373909)),
                contentText: p.t(null, void 0, o(803297)),
                confirmAction: {
                    title: p.t(null, void 0, o(4486)),
                    handler: () => window.open("/screener/", "_blank")
                },
                closeAction: {
                    title: p.t(null, void 0, o(582900)),
                    handler: () => (0,
                    Tr.showSupportDialog)({
                        solutionId: 43000718866
                    })
                }
            },
            crypto: {
                title: p.t(null, void 0, o(282458)),
                contentText: p.t(null, {
                    replace: {
                        cryptoCoinsScreenerLinkStart: `<a href="/crypto-coins-screener/?from=old-crypto-pairs" class="${Ar.link}" target="_blank">`,
                        cexScreenerLinkStart: `<a href="/cex-screener/?from=old-crypto-pairs" class="${Ar.link}" target="_blank">`,
                        dexScreenerLinkStart: `<a href="/dex-screener/?from=old-crypto-pairs" class="${Ar.link}" target="_blank">`,
                        linkEnd: "</a>"
                    }
                }, o(511078)),
                confirmAction: {
                    title: p.t(null, void 0, o(295245)),
                    handler: () => window.open("/cex-screener/?from=old-crypto-pairs", "_blank")
                },
                closeAction: {
                    title: p.t(null, void 0, o(769934)),
                    handler: () => {}
                }
            }
        };
        var Dr = o(496499)
          , Pr = o(779893);
        o(695556);
        const Lr = o(625214).linking
          , {Delegate: $r} = o(547465)
          , Br = o(820028).WatchedValue
          , Rr = o(66974)
          , Or = o(735566).getLogger("Screener.Widget")
          , Nr = window.locale || "en";
        let Wr = 150;
        const Vr = e => Ze[e] && !0 !== Ze[e].disabled && !0 !== Ze[e].hiddenColumn
          , qr = {
            forex: "screener-forex",
            crypto: "screener-crypto",
            stock: "screener"
        }
          , zr = ["pricescale", "minmov", "fractional", "minmove2"];
        var Ur = o(779893);
        At.enable("widget");
        const jr = (0,
        Ft.extractWidgetSettings)(window.initData.widgetDefaults)
          , Hr = document.querySelector("#js-screener-container")
          , Gr = jr.locale || "en";
        !function(e, t, o, i={}) {
            if (null === e.parentElement)
                return console.warn("Can not wrap 'elWidgetContainer' because it has no parentElement"),
                e;
            let n = null
              , d = document.querySelector(".js-embed-widget-body");
            const u = null !== d;
            if (u) {
                d = (0,
                r.ensureNotNull)(d),
                n = (0,
                r.ensureNotNull)(d.parentElement);
                let e = document.querySelector(".js-embed-widget-head");
                null === e && (e = document.createElement("div"),
                e.classList.add("tv-embed-widget-wrapper__header"),
                e.classList.add("js-embed-widget-head"),
                n.insertBefore(e, d))
            } else
                n = document.createElement("div"),
                n.classList.add("tv-embed-widget-wrapper"),
                n.innerHTML = '<div class="tv-embed-widget-wrapper__header js-embed-widget-head"></div><div class="tv-embed-widget-wrapper__body js-embed-widget-body"></div>',
                d = n.querySelector(".js-embed-widget-body");
            if (i.overflowAuto && d.classList.add("tv-embed-widget-wrapper__body--overflow_auto"),
            i.showBorderOnTransparent && d.classList.add("tv-embed-widget-wrapper__body--border-on-transparent"),
            !i.isWhiteLabel) {
                !async function(e, t, o, i, n={}) {
                    const d = n.isSheriffDisabled ? [] : await (0,
                    s.getWidgetSheriffActions)()
                      , u = d.includes(c.KnownAction.LargeTradeLogo)
                      , h = function(e) {
                        return ["crypto-coins-heatmap", "forex-cross-rates", "market-overview", "symbol-overview", "market-quotes", "stock-heatmap", "screener", "forex-heat-map", "crypto-mkt-screener", "events", "hotlists"].includes(e)
                    }(t)
                      , p = u && h ? "large_trade" : void 0
                      , m = await (0,
                    a.getCustomerCopyrightData)(n.customer, n.locale, (0,
                    a.addUtmCampaignSource)({
                        ...i
                    }, "logo"), p)
                      , _ = p ?? n.copyrightOptions?.mode ?? "small_old";
                    (0,
                    r.ensureNotNull)(e).appendChild((0,
                    l.createCopyrightLabel)({
                        sheriffOptions: d,
                        snapToEdge: o,
                        ...n.copyrightOptions,
                        ...m,
                        mode: _
                    }))
                }(d, t, !document.documentElement.classList.contains("is-transparent") || Boolean(i.showBorderOnTransparent), o, i)
            }
            u || (e.parentElement.insertBefore(n, e),
            d.appendChild(e))
        }(Hr, "screener", (0,
        h.filterUtmInfo)(jr), {
            isWhiteLabel: jr.whitelabel,
            locale: Gr,
            overflowAuto: !0
        });
        const Xr = Ur("#js-screener-container")
          , Kr = document.querySelector(".js-embed-widget-head").getBoundingClientRect().height;
        document.querySelector(".js-embed-widget-body").style.height = `calc(100% - ${Kr}px)`,
        jr.isTransparent && Xr.addClass("tv-widget-screener__container--transparent");
        const Yr = function(e) {
            const t = Mt((0,
            v.getMarketsByScreenerType)("stock"), e)
              , o = Mt((0,
            v.getMarketsByScreenerType)("forex"), e)
              , i = Mt((0,
            v.getMarketsByScreenerType)("crypto"), e);
            return t.concat(o).concat(i)
        }(window.TradingView.widgetCustomer).map((e => e.value))
          , Jr = ["morocco"]
          , Zr = [];
        if (jr.permissionOverrides?.market?.includes("uk") || Zr.push("uk"),
        jr.market) {
            const e = !Yr.includes(jr.market)
              , t = Jr.includes(jr.market)
              , o = Zr.includes(jr.market);
            (e && !t || o) && (jr.market = Yr[0])
        }
        var Qr;
        jr.screener_type || (jr.screener_type = void 0 === (Qr = jr.market) ? d.Stock : ["forex", "crypto"].includes(Qr) ? Qr : d.Stock);
        const es = jr.screener_type === d.CryptoMkt ? "cryptomktscreener" : "forexscreener"
          , ts = jr.screener_type === d.CryptoMkt ? "crypto-mkt-screener" : "screener";
        !async function(e) {
            (await (0,
            Tt.getEmbedWidgetTracker)())?.trackWidgetPageView(e)
        }(es);
        try {
            !async function(e) {
                Math.random() > .005 || (await (0,
                Tt.getEmbedWidgetTracker)())?.trackWidgetLoadMetaInfo(e)
            }({
                widget_id: ts,
                symbols: JSON.stringify([jr.market]),
                customer: jr.customer
            })
        } catch {}
        const os = {
            $body: Xr,
            standalone: !1,
            onWidget: !0,
            widgetSettings: jr,
            hide_controls: !jr.showToolbar,
            marked_symbols_disabled: !0,
            table_context_menu_disabled: !1,
            open_chart_on_same_tab: !1,
            selection_disabled: !0,
            disableStickyHeader: !1,
            isUnavailableWidgetMarket: !(!jr.market || !function(e) {
                return (0,
                v.getUnavailableWidgetMarkets)().includes(e)
            }(jr.market))
        };
        (0,
        v.getUnavailableWidgetExchangesMap)()[jr.market] && (os.unavailableWidgetExchanges = (0,
        v.getUnavailableWidgetExchangesMap)()[jr.market]),
        new class {
            constructor(e) {
                if (this._bridge = e,
                this._pendingPromise = null,
                !("$body"in e) && "container"in e && (this._bridge.$body = Pr(e.container)),
                this._bridge.onWidget || "big" === this._bridge.table_style ? this.settingsSaver = new vr : this.settingsSaver = n.default,
                this._bridge.page_size && (Wr = this._bridge.page_size),
                this._bridge.onWidget) {
                    let t;
                    if (e.widgetSettings.largeChartUrl) {
                        t = e.widgetSettings.largeChartUrl;
                        t.match(/^https?:\/\//) || (t = "http://" + t)
                    }
                    if (this.largeChartUrl = t,
                    this.utm = (0,
                    h.filterUtmInfo)(e.widgetSettings),
                    this.screener_type = e.widgetSettings.screener_type,
                    "crypto_mkt" === this.screener_type) {
                        const t = "BTC" === e.widgetSettings.displayCurrency ? "BTC" : "USD";
                        this.switchFilter = {
                            left: "name",
                            operation: "match",
                            right: t + "$"
                        },
                        bt.unshift({
                            id: "crypto_mkt",
                            title: "crypto_mkt",
                            content: {
                                sort_field: "market_cap_calc",
                                sort_direction: "desc",
                                filters: {
                                    sector: {
                                        operator: "nempty"
                                    }
                                }
                            }
                        })
                    }
                } else
                    this._bridge.standalone ? this.screener_type = e.screener_type || "stock" : this.screener_type = d.Crypto;
                this.settingKey = qr[this.screener_type] || qr.stock,
                this._bridge.onWidget && this.settingsSaver.setValue(`${Nr}.${this.settingKey}.market`, e.widgetSettings.market, {
                    forceFlush: !0
                }),
                this.defaultFieldSets = g({
                    screenerType: this.screener_type,
                    markets: this.markets,
                    isCompact: this.isServerRender(),
                    subtype: this._screenerSubtype(),
                    isOnWidget: this._bridge.onWidget
                }),
                this._bridge.onWidget && (this._widgetInitColumn = e.widgetSettings.defaultColumn || this.defaultFieldSets[0].id,
                this._widgetInitScreen = e.widgetSettings.defaultScreen || bt[0].id),
                rt(this.screener_type, this._screenerSubtype()),
                "forex" === this.screener_type && wt(["forex"]),
                this._bridge.getCurrentFilterSetId = () => this.currentFilterSetId(),
                this._bridge.applySymbol = (e, t=!1) => {
                    if (!0 === t || this._bridge.standalone) {
                        let t = "";
                        const o = (0,
                        br.getShortNameAndProName)(e);
                        t = this._bridge.onWidget && this.largeChartUrl ? (0,
                        Cn.makeTemplateSymbolUrl)(this.largeChartUrl, o) : (0,
                        Cn.makeSymbolChartUrl)(o, this.utm),
                        window.open(t)
                    } else
                        Lr.setSymbolAndLogInitiator(e, "screener")
                }
                ,
                this._bridge.applyFilterSet = (e, t) => {
                    const o = !(0,
                    ho.default)(t.sort(), this.markets.sort())
                      , i = o || e !== this.currentFilterSetId();
                    let n = o ? this.setMarket(t).then(( () => this._view.updateMarketButton())) : Promise.resolve();
                    return i && (n = n.then(( () => this.applyFilterSet(e)))),
                    n
                }
                ,
                this.disabled = new Br,
                this.fieldsOrder = new Br,
                this._sortField = new Br,
                this._sortDirection = new Br,
                this.eodRestriction = new Br(Pt.None),
                this._options = {},
                this._initialSortField = e.sort_field || this.settingsSaver.getValue(this.settingKey + ".sort_field", "market_cap_basic"),
                this._initialSortDirection = e.sort_direction || this.settingsSaver.getValue(this.settingKey + ".sort_direction", "desc"),
                this.update = (0,
                Lt.default)(this.updateImpl.bind(this), 100),
                this._sortField.subscribe((e => {
                    this._view._updateTableSortField(),
                    this.saveFiltersSettings(),
                    delete this._initialSortField
                }
                )),
                this._sortDirection.subscribe((e => {
                    this._view._updateTableSortField(),
                    this.saveFiltersSettings(),
                    delete this._initialSortDirection
                }
                )),
                this.isScreenerWidgetUpdatedImpl = !1,
                this._bridge.visible && (0,
                vi.isChartPage)(this._bridge) && this._bridge.visible.subscribe((e => {
                    !this.isScreenerWidgetUpdatedImpl && e && (this.invalidateRequest(),
                    this._bridge.disableStickyHeader ? this.updateImpl() : this.updateImpl(this._view._setupStickyHeader.bind(this._view)),
                    this.isScreenerWidgetUpdatedImpl = !0)
                }
                )),
                this.scanRequest = null,
                this.loadingStart = new $r,
                this.loadingComplete = new $r,
                this.fieldSetChanged = new $r,
                this.fieldSetSaved = new $r,
                this.filterSetChanged = new $r,
                this.filterSetSaved = new $r,
                this.filterSetDeleted = new $r,
                this.maxSafeInteger = Number.MAX_SAFE_INTEGER || Math.pow(2, 53) - 1,
                this.minSafeInteger = Number.MIN_SAFE_INTEGER || -(Math.pow(2, 53) - 1),
                this._tickers = [],
                "continuous_futures" === this.screener_type && (this._bridge.open_chart_on_same_tab = !1),
                this._bridge.hide_controls || this._initXWindowHandlers(),
                this._view = new dr(e,this);
                const t = [this._initMarkedSymbols(this._view)];
                var i;
                !this._bridge._onWidget && window.pro && t.push(window.pro.ensureValidShopConf()),
                Promise.all(t).then(( () => {
                    if ((0,
                    mr.isFeatureEnabled)("screener-maintenance"))
                        return void this._view.showMaintenance();
                    this._view.prepareLayout();
                    const e = () => {
                        this._checkCurrentSets(),
                        this._view._selectedPeriodId && "today" === this._view._selectedPeriodId ? (this.applyFieldSetContent(_),
                        this._sortField.setValue("name"),
                        this._sortDirection.setValue("asc")) : this.applyFieldSet(this._widgetInitColumn || this.currentFieldSetId(), !0),
                        this.applyFilterSet(this._widgetInitScreen || this.currentFilterSetId(), !0),
                        this._updateEodRestriction(),
                        (0,
                        vi.isChartPage)(this._bridge) && this._bridge.visible && !this._bridge.visible.value() || (this._bridge.disableStickyHeader ? this.updateImpl() : this.updateImpl(this._view._setupStickyHeader.bind(this._view)),
                        this.isScreenerWidgetUpdatedImpl = !0)
                    }
                    ;
                    if (this.isServerRender())
                        this.getMetaInfo(),
                        this.getUserSettings(),
                        e();
                    else {
                        const t = [this.getMetaInfo(), this.getUserSettings()];
                        Promise.all(t).then(e)
                    }
                    window.loginStateChange && window.loginStateChange.subscribe(null, (e => this.onLoginStateChange(e))),
                    this._bridge.onWidget || Promise.all([o.e(21630), o.e(80349), o.e(30359)]).then(o.bind(o, 846583)).then(( ({SupportTicketData: e}) => {
                        e.setScreener(this)
                    }
                    )),
                    Rr.isProd() || (window._exposed_screenerWidget = this),
                    this.isServerRender() && delete this._bridge.server_data
                }
                )),
                (0,
                Xt.initScreenerInstance)(this),
                e.standalone && ["stock", "crypto"].includes(e.screener_type) && !e.period_picker && (i = {
                    notificationData: Ir[e.screener_type]
                },
                Promise.all([o.e(18883), o.e(32937), o.e(46195), o.e(92537), o.e(15371), o.e(79317), o.e(59235), o.e(62526), o.e(59269)]).then(o.bind(o, 515092)).then((e => e.showScreenerNewStandaloneDialog(i))))
            }
            async _initMarkedSymbols(e) {
                if (!this.hasMarkedSymbols())
                    return;
                const t = await Promise.all([o.e(27378), o.e(18883), o.e(32937), o.e(46195), o.e(92537), o.e(15371), o.e(79317), o.e(99665), o.e(20610), o.e(29002), o.e(62526), o.e(80349), o.e(49528), o.e(74339)]).then(o.bind(o, 552968))
                  , i = await Promise.all([o.e(27378), o.e(18883), o.e(32937), o.e(46195), o.e(92537), o.e(15371), o.e(79317), o.e(99665), o.e(20610), o.e(29002), o.e(62526), o.e(80349), o.e(49528), o.e(74339)]).then(o.bind(o, 811213));
                this.markableSymbols = new t.MarkableSymbols({
                    symbolsView: e,
                    markerContainerSelector: ".tv-screener-table__symbol-addition",
                    activeMarkerClass: "tv-screener-table__marker--active",
                    additionalMarkerClass: "tv-screener-table__marker"
                });
                this._markedSymbolsFilter = new i.MarkedSymbolsFilter({
                    symbolsView: e,
                    containerSelector: ".tv-screener-table__head-left--text",
                    className: "tv-screener-table__head-left--marker",
                    disableSaveState: this._bridge.disableSaveMarkedSymbolsFilter
                });
                const n = this._markedSymbolsFilter.getStream();
                this._tickers = this._initTickers || this._markedSymbolsFilter.getSymbolsForScan(),
                this._markedSymbolsFilter.isActive() && (this._bridge.server_data = null);
                let r = !0;
                n.on(i.FilterEvents.Init, ( () => {
                    this._tickers = this._initTickers || this._markedSymbolsFilter.getSymbolsForScan(),
                    r = !1
                }
                )),
                n.on(i.FilterEvents.FilterByMarkedSymbols, (e => {
                    if (!r) {
                        const e = this._markedSymbolsFilter._colorManager.getColor();
                        (0,
                        Xt.sendSnowPlowData)(new yo(e))
                    }
                    this._tickers = e,
                    this._prevScanData = null,
                    this._prevRequestData = null,
                    this.invalidateRequest(),
                    (0,
                    vi.isScreenerPage)(this._bridge) && r || this.update()
                }
                )),
                n.on(i.FilterEvents.Disable, ( () => {
                    this._tickers = this._initTickers || [],
                    this.invalidateRequest(),
                    this.update()
                }
                ))
            }
            _initXWindowHandlers() {
                this._bridge.onWidget || (this._registerXWindowHandler("screener.market-changed", ( () => {
                    wt(this.markets);
                    let e = this.currentFilterSetId();
                    const t = this.defaultFilterSets.find((t => t.id === e));
                    if (t && t.disabled) {
                        const t = this.defaultFilterSets.find((e => !e.disabled));
                        e = t ? t.id : ""
                    }
                    this.getUserSettings().then(( () => {
                        this.applyFilterSet(e, !0),
                        this._view.updateMarketButton(),
                        this.invalidateRequest(),
                        this.updateImpl()
                    }
                    ))
                }
                )),
                this._registerXWindowHandler("screener.save-field-set", (e => {
                    const t = e.setId;
                    this.getUserSettings().then(( () => {
                        t && t === this.currentFieldSetId() && this._view.$fieldSetsButton.text(this.getFieldSetById(t).title)
                    }
                    ))
                }
                )),
                this._registerXWindowHandler("screener.save-filter-set", (e => {
                    const t = e.setId;
                    this.getUserSettings().then(( () => {
                        t && t === this.currentFilterSetId() && this._view.$filterSetsButtonTitle.text(this.getFilterSetById(t).title)
                    }
                    ))
                }
                )),
                this._registerXWindowHandler("screener.add-field-set-to-favorites", ( () => {
                    this.getUserSettings()
                }
                )),
                this._registerXWindowHandler("screener.remove-field-set-from-favorites", ( () => {
                    this.getUserSettings()
                }
                )),
                this._registerXWindowHandler("screener.apply-field-set", (e => {
                    this.applyFieldSetImpl(e.setId, e.initial, !1),
                    this._view.lastSetId = e.setId
                }
                )),
                this._registerXWindowHandler("screener.apply-filter-set", (e => {
                    this.applyFilterSet(e.setId, e.doNotUpdate, !1)
                }
                )),
                this._registerXWindowHandler("screener.change-selected-interval-id", (e => {
                    this._view.updateIntervalButton(null, e.id),
                    this.invalidateRequest(),
                    this.updateImpl()
                }
                )))
            }
            _registerXWindowHandler(e, t) {
                pr.TVXWindowEvents.on(e, (e => {
                    const o = JSON.parse(e);
                    this.settingKey === o.settingKey && t(o)
                }
                ))
            }
            _sendXWindowEvent(e, t) {
                this._bridge.onWidget || "big" === this._bridge.table_style || pr.TVXWindowEvents.emit(e, t)
            }
            _checkCurrentSets() {
                const e = this.currentFieldSetId();
                e && !this.getFieldSetById(e) && this.settingsSaver.remove(this.settingKey + ".fieldSetId");
                const t = this.currentFilterSetId();
                t && !this.getFilterSetById(t) && this.settingsSaver.remove(this.settingKey + ".filterSetId")
            }
            isServerRender() {
                return window.initData.screener_metainfo && window.initData.screener_data && this._bridge.server_data
            }
            updateMetaInfo(e) {
                Ze.index.disabled = !0,
                Ze.submarket.disabled = !0,
                "crypto" === this.screener_type && (Ze.currency.useDefaultRange = !0,
                Ze.currency.disabled = !1);
                const t = new Set
                  , o = this.markets || [this.market];
                Ze.is_primary.disabled = ["crypto", "forex"].includes(o[0]),
                e.fields.forEach((e => {
                    if ("currency" === e.n && e.r.forEach((e => t.add(e))),
                    e.n in Ze) {
                        if (Ze[e.n].type = e.t,
                        "index" === e.n)
                            return Ze.index.disabled = !1,
                            Ze.index.sourceRange = e.r,
                            void (Ze.index.range = Ze.index.sourceRange ? Ze.index.sourceRange.map((e => e.name)) : []);
                        if ("submarket" === e.n && e.r.length >= 1 && (e.r = e.r.filter((e => "" !== e)),
                        e.r.length > 0 && (Ze.submarket.disabled = !1)),
                        !Ze[e.n].range && Ze[e.n].useDefaultRange ? Ze[e.n].range = Ze[e.n].defaultRange : Ze[e.n].useDefaultRange || (Ze[e.n].range = e.r),
                        "exchange" === e.n && this._bridge.unavailableWidgetExchanges && this._bridge.unavailableWidgetExchanges.length && (Ze[e.n].range = this._getFilteredExchangesForWidget(Ze[e.n].range)),
                        function(e, t) {
                            const o = (0,
                            v.getMarketFieldValuesByScreenerType)(e.screener_type)
                              , i = (0,
                            v.getMarketFieldValuesByScreenerType)(d.Stock).america;
                            let n, r = [];
                            for (const a of e.markets)
                                o[a] && (n = o[a][t] || i[t],
                                n && Array.isArray(n) && (s = r,
                                l = n,
                                r = [...new Set([...s, ...l])].sort(( (e, t) => e - t))));
                            var s, l;
                            Ze[t].values = n
                        }(this, e.n),
                        !1 === Ze[e.n].sortable)
                            return;
                        e.t === ln.Price && (Ze[e.n].additionalColumns ? Ze[e.n].additionalColumns = Ze[e.n].additionalColumns.concat(zr) : Ze[e.n].additionalColumns = zr),
                        e.t === ln.Text && (Ze[e.n].range = Ze[e.n].range.sort()),
                        o = e,
                        [ln.Number, ln.FundamentalPrice].includes(o.t) && Ze[e.n].range && !Ze[e.n].useDefaultRange && (Ze[e.n].range = Ze[e.n].range.map((e => Math.min(Math.max(e, this.minSafeInteger), this.maxSafeInteger))).sort(this.numericSorter)),
                        Ze[e.n].values && !Ze[e.n].range && (Ze[e.n].range = [this.minSafeInteger, this.maxSafeInteger]),
                        Ze[e.n].values && Ze[e.n].range && (Ze[e.n].range[0] > Ze[e.n].values[0] && (Ze[e.n].range[0] = Ze[e.n].values[0]),
                        Ze[e.n].range[1] < Ze[e.n].values[Ze[e.n].values.length - 1] && (Ze[e.n].range[1] = Ze[e.n].values[Ze[e.n].values.length - 1])),
                        "range" !== Ze[e.n].control || Ze[e.n].values || Ze[e.n].range || (Ze[e.n].range = [this.minSafeInteger, this.maxSafeInteger],
                        Ze[e.n].values = [this.minSafeInteger, 0, this.maxSafeInteger])
                    } else if (-1 !== e.n.indexOf("|")) {
                        const t = e.n.split("|");
                        Ze[t[0]] || (Ze[t[0]] = {}),
                        Ze[t[0]].customResolutions || (Ze[t[0]].customResolutions = []),
                        Ze[t[0]].customResolutions.push(t[1])
                    }
                    var o
                }
                )),
                Fr(e.financial_currency, [...t], this._view),
                wt(this.markets),
                this.defaultFilterSets = bt
            }
            getMetaInfo() {
                if (this.isServerRender())
                    return this.updateMetaInfo(JSON.parse(window.initData.screener_metainfo)),
                    Promise.resolve();
                const e = this._getScanUrl("metainfo")
                  , t = t => ({
                    type: "POST",
                    url: e,
                    data: JSON.stringify({
                        markets: this.markets
                    }),
                    beforeSend: () => {
                        null !== this._pendingPromise && this._pendingPromise.abort()
                    }
                    ,
                    success: e => {
                        this.updateMetaInfo(e),
                        t()
                    }
                    ,
                    dataType: "json",
                    xhrFields: {
                        withCredentials: !Boolean(this._bridge.onWidget)
                    }
                });
                return new Promise((e => {
                    this.loadingStart.fire(),
                    this._pendingPromise = Pr.ajax(t(e)).fail((e => {
                        "abort" !== e.statusText && Or.logError("Failed to load screener metainfo")
                    }
                    )).always(( () => {
                        this.loadingComplete.fire(),
                        this._pendingPromise = null
                    }
                    ))
                }
                ))
            }
            fieldActive(e) {
                return !(!Ze[e] || !Ze[e].value || "condition" !== Ze[e].control || "in_range" !== Ze[e].value.operator || 2 !== Ze[e].value.value.length) || !(!Ze[e] || !Ze[e].value || "condition" === Ze[e].control && (!Ze[e].value.operator || "number" != typeof Ze[e].value.value && !Ze[e].value.value) || "range" === Ze[e].control && Ze[e].value[0] === Ze[e].range[0] && Ze[e].value[1] === Ze[e].range[1])
            }
            patchFiltersForMarketPages(e) {
                let t = {
                    russia: [{
                        left: "typespecs",
                        operation: "has_none_of",
                        right: "foreign-issuer"
                    }],
                    brazil: [{
                        left: "typespecs",
                        operation: "has_none_of",
                        right: "odd"
                    }],
                    thailand: [{
                        left: "typespecs",
                        operation: "has_none_of",
                        right: "foreign"
                    }],
                    uk: [{
                        left: "typespecs",
                        operation: "has_none_of",
                        right: "cdi"
                    }, {
                        left: "exchange",
                        operation: "equal",
                        right: "LSE"
                    }]
                }[this.markets[0]];
                if (["sector", "industry"].includes(this.screener_type) && t && (t = t.filter((e => "exchange" !== e.left))),
                !t || 0 === t.length)
                    return e;
                const o = (0,
                ur.default)(e);
                if (!e.filter)
                    return o.filter = [...t],
                    o;
                for (const e of t) {
                    0 === o.filter.filter((t => (0,
                    ho.default)(t, e))).length && o.filter.push(e)
                }
                return o
            }
            getScannerParams(e) {
                let t = null
                  , o = null
                  , i = null
                  , n = {};
                if (e) {
                    const r = this.getFilterSetById(e);
                    t = r.content.sort_field,
                    o = r.content.filters || {},
                    i = Object.keys(r.content.filters || {}),
                    n = r.content.options
                } else
                    i = Object.keys(Ze).filter((e => this.fieldActive(e))),
                    n = this._options;
                t || (t = this._sortField.value() || this._initialSortField);
                const r = {
                    filter: [],
                    _groups: [],
                    options: n
                };
                for (let e = 0; e < i.length; ++e) {
                    const t = i[e];
                    if ("condition" === Ze[t].control && !Ze[t].value)
                        continue;
                    if ("name" === t && Array.isArray(Ze[t].value)) {
                        let e = !1;
                        const o = Ze[t].value;
                        for (let t = 0; t < o.length; ++t)
                            if ("nequal" === o[t].operator) {
                                e = !0;
                                break
                            }
                        if (e)
                            continue
                    }
                    const n = Ze[t].groupFilter ? r._groups : r.filter;
                    let s = ot(t, Ze[t].value, o, this.selectedIntervalId);
                    if (s.filter2Flag && (s.filter2AndPart.length && (r.filter2 || (r.filter2 = {
                        operator: "and",
                        operands: []
                    }),
                    r.filter2.operands.push({
                        operation: {
                            operator: "or",
                            operands: s.filter2AndPart.map((e => ({
                                expression: e
                            })))
                        }
                    })),
                    s = s.filter),
                    Array.isArray(s))
                        for (let e = 0; e < s.length; ++e)
                            n.push(s[e]);
                    else
                        n.push(s)
                }
                if (this.filterSetChanged.fire(),
                this.eodRestriction.value() !== Pt.None && (r.options.data_restrictions = "PREV_BAR"),
                r.markets = this.markets,
                (0,
                vi.isMarketPage)(this._bridge))
                    return this.patchFiltersForMarketPages(r);
                const s = r.filter.filter((e => "is_primary" === e.left));
                return s && !1 === s.left && (r.filter = r.filter.filter((e => "is_primary" !== e.left))),
                r
            }
            updateImpl(e, t, o, i=!0, n=!1, r=!1) {
                if (t && this._view.isEndReached())
                    return;
                if (this._view.table.dragStarted.value())
                    return;
                if ((0,
                mr.isFeatureEnabled)("screener-maintenance"))
                    return void this._view._popups.showMaintenanceDialog();
                const s = this.generateScanRequest()
                  , l = [0, Wr];
                s.range = l.slice(),
                i ? (t && this._currentItemsRange ? (l[0] = this._currentItemsRange[1],
                l[1] = l[0] + Wr,
                s.range[1] = l[1]) : this._view.resetItems(),
                this._currentItemsRange = l) : this._currentItemsRange ? s.range[1] = this._currentItemsRange[1] : this._view.resetItems(),
                !t && this._prevRequest && (0,
                ho.default)(s, this._prevRequest) ? "function" == typeof e && !0 === o && e() : (this._prevRequest = (0,
                f.clone)(s),
                "function" == typeof e && e(),
                this.scan(s, t, n, r))
            }
            _getSymbols() {
                let e;
                switch (this.screener_type) {
                case "forex":
                    e = ["forex"];
                    break;
                case "sector":
                    e = ["sector"];
                    break;
                case "industry":
                    e = ["industry"];
                    break;
                case "continuous_futures":
                    e = ["futures"];
                    break;
                default:
                    e = this._bridge.types || []
                }
                return {
                    query: {
                        types: e
                    },
                    tickers: this._tickers
                }
            }
            generateScanRequest() {
                const e = Object.assign({}, this.getScannerParams());
                if (e.symbols = this._getSymbols(),
                e.columns = this.getRequestColumns(),
                e.sort = {
                    sortBy: $(this._sortField.value() || this._initialSortField, this.selectedIntervalId),
                    sortOrder: this._sortDirection.value() || this._initialSortDirection
                },
                e.preset = this.preset,
                window.language && (e.options || (e.options = {}),
                e.options.lang = window.language),
                this._bridge.onWidget && "forex" !== this.markets[0]) {
                    const t = (0,
                    v.getMarketsByScreenerType)(this.screener_type)[this.markets[0]];
                    t && t.stocks && t.stocks.length && (e.symbols.query.exchanges = t.stocks.map((e => "NYSE ARCA" === e ? "AMEX" : e)),
                    this._bridge.unavailableWidgetExchanges && this._bridge.unavailableWidgetExchanges.length && (e.symbols.query.exchanges = this._getFilteredExchangesForWidget(e.symbols.query.exchanges)))
                }
                if (e._groups.length > 0 && (e.symbols.groups = e._groups),
                delete e._groups,
                "predefined_filter" === this.currentFilterSetId()) {
                    const t = this.getFilterSetById("predefined_filter");
                    if (e.symbols || (e.symbols = {}),
                    (0,
                    f.merge)(e.symbols, t.symbols),
                    t.content && t.content.filters)
                        for (const [o,i] of Object.entries(t.content.filters))
                            if (Array.isArray(i))
                                for (let t = 0; t < i.length; ++t) {
                                    const n = i[t];
                                    n.operator && "nequal" === n.operator && e.filter.push({
                                        left: o,
                                        operation: n.operator,
                                        right: n.value
                                    })
                                }
                            else {
                                let t = {};
                                void 0 !== i.operator && void 0 !== i.value ? t = {
                                    left: o,
                                    operation: i.operator,
                                    right: i.value
                                } : void 0 !== i && void 0 !== i.operator ? (t = {
                                    left: o,
                                    operation: i.operator
                                },
                                i.right && void 0 !== i.right && (t.right = i.right)) : void 0 !== i && (t = {
                                    left: o,
                                    operation: "equal",
                                    right: i
                                }),
                                "earnings_release_next_date,earnings_release_date" === t.left && (t.left = "earnings_release_date,earnings_release_next_date");
                                e.filter.some((e => (0,
                                ho.default)(t, e) || e.left === t.left && e.operation === t.operation)) || e.filter.push(t)
                            }
                }
                for (let t = 0; t < e.columns.length; ++t)
                    e.columns[t] = $(e.columns[t], this.selectedIntervalId);
                if (Ze[this.searchField].searchValue) {
                    const t = {
                        left: !Ze.description.disabled && Ze.description.checked ? `${this.searchField},description` : this.searchField,
                        operation: "match",
                        right: Ze[this.searchField].searchValue
                    };
                    e.filter.push(t)
                }
                if (this._bridge.screener_field_match && e.filter.push({
                    left: this._bridge.screener_field_match.field,
                    operation: "match",
                    right: this._bridge.screener_field_match.pattern
                }),
                this._bridge.hidden_filter && (this._bridge.hidden_filter.filter && (e.filter = e.filter.concat(this._bridge.hidden_filter.filter)),
                this._bridge.hidden_filter.options && (e.options = Object.assign(e.options || {}, this._bridge.hidden_filter.options))),
                this.switchFilter && e.filter.push(this.switchFilter),
                this._currencySelect) {
                    const t = this._currencySelect.getPriceConversionObject();
                    t && (e.price_conversion = t)
                }
                return this.eodRestriction.value() !== Pt.None ? e.options.data_restrictions = "PREV_BAR" : delete e.options.data_restrictions,
                e
            }
            getRequestColumns() {
                const e = [d.Stock, d.Sector, d.Industry].includes(this.screener_type) ? ["currency", "fundamental_currency_code"] : [];
                return Array.from(new Set([...this.fieldsOrder.value(), ...this._view.table.additionalColumns, ...e]))
            }
            getDownloadData() {
                const e = this._prevRequest ? (0,
                f.clone)(this._prevRequest) : this.generateScanRequest();
                delete e.range;
                const t = this.fieldsOrder.value().slice(0);
                for (let o = 0; o < t.length; ++o) {
                    const i = t[o];
                    e.columns[o] = $(i, this.selectedIntervalId)
                }
                return new Promise((t => {
                    this._sendScanRequest(JSON.stringify(e), (e => {
                        t(JSON.parse(e))
                    }
                    ))
                }
                ))
            }
            scan(e, t, o, i=!1) {
                if (!i && this._bridge.visible && !0 !== this._bridge.visible.value())
                    return;
                const n = JSON.stringify(e);
                this.loading = !0,
                this.loadingStart.fire(t && !o);
                const r = Date.now()
                  , s = function(e) {
                    const t = e.map(( (e, t) => [e, t]));
                    return new Map(t)
                }(e.columns);
                if (this._bridge.isUnavailableWidgetMarket)
                    return void this._view.display({
                        data: []
                    }, s);
                const l = (t, o) => {
                    this.loading = !1;
                    const i = Date.now() - r
                      , n = JSON.parse(t);
                    this._shouldRerender(t, e) && (this._view.display(n, s, o),
                    this._prevScanData = t,
                    this._prevRequestData = (0,
                    f.clone)(e)),
                    this.isServerRender() && n.request && (n.request.symbols && n.request.symbols.tickers && (this._initTickers = n.request.symbols.tickers,
                    this._tickers = this._initTickers),
                    this._options = n.request.options),
                    this.loadingComplete.fire();
                    if (null !== location.pathname.match(/earnings\/{0,1}$/i) && !this.isServerRender()) {
                        const e = "error" === o ? "error" : "ok"
                          , t = void 0 !== n.status && 0 !== n.status ? n.status : "error" === e ? 400 : 200;
                        gr.telemetry.sendReport("calendars", "earnings_http_status", {
                            value: t,
                            additional: {
                                source: "ScreenerWidget"
                            }
                        }),
                        gr.telemetry.sendReport("calendars", "earnings_response_time_frame", {
                            value: i,
                            additional: {
                                source: "ScreenerWidget"
                            }
                        }),
                        gr.telemetry.sendReport("calendars", `earnings_${e}`)
                    }
                }
                  , a = (e, t) => {
                    const o = Date.now() - r;
                    this.loading = !1,
                    this._view.display(e, s, t),
                    this.loadingComplete.fire();
                    if (null !== location.pathname.match(/earnings\/{0,1}$/i) && !this.isServerRender()) {
                        const i = "error" === t ? "error" : "ok"
                          , n = void 0 !== e.status && 0 !== e.status ? e.status : "error" === i ? 400 : 200;
                        gr.telemetry.sendReport("calendars", "earnings_http_status", {
                            value: n,
                            additional: {
                                source: "ScreenerWidget"
                            }
                        }),
                        gr.telemetry.sendReport("calendars", "earnings_response_time_frame", {
                            value: o,
                            additional: {
                                source: "ScreenerWidget"
                            }
                        }),
                        gr.telemetry.sendReport("calendars", `earnings_${i}`)
                    }
                }
                ;
                this.isServerRender() ? l(window.initData.screener_data) : this._markedSymbolsFilter && this._markedSymbolsFilter.isActive() && !this._tickers.length ? this._view.display({
                    data: []
                }, s) : (this.scanRequest && 4 !== this.scanRequest.readyState && this.scanRequest.abort(),
                this.scanRequest = this._sendScanRequest(n, l),
                this.scanRequest.fail(a),
                this.trackEvent("Scan request"),
                window.initData.filter_id && delete window.initData.filter_id)
            }
            preventPrevScanRequest() {
                this.loading && this.scanRequest && (this.scanRequest.abort(),
                this.scanRequest = null)
            }
            _shouldRerender(e, t) {
                return !this._isPrevScanDataEqual(e) || !this._isPrevRequestDataEqual(t)
            }
            _isPrevScanDataEqual(e) {
                return this._prevScanData === e
            }
            _isPrevRequestDataEqual(e) {
                return (0,
                ho.default)(e, this._prevRequestData)
            }
            isFieldSetChanged() {
                if (this._bridge.onWidget)
                    return !1;
                const e = this.currentFieldSetId()
                  , t = e && this.getFieldSetById(e);
                if (!e || !t)
                    return !0;
                const o = t.content.slice().filter(Vr)
                  , i = this.fieldsOrder.value().slice().filter(Vr)
                  , n = !Ze.type.disabled && -1 !== t.content.indexOf("type") !== Ze.type.checked
                  , r = !Ze.description.disabled && -1 !== t.content.indexOf("description") !== Ze.description.checked;
                return o.join() !== i.join() || n || r
            }
            applyFieldSetContent(e) {
                for (const t in Ze)
                    Ze[t].checked = -1 !== e.indexOf(t);
                this.fieldSetChanged.fire(e.filter((e => !0 !== Ze[e].hiddenColumn)))
            }
            applyFieldSetImpl(e, t, o=!0) {
                const i = this.getFieldSetById(e)
                  , n = i.content.filter((e => Ze[e] && !Ze[e].disabled));
                if (this.applyFieldSetContent(n),
                t || this.update(),
                this._view.setFieldSet(e),
                this.settingsSaver.setValue(this.settingKey + ".fieldSetId", i.id, {
                    forceFlush: !0
                }),
                this._view.updateFavoritesToolbar(),
                !t) {
                    const t = this.defaultFieldSets.find((t => t.id === e)) ? e : "custom";
                    this.trackEvent(`Apply field set ${t}`)
                }
                o && this._sendXWindowEvent("screener.apply-field-set", JSON.stringify({
                    setId: e,
                    initial: t,
                    settingKey: this.settingKey
                }))
            }
            applyFieldSet(e, t, i) {
                t || i || !this.isFieldSetChanged() ? this.applyFieldSetImpl(e, t) : new Promise((e => {
                    this._bridge.onWidget ? e() : this._view._popups.showConfirmDialog(o.i18next(null, void 0, o(716801))).then((t => {
                        t ? this._view.popups.confirmAndSaveCurrentFieldSet().then(e, (t => {
                            t && Or.logError(t),
                            e()
                        }
                        )) : e()
                    }
                    ))
                }
                )).then(( () => {
                    this.applyFieldSetImpl(e, t)
                }
                ))
            }
            isFilterSetChanged() {
                if (this._bridge.onWidget)
                    return !1;
                const e = this.currentFilterSetId()
                  , t = e && this.getFilterSetById(e);
                if (!e || !t)
                    return !0;
                const o = this.markets || [this.market];
                ["forex", "crypto"].includes(o[0]) && delete t.content.filters.is_primary;
                const i = this.currentFilterState()
                  , n = {};
                if (t.content.filters)
                    for (const e of Object.keys(t.content.filters)) {
                        const o = t.content.filters[e]
                          , i = Re(o.operator)
                          , r = Re(o.value);
                        (i && r || !i && !r) && (n[e] = o)
                    }
                if (t.content.options && i.options) {
                    if (i.options.active_symbols_only !== t.content.options.active_symbols_only)
                        return !0
                }
                const r = i.filters
                  , s = Object.keys(n).concat(Object.keys(r)).filter(( (e, t, o) => o.indexOf(e) === t));
                for (let e = 0; e < s.length; ++e) {
                    const t = s[e];
                    if (!n.hasOwnProperty(t) || !r.hasOwnProperty(t))
                        return !0;
                    if (Array.isArray(n[t]) ^ Array.isArray(r[t]))
                        return !0;
                    if (Array.isArray(n[t]) && Array.isArray(r[t]) && n[t].sort(this.numericSorter).join() !== r[t].sort(this.numericSorter).join() || !Array.isArray(n[t]) && !(0,
                    ho.default)(n[t], r[t]))
                        return !0
                }
                return !!(t.content.sort_direction && t.content.sort_direction !== i.sort_direction || t.content.sort_field && t.content.sort_field !== i.sort_field)
            }
            currentFilterState() {
                const e = {};
                for (const t in Ze) {
                    const o = Ze[t].value;
                    if (["is_primary", "active_symbol"].includes(t)) {
                        if (!o)
                            continue;
                        e[t] = {
                            operator: "equal",
                            value: !0
                        }
                    } else
                        Ze[t].control && o && ("object" == typeof o ? "condition" === Ze[t].control ? Re(o.operator) || Re(o.value) || (e[t] = o) : Object.keys(o).some((e => !!o[e])) && (e[t] = o) : e[t] = o)
                }
                return {
                    filters: e,
                    sort_field: this._sortField.value() || this._initialSortField,
                    sort_direction: this._sortDirection.value() || this._initialSortDirection,
                    options: this._options
                }
            }
            saveFieldSet(e, t) {
                return this._view.$fieldSetsButton.toggleClass("i-disabled", !0),
                e.type = "fieldSet",
                e.screener_type = this.screener_type,
                this.saveSet(e, t).then((t => {
                    this._view.$fieldSetsButton.toggleClass("i-disabled", !1);
                    const o = t && t.id && `${t.id}`;
                    return e.delete || this.fieldSetSaved.fire(),
                    this._sendXWindowEvent("screener.save-field-set", JSON.stringify({
                        setId: e.delete ? "" : o,
                        settingKey: this.settingKey
                    })),
                    this.applyFieldSetImpl(o),
                    t
                }
                ))
            }
            saveFilterSet(e, t) {
                return this._view.$filterSetsButton.toggleClass("i-disabled", !0),
                e.type = "filterSet",
                e.screener_type = this.screener_type,
                e.markets = this.markets,
                this.saveSet(e, t).then((t => (this._view.$filterSetsButton.toggleClass("i-disabled", !1),
                e.setId = t && t.id && `${t.id}`,
                this.applyFilterSet(t.id),
                e.delete ? this.filterSetDeleted.fire(e.setId) : this.filterSetSaved.fire(e.setId, e.markets, !!e.content),
                this._sendXWindowEvent("screener.save-filter-set", JSON.stringify({
                    setId: e.delete ? "" : e.setId,
                    settingKey: this.settingKey
                })),
                t)))
            }
            saveSet(e, t) {
                return Promise.resolve({
                    type: "POST",
                    url: "/screener/save/",
                    data: e
                }).then(Pr.ajax).then((e => (e.error ? Or.logError(e.error) : t && this.trackEvent(t),
                this.getUserSettings().then(( () => e)))))
            }
            _isExchangeRelevant(e) {
                return Array.isArray(e.value) ? e.value.every((t => e.range.includes(t))) : e.range.includes(e.value)
            }
            _isSubmarketRelevant(e) {
                return (Array.isArray(e.value) ? e.value : [e.value]).every((t => e.range.includes(t)))
            }
            applyFilterSet(e, t, o=!0) {
                const i = this.getFilterSetById(e);
                if (i) {
                    i.content.sort_field && this._sortField.setValue(i.content.sort_field),
                    i.content.sort_direction && this._sortDirection.setValue(i.content.sort_direction),
                    this._options = Object.assign({}, i.content.options);
                    for (const e in Ze)
                        i.content.filters && e in i.content.filters ? ("condition" === Ze[e].control && Array.isArray(i.content.filters[e]) && 2 === i.content.filters[e].length && (i.content.filters[e] = {
                            operator: "in_range",
                            value: i.content.filters[e]
                        }),
                        Ze[e].value = (0,
                        f.clone)(i.content.filters[e]),
                        "submarket" !== e || !Ze[e].disabled && this._isSubmarketRelevant(Ze[e]) || (Ze[e].value = null),
                        "is_primary" === e && Ze[e].disabled && (Ze[e].value = null),
                        "condition" === Ze[e].control && Ze[e].value && (Re(Ze[e].value.value) || Re(Ze[e].value.operator)) && (Ze[e].value = null),
                        "exchange" !== e || this._isExchangeRelevant(Ze[e]) || (Ze[e].value = null)) : !1 !== Ze[e].resettableFilter && (Ze[e].value = null),
                        this._view._resetField(e, !1, !0);
                    this._options.hasOwnProperty("active_symbols_only") && (!0 === this._options.active_symbols_only && (Ze.active_symbol.value = !0),
                    delete this._options.active_symbols_only),
                    this.saveFiltersSettings(),
                    !0 === t ? (this._view.setFilterSet(e),
                    this.filterSetChanged.fire(e)) : this.updateImpl(( () => {
                        this._view.setFilterSet(e),
                        this.filterSetChanged.fire(e)
                    }
                    ), null, !0),
                    this.settingsSaver.setValue(this.settingKey + ".filterSetId", i.id, {
                        forceFlush: !0
                    }),
                    this.trackEvent("Apply filter set"),
                    o && this._sendXWindowEvent("screener.apply-filter-set", JSON.stringify({
                        setId: e,
                        doNotUpdate: t,
                        settingKey: this.settingKey
                    }))
                }
            }
            saveFiltersSettings() {
                this.settingsSaver.setValue(this.settingKey + ".sort_direction", this._sortDirection.value() || this._initialSortDirection),
                this.settingsSaver.setValue(this.settingKey + ".sort_field", this._sortField.value() || this._initialSortField)
            }
            getUserSettings() {
                const e = {
                    filterSets: [],
                    fieldSets: []
                };
                return this.isServerRender() ? this.favoriteFieldSets = this.defaultFieldSets.map((e => e.id)) : this.favoriteFieldSets = this.settingsSaver.getJSON(this.settingKey + ".favoriteFieldSets", this.defaultFieldSets.map((e => e.id))),
                window.is_authenticated ? new Promise((t => {
                    Pr.get("/screener/settings/", {
                        screener_type: this.screener_type
                    }).done((o => {
                        (o = o || e).filterSets = o.filterSets.map((e => {
                            const t = JSON.parse(e.content);
                            var o;
                            return t.filters = (o = t.filters,
                            Object.keys(o).forEach((e => {
                                const t = o[e];
                                "market_cap_basic" === e && "nempty" === t.operation && delete o[e]
                            }
                            )),
                            o),
                            {
                                id: e.id + "",
                                title: e.title,
                                content: t
                            }
                        }
                        )),
                        o.fieldSets = o.fieldSets.map((e => ({
                            id: e.id + "",
                            title: e.title,
                            content: JSON.parse(e.content)
                        }))),
                        this.settings = o,
                        t()
                    }
                    ))
                }
                )) : (this.settings = e,
                Promise.resolve())
            }
            getFieldSetById(e) {
                const t = t => t.id == e
                  , o = this.defaultFieldSets.find(t) || (this.settings ? this.settings.fieldSets.find(t) : null);
                return o ? Object.assign({}, o, {
                    title: (0,
                    Ot.clean)(o.title, !0)
                }) : null
            }
            getFilterSetById(e) {
                if ("predefined_filter" === e)
                    return this._bridge.predefined_filter;
                const t = t => t.id == e
                  , o = bt.find(t) || (this.settings ? this.settings.filterSets.find(t) : null);
                return o ? Object.assign({}, o, {
                    title: (0,
                    Ot.clean)(o.title, !0)
                }) : null
            }
            addFavoriteFieldSet(e) {
                -1 === this.favoriteFieldSets.indexOf(e) && this.favoriteFieldSets.push(e),
                this.settingsSaver.setJSON(this.settingKey + ".favoriteFieldSets", this.favoriteFieldSets, {
                    forceFlush: !0
                }),
                this._view.updateFavoritesToolbar(),
                this.trackEvent("Add field set to favorites"),
                this._sendXWindowEvent("screener.add-field-set-to-favorites", JSON.stringify({
                    settingKey: this.settingKey,
                    date: Date.now()
                }))
            }
            removeFavoriteFieldSet(e) {
                this.favoriteFieldSets = this.favoriteFieldSets.filter((t => t !== e)),
                this.settingsSaver.setJSON(this.settingKey + ".favoriteFieldSets", this.favoriteFieldSets, {
                    forceFlush: !0
                }),
                this._view.updateFavoritesToolbar(),
                this._sendXWindowEvent("screener.remove-field-set-from-favorites", JSON.stringify({
                    settingKey: this.settingKey,
                    date: Date.now()
                }))
            }
            currentFieldSetId() {
                return this.isServerRender() ? window.initData.fieldset_id : this.settingsSaver.getValue(this.settingKey + ".fieldSetId", this.defaultFieldSets[0].id)
            }
            currentFilterSetId() {
                const e = bt.find((e => e.hasOwnProperty("disabled") && !e.disabled)) || bt[0];
                return window.initData.filter_id || this.settingsSaver.getValue(this.settingKey + ".filterSetId", e.id)
            }
            getCurrentState() {
                return {
                    requestParams: this._prevRequest || "none",
                    fieldSet: this.currentFieldSetId(),
                    filterSet: this.currentFilterSetId()
                }
            }
            trackEvent(e) {
                (0,
                hr.trackEvent)("Screener", e, this.markets.join(",") + " " + (this._bridge.standalone ? "standalone" : "on chart"))
            }
            numericSorter(e, t) {
                return e > t ? 1 : -1
            }
            invalidateRequest() {
                delete this._prevRequest
            }
            get selectedIntervalId() {
                if (!this._bridge.hide_controls) {
                    if (this.eodRestriction.value() !== Pt.None)
                        return "1D";
                    const e = this.settingsSaver.getValue(`${this.settingKey}.interval-id`, P);
                    return (this._bridge.onWidget || (0,
                    fr.enabled)(Ht.ProductFeaturesEnum.SCREENER_INTERVALS) && -1 !== (0,
                    fr.getConfig)(Ht.ProductFeaturesEnum.SCREENER_INTERVALS).interval.indexOf(e)) && L(e) ? e : P
                }
            }
            setSelectedIntervalId(e) {
                this.settingsSaver.setValue(`${this.settingKey}.interval-id`, e, {
                    forceFlush: !0
                }),
                this._sendXWindowEvent("screener.change-selected-interval-id", JSON.stringify({
                    settingKey: this.settingKey,
                    id: e
                }));
                const t = L(e);
                t && this.trackEvent(`Apply timeframe ${t.id}`)
            }
            get selectedGroups() {
                return JSON.parse(this.settingsSaver.getValue(`${Nr}.screener-forex.groups`, '["Major","Minor"]')).map((e => Pe[e] || e))
            }
            setSelectedGroups(e) {
                const t = Object.keys(Pe)
                  , o = e.map((e => t.find((t => Pe[t] === e)) || e));
                this.settingsSaver.setValue(`${Nr}.screener-forex.groups`, JSON.stringify(o), {
                    forceFlush: !0
                }),
                this.trackEvent("Change selected groups")
            }
            set markets(e) {
                const t = Array.isArray(e) ? e : [e]
                  , o = JSON.stringify(t);
                this.settingsSaver.setValue(`${Nr}.${this.settingKey}.market`, o, {
                    forceFlush: !0
                }),
                this.trackEvent("Change market"),
                this._sendXWindowEvent("screener.market-changed", JSON.stringify({
                    settingKey: this.settingKey,
                    date: Date.now()
                }))
            }
            get preset() {
                return window.initData.screener_preset
            }
            get markets() {
                const e = (0,
                v.getDefaultMarketForLocale)(Nr, this.screener_type)
                  , t = Object.keys((0,
                v.getMarketFieldValuesByScreenerType)(this.screener_type))
                  , o = this.settingsSaver.getValue(`${Nr}.${this.settingKey}.market`, JSON.stringify([e]));
                let i;
                if (this.settingsSaver.getBool(`${Nr}.${this.settingKey}.is-entire-world`, !1))
                    i = t;
                else
                    try {
                        i = JSON.parse(o),
                        Array.isArray(i) && !i.some((e => !t.includes(e))) || (i = [e])
                    } catch (n) {
                        i = n instanceof SyntaxError && t.includes(o) ? [o] : [e]
                    }
                if (window.initData.screener_market)
                    return [window.initData.screener_market];
                if (!(0,
                Un.isGlobalScreenerAvailable)() && i.length > 1)
                    return i = [e],
                    i;
                return i.every((e => t.includes(e))) ? i : [e]
            }
            set isEntireWorld(e) {
                this.settingsSaver.setValue(`${Nr}.${this.settingKey}.is-entire-world`, e, {
                    forceFlush: !0
                })
            }
            get isEntireWorld() {
                const e = this.settingsSaver.getBool(`${Nr}.${this.settingKey}.is-entire-world`, !1);
                return !(!(0,
                Un.isGlobalScreenerAvailable)() && this.markets.length > 1) && e
            }
            get timezone() {
                return function(e) {
                    const t = (0,
                    v.getMarketsByScreenerType)("stock")[e];
                    return t ? t.timezone : null
                }(this.markets[0])
            }
            _verifyAllSetsChanges(e) {
                return (!0 === e ? Promise.resolve() : new Promise(( (e, t) => {
                    this._bridge.onWidget ? e() : this.isFieldSetChanged() ? this._view.popups.showConfirmDialog(o.i18next(null, void 0, o(716801))).then((t => {
                        t ? this._view.popups.confirmAndSaveCurrentFieldSet().then(e, (t => {
                            t && Or.logError(t),
                            e()
                        }
                        )) : e()
                    }
                    )) : e()
                }
                ))).then(( () => !0 === e ? Promise.resolve() : new Promise(( (e, t) => {
                    this._bridge.onWidget ? e() : this.isFilterSetChanged() ? this._view.popups.showConfirmDialog(o.i18next(null, void 0, o(60440))).then((t => {
                        t ? this._view.popups.confirmAndSaveCurrentFilterSet().then(e, (t => {
                            t && Or.logError(t),
                            e()
                        }
                        )) : e()
                    }
                    )) : e()
                }
                ))))
            }
            setMarket(e, t, o) {
                const i = Array.isArray(e) ? e : [e];
                return !0 !== t && (0,
                ho.default)(i, this.markets) ? Promise.reject() : (this.markets = i,
                this._verifyAllSetsChanges(o).then(( () => this.loadingStart.fire())).then(( () => this.getMetaInfo())).then(( () => {
                    this.defaultFieldSets = g({
                        screenerType: this.screener_type,
                        isCompact: this.isServerRender(),
                        markets: this.markets,
                        subtype: "",
                        isOnWidget: this._bridge.onWidget
                    });
                    let e = this.currentFilterSetId();
                    const t = this.defaultFilterSets.find((t => t.id === e));
                    if (t && t.disabled) {
                        const t = this.defaultFilterSets.find((e => !e.disabled));
                        e = t ? t.id : ""
                    }
                    this.applyFieldSet(this.currentFieldSetId(), !0),
                    this.applyFilterSet(e, !0),
                    this.invalidateRequest(),
                    this._updateEodRestriction(),
                    this.update()
                }
                )))
            }
            _updateEodRestriction() {
                const e = {
                    markets: this.markets,
                    isPro: (0,
                    yr.isPro)(window.user),
                    isAnonymous: !window.is_authenticated,
                    screenerType: this.screener_type,
                    onWidget: (0,
                    vi.isExternalWidget)(this._bridge)
                };
                this.eodRestriction.setValue(function(e) {
                    const {screenerType: t, markets: o, onWidget: i, isPro: n, isAnonymous: r} = e;
                    if (o.length > 1)
                        return Pt.None;
                    if ("stock" !== t)
                        return Pt.None;
                    const s = (0,
                    v.getExchangesByMarkets)(o);
                    if (i)
                        return s.every(Ut.isEmbedUnrestrictedExchange) ? Pt.None : Pt.Widget;
                    if (n)
                        return Pt.None;
                    const l = s.map(Ut.getProductIdFromStockExchange);
                    return l.some((e => (0,
                    qt.isIDCExchange)(e, !0))) && (r || l.some((e => !!e && (0,
                    zt.isUserNeedSignAgreement)(e)))) ? Pt.Site : Pt.None
                }(e))
            }
            changeScreenerType(e) {
                return e === this.screener_type ? Promise.reject() : (this.trackEvent("Change screener type"),
                this._verifyAllSetsChanges().then(( () => {
                    this.disabled.setValue(!0),
                    this.marketChangeProcess = !0,
                    this.screener_type = e,
                    this.settingsSaver.setValue("screener.selected_type_on_chart", e, {
                        forceFlush: !0
                    }),
                    this.settingKey = qr[this.screener_type] || qr.stock,
                    this.defaultFieldSets = g({
                        screenerType: this.screener_type,
                        markets: this.markets,
                        isCompact: this.isServerRender(),
                        subtype: "",
                        isOnWidget: this._bridge.onWidget
                    }),
                    rt(this.screener_type),
                    wt(this.markets);
                    const t = this.selectedGroups;
                    Ze.sector.value = Array.isArray(t) && t[0] === o.i18next(null, void 0, o(882675)) ? null : t
                }
                )).then(( () => this.loadingStart.fire())).then(( () => this.getMetaInfo())).then(( () => this.getUserSettings())).then(( () => {
                    this._checkCurrentSets(),
                    this.applyFieldSet(this.currentFieldSetId(), !0),
                    this.applyFilterSet(this.currentFilterSetId(), !0)
                }
                )).then(( () => {
                    let e = this.currentFilterSetId();
                    const t = this.defaultFilterSets.find((t => t.id === e));
                    if (t && t.disabled) {
                        const t = this.defaultFilterSets.find((e => !e.disabled));
                        e = t ? t.id : ""
                    }
                    this.applyFilterSet(e, !0),
                    this.invalidateRequest(),
                    this._updateEodRestriction(),
                    this.updateImpl(void 0, void 0, void 0, void 0, void 0, !0),
                    this.marketChangeProcess = !1,
                    this.loadingComplete.subscribe(null, ( () => {
                        this.disabled.setValue(!1)
                    }
                    ), !0)
                }
                )))
            }
            backendUrl(e) {
                return (0,
                _r.getBackendUrl)(this.markets, e)
            }
            onLoginStateChange(e) {
                e || this.getUserSettings().then(( () => this.applyFieldSet(this.currentFieldSetId(), !0))).then(( () => this.setMarket(this.markets, !0, !0))).then(( () => this._view.updateMarketButton()))
            }
            showNoticeIfNoFilters(e) {
                let t;
                if (e) {
                    const o = this.getFilterSetById(e);
                    t = o && o.content
                } else
                    t = this.currentFilterState();
                return (!t || !Object.keys(t.filters || {}).length) && (this._view.popups.showNotice(o.i18next(null, void 0, o(957507)), o.i18next(null, void 0, o(824902))),
                !0)
            }
            bindScrollToBottom(e) {
                const t = () => {
                    this.loading || this.update(null, !0)
                }
                  , o = () => {
                    Pr(window).bind("scrollto", {
                        to: "bottom",
                        tolerance: e
                    }, t),
                    this.loadingComplete.unsubscribe(null, o)
                }
                ;
                this.loadingComplete.subscribe(null, o)
            }
            get isFastRefresh() {
                return ["forex", "crypto"].includes(this.screener_type)
            }
            get refreshInterval() {
                if (this.isFastRefresh && !this._bridge.onWidget) {
                    if (this._bridge.hide_controls)
                        return 10;
                    if (!window.is_authenticated)
                        return -1;
                    const e = this.settingsSaver.getInt(this.settingKey + ".refreshInterval", -1) || -1;
                    return 1 === e ? 10 : e
                }
                return window.user && window.user.is_pro && this.settingsSaver.getInt(this.settingKey + ".refreshInterval", -1) || -1
            }
            set refreshInterval(e) {
                this.settingsSaver.setValue(this.settingKey + ".refreshInterval", e, {
                    forceFlush: !0
                }),
                this._view.resetRefreshCounter(),
                -1 !== e && this.trackEvent("Set refresh interval")
            }
            get view() {
                return this._view
            }
            get searchField() {
                return "sector" === this.screener_type || "industry" === this.screener_type ? "description" : "crypto_mkt" === this.screener_type ? "sector" : "name"
            }
            get screenerType() {
                return this.screener_type
            }
            get screenerBridge() {
                return this._bridge
            }
            applySwitch(e) {
                if (delete this._bridge.screener_field_match,
                "crypto_mkt" === this.screener_type)
                    this.switchFilter = {
                        left: "name",
                        operation: "match",
                        right: e + "$"
                    };
                else if ("bonds" === this.screener_type) {
                    this.switchFilter = {
                        left: "description",
                        operation: "yields" === e ? "match" : "nmatch",
                        right: "YIELD$"
                    };
                    const t = "yields" === e ? o.i18next(null, {
                        context: "Bonds"
                    }, o(568461)) : o.i18next(null, void 0, o(862578));
                    Ze.close.title = t,
                    Ze.close.shortTitle = t,
                    this._view.table.setColumnTitle("close", t)
                }
                this.update()
            }
            hasMarkedSymbols() {
                return At.enabled("marked_symbols") && !this._bridge.marked_symbols_disabled
            }
            _screenerSubtype() {
                return this._bridge.screener_subtype || ""
            }
            _buildRequestData(e) {
                if ("global" === this.markets[0]) {
                    const t = JSON.parse(e);
                    return delete t.markets,
                    JSON.stringify(t)
                }
                return e
            }
            _sendScanRequest(e, t) {
                const o = {
                    type: "POST",
                    url: this._getScanUrl("scan"),
                    data: this._buildRequestData(e),
                    success: t,
                    dataType: "text",
                    xhrFields: {
                        withCredentials: !Boolean(this._bridge.onWidget)
                    }
                };
                return Pr.ajax(o)
            }
            _getFilteredExchangesForWidget(e) {
                return e.filter((e => !this._bridge.unavailableWidgetExchanges.includes(e)))
            }
            _getScanUrl(e) {
                const t = new URL(this.backendUrl() + e)
                  , o = window.TradingView && window.TradingView.widgetCustomer || "";
                return o && Dr[o] ? t.searchParams.append("api_key", Dr[o]) : (0,
                vi.isExternalWidget)(this._bridge) && t.searchParams.append("api_key", "widget_user_token"),
                t.searchParams.append("label-product", (0,
                vi.isChartPage)(this._bridge) ? `underchart-screener-${this.screener_type}` : `screener-${this.screener_type}-old`),
                t.toString()
            }
        }
        (os)
    }
    ,
    786284: (e, t, o) => {
        "use strict";
        var i = o(779893);
        const n = o(735566).getLogger("CommonUI.CreateTVBlockPlugin");
        e.exports.createTvBlockWithInstance = function(e, t) {
            if (e && t)
                return e = e.toString(),
                function(r, s, l) {
                    var a, c, d;
                    return "get" === r ? a = s : (c = s,
                    "object" == typeof r && void 0 === s ? (c = r,
                    r = "init") : "string" != typeof r && (r = "init")),
                    "getInstance" === r ? i(this).eq(0).data(e) : "destroy" === r ? (d = i(this).eq(0).data(e)) ? void ("function" == typeof d.destroy ? (o(d, "destroy", c),
                    i(this).eq(0).removeData(e)) : n.logError("[Block Plugin] " + e + " does not support destroy command")) : void console.warn("[Block Plugin] Trying to execute destroy method of " + e + " but it has not been inited") : "get" === r ? (d = i(this).eq(0).data(e)) ? "function" == typeof d[a] ? o(d, a, l) : d[a] : void console.warn("[Block Plugin] Trying to get prop or execute method of " + e + " but it has not been inited") : i(this).each((function() {
                        var s = i(this)
                          , l = s.data(e);
                        void 0 === l && (l = void 0 === c ? t(s) : t(s, c),
                        s.data(e, l)),
                        "init" !== r && ("function" == typeof l[r] ? o(l, r, c) : n.logError("[Block Plugin] " + e + " does not support command " + r))
                    }
                    ))
                }
                ;
            function o(e, t, o) {
                return void 0 === o ? e[t]() : e[t](o)
            }
        }
    }
    ,
    337793: (e, t, o) => {
        "use strict";
        o.d(t, {
            default: () => u
        });
        var i = o(786284)
          , n = (o(183928),
        o(779893))
          , r = o(213398)
          , {merge: s} = o(536794);
        const l = o(735566).getLogger("Ui.TvControlCheckbox")
          , a = {
            labelWrapper: '{{#hasLabel}}<label>{{#labelLeft}}<span class="tv-control-checkbox__label {{#labelAddClass}}{{labelAddClass}}{{/labelAddClass}}">{{labelLeft}}</span>{{/labelLeft}}{{> inputWrapper }}{{#labelRight}}<span class="tv-control-checkbox__label {{#labelAddClass}}{{labelAddClass}}{{/labelAddClass}}">{{labelRight}}</span>{{/labelRight}}</label>{{/hasLabel}}{{^hasLabel}}{{> inputWrapper }}{{/hasLabel}}',
            inputWrapper: '<{{ tag }} class="{{ customClass }}{{#disabled}} i-disabled{{/disabled}}">{{^hasCheckbox}}{{> checkbox }}{{/hasCheckbox}}{{> box }}</{{ tag }}>',
            checkbox: '<input{{#id}} id="{{ id }}"{{/id}} class="{{> checkboxClass }}" type="checkbox"{{#name}} name="{{ name }}"{{/name}}{{#checked}} checked{{/checked}}{{#disabled}} disabled{{/disabled}}>',
            checkboxClass: "{{ customClass }}__input",
            box: '<span class="{{ customClass }}__box {{#boxAddClass}}{{boxAddClass}}{{/boxAddClass}}">' + o(481516) + "</span>"
        }
          , c = "i-inited";
        class d {
            constructor({customClass: e="tv-control-checkbox", $checkbox: t, tag: o, id: i, name: r, checked: s, disabled: a, labelLeft: d, labelRight: u, labelAddClass: h, boxAddClass: p}) {
                this.$el = null,
                void 0 === o && (o = d || u ? "span" : "label");
                const m = t instanceof n && !!t.length;
                if (m) {
                    if (!t.is("input[type=checkbox]"))
                        return void l.logError("`$checkbox` need to be input[type=checkbox]");
                    if (t.hasClass(c))
                        return;
                    this._setInputId(t, i),
                    this._setInputClass(t, e),
                    this._setInputName(t, r),
                    this._setInputChecked(t, s),
                    this._setInputDisabled(t, a),
                    s = !!t.prop("checked"),
                    a = !!t.attr("disabled")
                }
                this.$el = this.render({
                    $checkbox: t,
                    hasCheckbox: m,
                    customClass: e,
                    tag: o,
                    id: i,
                    name: r,
                    checked: s,
                    disabled: a,
                    labelLeft: d,
                    labelRight: u,
                    hasLabel: d || u,
                    labelAddClass: h,
                    boxAddClass: p
                }),
                this.$checkbox = m ? t : this.$el.find("input[type=checkbox]")
            }
            _setInputId(e, t) {
                void 0 !== t && e.attr("id", t)
            }
            _setInputClass(e, t) {
                const o = r.render(a.checkboxClass, {
                    customClass: t
                });
                e.addClass(o)
            }
            _setInputName(e, t) {
                void 0 !== t && e.attr("name", t)
            }
            _setInputChecked(e, t) {
                void 0 !== t && e.prop("checked", !!t)
            }
            _setInputDisabled(e, t) {
                void 0 !== t && (t ? e.setAttribute("disabled", "disabled") : e.removeAttr("disabled"))
            }
            render(e) {
                const t = e.$checkbox
                  , o = n(r.render(a.labelWrapper, e, a));
                if (e.hasCheckbox) {
                    o.insertBefore(t);
                    o.find("." + e.customClass).andSelf().filter("." + e.customClass).eq(0).prepend(t.detach()),
                    t.addClass(c)
                }
                return o
            }
            set checked(e) {
                this._setInputChecked(this.$checkbox, !!e)
            }
            get checked() {
                return !!this.$checkbox.prop("checked")
            }
        }
        n.fn.tvControlCheckbox = (0,
        i.createTvBlockWithInstance)("tv-control-checkbox", (function(e, t={}) {
            return new d(s(t, {
                $checkbox: e
            }))
        }
        ));
        const u = d
    }
    ,
    810047: (e, t, o) => {
        "use strict";
        var i = o(444372)
          , n = o(778785)
          , r = (o(919239),
        o(786284))
          , s = (o(236550),
        o(779893))
          , l = o(213398)
          , a = o(725977);
        const c = {
            wrap: '<span class="tv-control-select__wrap tv-dropdown-behavior {{ class }}{{# touch }} tv-control-select__wrap--touch{{/ touch }}{{# disabled }} i-disabled{{/ disabled }}{{# readonly }} tv-control-select__wrap--readonly{{/ readonly}}"><span class="tv-control-select__control{{^ touch }} tv-dropdown-behavior__button{{/ touch }}{{# disabled }} i-disabled{{/ disabled }}"><span class="tv-control-select__control-inner"></span></span>{{^ touch }}<span class="tv-control-select__dropdown tv-dropdown-behavior__body {{ dropdown_class }} i-hidden"><span class="tv-control-select__scroll tv-dropdown-behavior__scroll"><span class="tv-dropdown-behavior__inscroll">{{> route }}</span></span></span>{{/ touch }}<span class="tv-control-select__caret js-dropdown-toggle"></span></span>',
            route: "{{# items }}{{# option }}{{> option }}{{/ option }}{{^ option }}{{# optgroup }}{{> optgroup }}{{/ optgroup }}{{/ option }}{{/ items }}",
            optgroup: '{{# label }}<span class="tv-dropdown-behavior__item tv-control-select__optgroup-label">{{ label }}</span>{{/ label }}{{> route }}{{# separator }}<hr class="tv-control-select__optgroup-separator">{{/ separator }}',
            option: `<span data-id="{{ id }}" class="tv-dropdown-behavior__item tv-control-select__option{{# disabled }} i-disabled{{/ disabled }}">\n\t\t\t<span class="tv-control-select__option-wrap">\n\t\t\t{{# multiple }}\n\t\t\t\t<span class="tv-control-checkbox">\n\t\t\t\t\t<input class="tv-control-checkbox__input" type="checkbox" {{# selected }} checked{{/ selected }}>\n\t\t\t\t\t<span class="tv-control-checkbox__box">${o(481516)}</span>\n\t\t\t\t</span>\n\t\t\t\t<span class="tv-control-checkbox__label">{{ label }}</span>\n\t\t\t{{/ multiple }}\n\t\t\t{{^ multiple }}\n\t\t\t\t{{ label }}\n\t\t\t{{/ multiple }}\n\t\t\t</span>\n\t\t</span>`
        };
        class d {
            constructor(e={}) {
                this._options = Object.assign({
                    noAnimation: !0
                }, e),
                this.touch = n.mobiletouch,
                this.$select = this._options.$select,
                this._selectElement = this.$select[0],
                this.multiple = Boolean(this.$select.attr("multiple")),
                this._minDisplayCount = this._options.minDisplayCount || 1,
                this._emptyString = this._options.emptyString || i.t(null, {
                    context: "combobox_input"
                }, o(589917)),
                this._defaultPlaceHoder = this._options.defaultPlaceHoder || !1,
                this.disabled = Boolean(this.$select.is(":disabled")),
                this.readonly = this._options.readonly,
                this.options = [],
                this.filterQuery = [],
                this.items = this._parseDomItems(this.$select),
                this._render(),
                e.initialValue && this.val(e.initialValue),
                this.$el.insertBefore(this.$select),
                this.$select.detach().addClass("i-inited").appendTo(this.$el)
            }
            val(e) {
                this.multiple ? this._setMultipleValues(e) : this._setSingleValue(this._findOption(e))
            }
            enable() {
                this.disabled = !1,
                this.$el.add(this.$dropdown).removeClass("i-disabled"),
                this.touch || (this.$el.tvDropdown("enable"),
                this.$control.attr("tabindex", this.$select.attr("tabindex") || 0))
            }
            disable() {
                this.disabled = !0,
                this.$el.add(this.$dropdown).addClass("i-disabled"),
                this.touch || (this.$el.tvDropdown("disable"),
                this.$control.removeAttr("tabindex"))
            }
            setReadonly(e) {
                this.readonly = e,
                this.$el.toggleClass("tv-control-select__wrap--readonly", e),
                this.$controlInner.toggleClass("tv-control-select__control-inner--readonly", e),
                this.$el.tvDropdown("setReadonly", e)
            }
            toggle() {
                this.disabled || this.readonly || (this.touch ? this.$select.click() : this.$el.tvDropdown("toggle"))
            }
            open() {
                this.disabled || this.readonly || (this.touch ? this.$select.click() : this.$el.tvDropdown("open"))
            }
            close() {
                this.disabled || this.readonly || (this.touch ? this.$select.click() : (this._focusOption(this._selectElement.selectedIndex),
                this.$el.tvDropdown("close")))
            }
            destroy() {
                this.$select.off("change"),
                this.$dropdown && this.$dropdown.off("click"),
                this.$select.removeClass("i-inited").insertBefore(this.$el),
                this.$el.tvDropdown("destroy"),
                this.$el.remove()
            }
            updateItems() {
                this.options = [],
                this.items = this._parseDomItems(this.$select);
                const e = this._renderDropdown();
                if (!this.touch) {
                    this.$dropdown.find(".tv-control-select__option").remove();
                    const t = this.$dropdown.find(".tv-dropdown-behavior__inscroll");
                    this.$options = e.find(".tv-control-select__option");
                    for (let e = 0; e < this.$options.length; e++) {
                        const o = s(this.$options[e])
                          , i = o.data("id");
                        this.options[i] && (this.options[i].$el = o,
                        t.append(o))
                    }
                }
                this.multiple ? (this._updateSelectBoxTitle(),
                this._updateCheckBoxes()) : this._updateSingleView(this._selectElement.selectedIndex)
            }
            _focusOption(e) {
                const t = this.options[e].$el;
                if (this._focusedOption = e,
                !this.touch) {
                    if (this._clearFocus(),
                    t.addClass("i-active"),
                    !this.dropdownScroll || !this.opened)
                        return;
                    const e = this.dropdownScroll.currentPosition()
                      , o = t.outerHeight()
                      , i = t.position().top
                      , n = -e + this.dropdownScroll.getContainerHeightWithoutHeader() < i + o;
                    i < -e ? this.dropdownScroll.scrollTo(i) : n && this.dropdownScroll.scrollTo(i + o)
                }
            }
            _setSingleValue(e) {
                const t = this.options[e].value;
                (this.$select.val() && this.$select.val().toString()) !== t.toString() && this.$select.val(t).trigger("change")
            }
            _updateSingleView(e) {
                const t = this.options[e];
                t && (this._focusOption(e),
                this._selectElement.selectedIndex = e,
                this.$controlInner.text(t.label),
                this.$controlInner.toggleClass("tv-control-select__control-inner--option-disabled", t.disabled))
            }
            _toggleOption(e) {
                const t = this.options[e].value
                  , o = this.$select.val() || []
                  , i = o.indexOf(t);
                if (-1 !== i)
                    o.splice(i, 1);
                else if (o.length) {
                    const e = this.options[this._findOption(t)].id
                      , i = o.find((t => this.options[this._findOption(t)].id > e));
                    o.splice(i ? o.indexOf(i) : 0, 0, t)
                } else
                    o.push(t);
                this._setMultipleValues(o)
            }
            _updateCheckBoxes() {
                const e = this.$select.val() || [];
                for (let t = 0; t < this.items.length; t++) {
                    const o = this.items[t];
                    o.$el.find(".tv-control-checkbox__input").prop("checked", -1 !== e.indexOf(o.value))
                }
            }
            _updateSelectBoxTitle() {
                const e = this.$select.val() || [];
                if (e.length && !this._defaultPlaceHoder)
                    if (e.length === this.items.length)
                        this.$controlInner.text(i.t(null, {
                            context: "combobox_input"
                        }, o(484135)));
                    else if (e.length > this._minDisplayCount)
                        this.$controlInner.text(i.t(null, {
                            plural: "{number} items",
                            count: e.length,
                            context: "combobox_input"
                        }, o(432121)).format(e.length));
                    else {
                        const t = e.map((e => this.options[this._findOption(e)].label));
                        this.$controlInner.text(t.join(", "))
                    }
                else
                    this.$controlInner.text(this._emptyString)
            }
            _setMultipleValues(e) {
                this.$select.find("option").prop("selected", !1);
                for (let t = 0; t < e.length; t++) {
                    const o = e[t];
                    this.$select.find(`option[value="${o}"]`).prop("selected", !0)
                }
                this.$select.trigger("change")
            }
            _clearFocus() {
                this.$options.removeClass("i-active")
            }
            _findOption(e) {
                const t = Object.keys(this.options);
                for (let o = 0; o < t.length; o++)
                    if (this.options[t[o]].value.toString() === e.toString())
                        return this.options[t[o]].id
            }
            _parseDomItems(e) {
                const t = e.children()
                  , o = [];
                for (let e = 0; e < t.length; e++) {
                    const i = s(t[e]);
                    let n;
                    "optgroup" === i.prop("tagName").toLowerCase() ? n = {
                        optgroup: !0,
                        separator: Boolean(this._options.showOptgroupSeparators),
                        label: i.attr("label"),
                        items: this._parseDomItems(i)
                    } : "option" === i.prop("tagName").toLowerCase() && (n = {
                        id: i[0].index,
                        option: !0,
                        label: i.text().replace(/\//g, "​$&​"),
                        value: i.attr("value"),
                        disabled: i.is(":disabled")
                    },
                    this.options[n.id] = n),
                    o.push(n)
                }
                return o
            }
            _render() {
                if (this.$el = this._renderDropdown(),
                this.$control = this.$el.find(".tv-control-select__control"),
                this.$controlInner = this.$el.find(".tv-control-select__control-inner"),
                !this.touch) {
                    this.$dropdown = this.$el.find(".tv-control-select__dropdown"),
                    this.$options = this.$el.find(".tv-control-select__option");
                    for (let e = 0; e < this.$options.length; e++) {
                        const t = s(this.$options[e])
                          , o = t.data("id");
                        this.options[o] && (this.options[o].$el = t)
                    }
                }
                this.multiple ? (this._updateSelectBoxTitle(),
                this._updateCheckBoxes()) : (-1 === this._selectElement.selectedIndex && (this._selectElement.selectedIndex = 0),
                this._updateSingleView(this._selectElement.selectedIndex)),
                this.$select.on("change", (e => {
                    this.multiple ? (this._updateSelectBoxTitle(),
                    this._updateCheckBoxes()) : this._updateSingleView(this._findOption(this.$select.val()))
                }
                )),
                this.touch || (this.$el.tvDropdown({
                    scroll: !0,
                    adaptBody: !0,
                    boundingElement: this._options.boundingElement,
                    maxHeight: this._options.maxHeight,
                    dropdownWidth: this._options.dropdownWidth,
                    noAnimation: this._options.noAnimation,
                    closeWithEsc: this._options.closeWithEsc
                }),
                this.dropdownScroll = this.$el.tvDropdown("get", "scroll"),
                this.$dropdown.on("click", ".tv-control-select__option", (e => {
                    const t = parseInt(s(e.currentTarget).data("id"));
                    this.options[t] && !this.options[t].disabled && (this.multiple ? this._toggleOption(t) : (this._setSingleValue(t),
                    this.close()))
                }
                )),
                this.$el.on("beforeOpenMenu", ( () => {
                    this.opened = !0
                }
                )),
                this.$el.on("afterCloseMenu", ( () => {
                    this.opened = !1,
                    this.filterQuery = [],
                    this.multiple || this._focusedOption.toString() === this._selectElement.selectedIndex.toString() || this._focusOption(this._selectElement.selectedIndex),
                    this.multiple && this._clearFocus()
                }
                )),
                this.$el.on("click", ( () => {
                    this.$control.focus()
                }
                )),
                this.$el.on("keydown", (e => {
                    this._filter(e)
                }
                )),
                this.disabled ? this.disable() : this.enable())
            }
            _renderDropdown() {
                return s(l.render(c.wrap, {
                    items: this.items,
                    class: this.$select.attr("class"),
                    touch: this.touch,
                    multiple: this.multiple,
                    disabled: this.disabled,
                    readonly: this.readonly,
                    dropdown_class: this._options.addDropdownClass
                }, c)).removeClass("tv-control-select")
            }
            _filter(e) {
                if (9 === e.which)
                    return void this.close();
                if (13 === e.which && !this.opened)
                    return;
                if ((40 === e.which || 32 === e.which) && !this.opened)
                    return this.open(),
                    void e.preventDefault();
                e.preventDefault(),
                this.opened || this.open();
                const t = String.fromCharCode(e.which).toLowerCase();
                if (t && -1 === [9, 13, 27, 38, 40].indexOf(e.which)) {
                    this.filterQuery.push(t);
                    const e = this.filterQuery.join("");
                    let o;
                    const i = Object.keys(this.options);
                    for (let t = 0; t < i.length; t++)
                        if (0 === this.options[i[t]].label.toLowerCase().indexOf(e) && !this.options[i[t]].disabled) {
                            o = this.options[i[t]].id;
                            break
                        }
                    void 0 !== o && this._focusOption(o),
                    this.clearFilter && clearTimeout(this.clearFilter),
                    this.clearFilter = setTimeout(( () => {
                        this.filterQuery = []
                    }
                    ), 500)
                }
                32 !== e.which && 13 !== e.which || !this.opened || (this.multiple ? this._toggleOption(this._focusedOption) : (this._setSingleValue(this._focusedOption),
                this.close(),
                this.$el.one("keyup", (e => e.stopPropagation()))));
                const o = e => {
                    let t;
                    if (this.options[this._focusedOption]) {
                        const o = this.options[this._focusedOption].$el[e](this.$dropdown, ".tv-control-select__option:not(.i-disabled)");
                        t = o.length ? o.data("id") : this._focusedOption
                    } else
                        t = this.$options.first(".tv-control-select__option:not(.i-disabled)").data("id");
                    return t
                }
                ;
                40 === e.which && (this.filterQuery = [],
                this._focusOption(o("nextUntil"))),
                38 === e.which && (this.filterQuery = [],
                this._focusOption(o("prevUntil"))),
                27 === e.which && this.close()
            }
        }
        s.fn.tvControlSelect = (0,
        r.createTvBlockWithInstance)("tv-control-select", (function(e, t={}) {
            return new d(a.extend(t, {
                $select: e
            }))
        }
        ))
    }
    ,
    236550: (e, t, o) => {
        "use strict";
        o.r(t),
        o.d(t, {
            DropdownView: () => a
        });
        o(275631),
        o(323066);
        var i = o(786284)
          , n = o(169707)
          , r = o(991336)
          , s = o(931924)
          , l = o(779893);
        class a {
            constructor(e, t={}) {
                this.$el = e,
                this.$wrap = t.$wrap || e.find(".tv-dropdown-behavior__button"),
                this.$body = t.$body || e.find(".tv-dropdown-behavior__body"),
                this.notCloseWithCtrl = !!t.notCloseWithCtrl && t.notCloseWithCtrl,
                this.closeWithEsc = void 0 === t.closeWithEsc || t.closeWithEsc,
                this.closeWithEsc && this.$el.attr("tabIndex", 0),
                (e.data("scroll") || t.scroll) && (this.$scroll = this.$body.find(".tv-dropdown-behavior__scroll"),
                this.$inScroll = this.$scroll.find(".tv-dropdown-behavior__inscroll"),
                this.scroll = new n.SidebarCustomScroll(this.$scroll[0],this.$inScroll[0],{
                    showTopShadow: !1,
                    showBottomShadow: !1
                }),
                this.$scrollBar = l(this.scroll.getScrollBar()),
                this.$scrollBar && this.$scrollBar.on("mousedown.tv-dropdown-view-scroll", ( () => {
                    this.offClickOutside(),
                    l(document).on("mouseup.tv-dropdown-view-scroll", ( () => {
                        this.onClickOutside(),
                        l(document).off("mouseup.tv-dropdown-view-scroll")
                    }
                    ))
                }
                ))),
                (e.data("adaptBody") || t.adaptBody) && (this._adaptBody = !0),
                (e.data("adaptOnlyInScrollHeight") || t.adaptOnlyInScrollHeight) && (this._adaptOnlyInScrollHeight = !0),
                this._fitScreen = e.data("fitScreen") || t.fitScreen,
                this._maxHeight = e.data("maxHeight") || t.maxHeight,
                this._dropdownWidth = e.data("dropdownWidth") || t.dropdownWidth,
                this._boundingElement = t.boundingElement,
                this.$wrap.add(e.find(".js-dropdown-toggle")).on("click", (e => {
                    l(e.currentTarget).hasClass("js-prevent-dropdown") || this.toggle()
                }
                )),
                this._checkIgnoreClickOutside = [],
                s.enabled("embed_resizer_overrides") && r.EmbedViewportDimensionsProvider.getInstance().startListening()
            }
            toggle() {
                this.opened ? this.close(!0) : this.open()
            }
            open() {
                this.opened || this.disabled || this.readonly || (this.$el.trigger("beforeOpenMenu"),
                this.$body.removeClass("i-hidden").addClass("i-opened"),
                this.$wrap.addClass("i-dropped"),
                this.$el.addClass("i-opened"),
                "horz" === this._fitScreen && this.fitHorizontally(),
                this._adaptBody && this.adaptBody(),
                this.onClickOutside(),
                this.$el.trigger("updateScroll"),
                this.$el.trigger("afterOpenMenu"),
                this.opened = !0,
                this.closeWithEsc && this.$el.on("keypress keyup", (e => {
                    27 === e.keyCode && this.close(!0)
                }
                )))
            }
            onClickOutside() {
                setTimeout(( () => {
                    this.$body.on("clickoutside", (e => {
                        this._checkIgnoreClickOutside.length && this._checkIgnoreClickOutside.some((t => t(e))) || this.close(!0)
                    }
                    ))
                }
                ), 0)
            }
            offClickOutside() {
                this.$body.off("clickoutside")
            }
            setCheckIgnoreClickOutside(e) {
                this._checkIgnoreClickOutside.push(e)
            }
            dropCheckIgnoreClickOutside(e) {
                var t = this._checkIgnoreClickOutside.indexOf(e);
                -1 !== t && this._checkIgnoreClickOutside.splice(t, 1)
            }
            close(e=!1) {
                !this.opened || this.disabled || this.readonly || !e && this.notCloseWithCtrl && (window.event.ctrlKey || window.event.metaKey) || (this.offClickOutside(),
                this.$wrap.removeClass("i-dropped"),
                this.$el.trigger("beforeCloseMenu"),
                this.$body.removeClass("i-opened").addClass("i-hidden"),
                this.$el.removeClass("i-opened"),
                this.closeWithEsc && this.$el.off("keypress keyup"),
                this.opened = !1,
                this.$el.trigger("afterCloseMenu"))
            }
            isOpened() {
                return this.opened
            }
            updateScroll() {
                this.scroll && (this.scroll.updateScrollBar(),
                this.scroll.scrollToStart())
            }
            enable() {
                this.$wrap.removeClass("i-disabled"),
                this.disabled = !1
            }
            disable() {
                this.$wrap.addClass("i-disabled"),
                this.disabled = !0
            }
            setReadonly(e) {
                this.readonly = e
            }
            adaptBody() {
                const e = this.$body
                  , t = this.$wrap.get(0).getBoundingClientRect()
                  , o = this._boundingElement ? this._boundingElement.getBoundingClientRect() : {
                    top: 0,
                    bottom: window.innerHeight,
                    height: window.innerHeight
                };
                if (s.enabled("embed_resizer_overrides")) {
                    const e = r.EmbedViewportDimensionsProvider.getInstance().data();
                    e && (o.top = Math.max(o.top, e.top - 32),
                    o.height = Math.min(o.height, e.height),
                    o.bottom = Math.min(o.bottom, e.bottom))
                }
                const i = parseFloat(e.css("padding-top"))
                  , n = parseFloat(e.css("padding-bottom"))
                  , l = this.$inScroll.outerHeight(!0) + i + n;
                if (this.scroll && this.scroll.scrollToStart(),
                this._adaptOnlyInScrollHeight) {
                    const i = e.find(".js-dropdown-dummy")
                      , r = i ? parseFloat(i.css("padding-bottom")) + parseFloat(i.css("margin-bottom")) : 0
                      , s = t.top + t.height + r;
                    return void this.$el.find(".tv-dropdown-behavior__scroll").css("maxHeight", o.bottom - n - s - 25)
                }
                const a = this._maxHeight || l
                  , c = t.top + a + 25 <= o.bottom
                  , d = o.top + 15 + a <= t.bottom;
                let u, h = this._maxHeight || "auto";
                if (c)
                    u = -i;
                else if (d)
                    u = -a + t.height + n;
                else {
                    u = -t.top + o.top + 15 + 25 + i + n;
                    const e = o.height - 15 - 25 - n;
                    a > e && (h = e)
                }
                e.css("top", u),
                e.height(h),
                this._dropdownWidth && e.width(this._dropdownWidth)
            }
            fitHorizontally() {
                this.$body.css("marginLeft", 0);
                const e = document.body.getBoundingClientRect()
                  , t = parseFloat(l(document.body).css("paddingRight"))
                  , o = this.$body.offset();
                o.right = o.left + this.$body.outerWidth();
                const i = Math.max(Math.min(0, e.right - t - o.right), e.left - o.left);
                i && this.$body.css("marginLeft", i)
            }
            destroy() {
                this.scroll && this.scroll.destroy(),
                this.offClickOutside(),
                this.$el.find(".js-dropdown-toggle").off("click"),
                this.$wrap.off("click")
            }
        }
        l.fn.tvDropdown = (0,
        i.createTvBlockWithInstance)("tv-dropdown", (function(e, t={}) {
            return new a(e,t)
        }
        ))
    }
    ,
    969680: (e, t, o) => {
        "use strict";
        o.r(t),
        o.d(t, {
            detectAutoDirection: () => b,
            forceLTRStr: () => h,
            forceLTRStrSsr: () => p,
            forceRTLStr: () => _,
            getLTRScrollLeft: () => g,
            getLTRScrollLeftOffset: () => v,
            isRtl: () => n,
            startWithLTR: () => u,
            stripLTRMarks: () => d,
            stripLTRStrSsr: () => m
        });
        var i = o(64531);
        const n = () => "rtl" === window.document.dir
          , r = "‎"
          , s = "‪"
          , l = "‫"
          , a = "‬"
          , c = new RegExp(r + "|" + s + "|" + l + "|" + a,"g");
        function d(e) {
            return "" !== e && n() && null != e ? e.replace(c, "") : e
        }
        function u(e) {
            return "" !== e && n() && null != e ? r + e : e
        }
        function h(e) {
            return "" !== e && n() && null != e ? s + e + a : e
        }
        function p(e) {
            return s + e + a
        }
        function m(e) {
            return e.startsWith(s) && e.endsWith(a) ? e.slice(1, -1) : e
        }
        function _(e) {
            return "" !== e && n() && null != e ? l + e + a : e
        }
        function g(e) {
            return (0,
            i.getNormalizedScrollLeft)(e, "rtl")
        }
        function v(e, t) {
            const o = (0,
            i.detectScrollType)();
            if ("indeterminate" === o)
                return 0;
            switch (o) {
            case "negative":
                t = e.clientWidth - e.scrollWidth + t;
                break;
            case "reverse":
                t = e.scrollWidth - e.clientWidth - t
            }
            return t
        }
        const f = /[^\u0000-\u0040\u005B-\u0060\u007B-\u00BF\u00D7\u00F7\u02B9-\u02FF\u2000-\u200E\u2010-\u2029\u202C\u202F-\u2BFF]/
          , y = /[\u0590-\u07FF\u200F\u202B\u202E\uFB1D-\uFDFD\uFE70-\uFEFC]/;
        function b(e) {
            const t = f.exec(e);
            return t ? y.test(t[0]) ? "rtl" : "ltr" : ""
        }
    }
    ,
    383913: (e, t, o) => {
        "use strict";
        o.d(t, {
            availableOffers: () => n
        });
        var i = o(803912);
        const n = new class {
            constructor() {
                this._isInvalid = !0,
                this._offers = {}
            }
            runOrUpdate(e) {
                this._isInvalid ? window.requestIdleCallback ? window.requestIdleCallback(( () => this._updateOffers().then(e))) : setTimeout(( () => this._updateOffers().then(e)), 0) : e(this._offers)
            }
            getData() {
                return this._offers
            }
            invalidate(e) {
                this._isInvalid = !0,
                this.runOrUpdate(e ?? ( () => {}
                ))
            }
            setInitial(e) {
                this._isInvalid = !1,
                this._offers = e
            }
            ensureOffers() {
                return new Promise((e => this.runOrUpdate(e)))
            }
            withAvailableOffers(e) {
                return async (...t) => (await this.ensureOffers(),
                e(...t))
            }
            async _updateOffers() {
                return window.user.available_offers || (window.user.available_offers = {}),
                this._updateOffersPromise || (this._updateOffersPromise = (0,
                i.fetch)("/api/v1/offers/", {
                    method: "GET",
                    credentials: "include"
                }).then((async e => {
                    const t = await e.json();
                    return delete this._updateOffersPromise,
                    this._isInvalid = !1,
                    this._offers = Object.entries(t).reduce(( (e, [t,o]) => (o && (e[t] = o),
                    e)), {}),
                    window.user.available_offers = this._offers,
                    t
                }
                )).catch(( () => ({})))),
                this._updateOffersPromise
            }
        }
    }
    ,
    184026: (e, t, o) => {
        "use strict";
        var i;
        function n(e) {
            return !(!e || !Object.keys(e).length)
        }
        function r(e) {
            return !!e.is_trial
        }
        function s(e) {
            return !!e?.pro_plan
        }
        function l(e) {
            return s(e) && !r(e)
        }
        function a(e) {
            return e.type === i.ProPlan
        }
        function c(e) {
            return e.type === i.Exchange
        }
        function d(e) {
            return e ? c(e) || function(e) {
                return e.type === i.Coins
            }(e) ? e.text_id ?? "" : e.discount_text_id ?? e.text_id ?? "" : ""
        }
        o.d(t, {
            ProductType: () => i,
            getProductId: () => d,
            isExchange: () => c,
            isPaidPro: () => l,
            isPlan: () => a,
            isPro: () => s,
            isProductDefined: () => n,
            isTrial: () => r
        }),
        function(e) {
            e[e.ProPlan = 1] = "ProPlan",
            e[e.NewsFeed = 3] = "NewsFeed",
            e[e.Exchange = 4] = "Exchange",
            e[e.Connection = 6] = "Connection",
            e[e.Coins = 8] = "Coins"
        }(i || (i = {}))
    }
    ,
    707934: (e, t, o) => {
        "use strict";
        o.r(t),
        o.d(t, {
            createGoProDialog: () => d,
            isUpgradableFeature: () => c,
            onGoProDialog: () => l
        });
        var i = o(638456);
        const n = new Set
          , r = []
          , s = new Promise((e => {
            window.addEventListener("load", ( () => {
                setTimeout(( () => {
                    e()
                }
                ), 3e3)
            }
            )),
            setTimeout(( () => {
                e()
            }
            ), 3e3)
        }
        ));
        function l(e, t) {
            r.push(e),
            t && t.forEach((e => {
                n.add(e)
            }
            ))
        }
        const a = ["sessionLock", "sessionLogout", "checkingNSE"];
        function c(e) {
            return !1 === a.includes(e)
        }
        async function d(e) {
            if (await s,
            r.forEach((t => {
                t(e.feature)
            }
            )),
            n.has(e.feature))
                return;
            if ((0,
            i.isSymphonyEmbed)() && c(e.feature)) {
                const t = await Promise.all([o.e(21122), o.e(92537), o.e(38452), o.e(87833), o.e(84712), o.e(7276), o.e(47093), o.e(44581)]).then(o.bind(o, 681143));
                e.actionsOverride = t.generateSymphonyActions({
                    feature: e.feature,
                    upgradeMessage: e.upgradeMessage,
                    additional: e.customParams
                }),
                e.hideLimitTable = !0
            }
            const t = await Promise.all([o.e(38124), o.e(67811), o.e(18883), o.e(92537), o.e(19190), o.e(39759), o.e(52186), o.e(67131), o.e(59546), o.e(65161), o.e(94036), o.e(7276), o.e(51989), o.e(6796), o.e(17725), o.e(39190), o.e(82321), o.e(9384), o.e(83215), o.e(7160), o.e(77195), o.e(5246)]).then(o.bind(o, 427013));
            await (window.pro?.ensureValidShopConf()),
            t.renderGoproDialog(e)
        }
        window.TradingView.createGoProDialog = d
    }
    ,
    810978: (e, t, o) => {
        "use strict";
        o.d(t, {
            runOrSigninWithFeature: () => r
        });
        var i = o(120296);
        var n = o(314802);
        const r = (e, t) => {
            {
                if ((0,
                n.isOnMobileAppPage)("any"))
                    return void window.runOrSignIn(e, t);
                const r = [];
                if (t.paidAccountCheck && r.push(( () => (0,
                i.paidAccountCheck)({
                    successButtonText: t.paidAccountSuccessButtonText
                }))),
                window.is_authenticated)
                    r.reduce(( (e, t) => e.then(t)), Promise.resolve()).then(e).catch(( () => {}
                    ));
                else {
                    !async function(e) {
                        (await Promise.all([o.e(38124), o.e(73229), o.e(18883), o.e(92537), o.e(19190), o.e(39759), o.e(52186), o.e(67131), o.e(59546), o.e(65161), o.e(94036), o.e(7276), o.e(51989), o.e(6796), o.e(17725), o.e(82321), o.e(9384), o.e(83215), o.e(7160), o.e(77195), o.e(94913)]).then(o.bind(o, 437685))).renderRunOrSigninWithFeatureDialog(e)
                    }({
                        signInSuccess: e,
                        options: {
                            source: t.source,
                            sourceMeta: t.sourceMeta,
                            feature: t.feature,
                            mode: t.mode,
                            startTrial: t.startTrial
                        }
                    })
                }
            }
        }
        ;
        window.TradingView.runOrSigninWithFeature = r
    }
    ,
    958178: (e, t, o) => {
        "use strict";
        o.d(t, {
            AggregateError: () => v,
            ApiError: () => g,
            accumulateErrors: () => r,
            checkPhoneCode: () => c,
            continuePartialAuth: () => C,
            fetchPost: () => s,
            firstLoginData: () => l,
            firstLoginDataUrl: () => n,
            recoverPassword: () => y,
            recoverPasswordUrl: () => f,
            recoveryPassword: () => d,
            resendLink: () => a,
            signin: () => p,
            signinUrl: () => u,
            signup: () => _,
            signupUrl: () => m,
            socialAuth: () => S
        });
        var i = o(803912);
        const n = "/accounts/first_login_data/";
        function r(e, t) {
            return Object.entries(e).map((e => new g(e[1].join("\n"),t,e[0])))
        }
        function s(e, t) {
            return (0,
            i.fetch)(e, {
                method: "POST",
                credentials: "include",
                mode: "same-origin",
                body: t
            })
        }
        function l(e) {
            return s(n, e).then((e => e.ok ? e.json() : e.json().then((t => {
                throw new v(r(t.errors, e.status))
            }
            ))))
        }
        function a() {
            return s("/api/v1/users/anon/change-email/resend/").then((e => e.ok ? e.json() : e.json().then((e => {
                throw Error(e.error)
            }
            ))))
        }
        function c(e) {
            return s("/api/v1/recover_password/check_phone_code/", e).then((e => e.ok ? e.json() : e.json().then((e => {
                throw Error(e.error)
            }
            ))))
        }
        function d(e) {
            return s("/api/v1/recover_password/", e).then((e => e))
        }
        const u = "/accounts/signin/";
        function h(e) {
            return e.json().then((t => {
                if ("errors"in t && Object.keys(t.errors).length)
                    throw new v(r(t.errors, e.status));
                if ("error"in t && "" !== t.error || "code"in t || !e.ok)
                    throw new g(t.error || t.detail,e.status,t.code,t.confirm_auth_data,t.two_factor_types,function(e) {
                        if (e.signature)
                            return {
                                signature: e.signature,
                                email: e.email || "",
                                phone: e.phone || "",
                                socials: []
                            };
                        return
                    }(t));
                return t
            }
            ))
        }
        function p(e) {
            return s(u, e).then(h)
        }
        const m = "/accounts/signup/";
        function _(e) {
            return s(m, e).then((e => e.json().then((t => {
                if ("errors"in t && "" !== t.errors)
                    throw new v(r(t.errors, e.status))
            }
            ))))
        }
        class g extends Error {
            constructor(e, t, o, i, n, r) {
                super(e),
                this.type = o,
                this.status = t,
                this.secondFactorTypes = n,
                this.socialConfirmData = i,
                this.resetPasswordData = r
            }
        }
        class v extends Error {
            constructor(e) {
                super(e.map((e => e.message)).join("\n")),
                this.errors = [],
                this.errors = e
            }
        }
        const f = "/api/v1/recover_password/search/";
        function y(e) {
            return s(f, e).then(h)
        }
        const b = "/accounts/complete/android-jwt/"
          , w = {
            Accept: "application/json"
        };
        function S(e, t) {
            const o = new URL(window.origin + b);
            return Object.entries(t).forEach(( ([e,t]) => t && o.searchParams.append(e, t))),
            (0,
            i.fetch)(o.href, {
                method: "POST",
                body: e,
                headers: w
            }).then(h)
        }
        function C(e, t) {
            const o = new URL(window.origin + `/accounts/complete/${e}/`)
              , n = new FormData;
            return n.append("partial_token", t),
            (0,
            i.fetch)(o.href, {
                method: "POST",
                body: n,
                headers: w
            }).then(h)
        }
    }
    ,
    678708: (e, t, o) => {
        "use strict";
        o.d(t, {
            isShowPromoVideo: () => u,
            isSignModalOpen: () => d,
            showSignModal: () => c
        });
        var i = o(586240)
          , n = o(446196)
          , r = o(203999);
        const s = i["media-mf-tablet-landscape"]
          , l = i["media-mf-tablet-vertical"];
        let a = () => !1;
        async function c(e) {
            const t = Object.assign({}, e, {
                isShowVideo: u()
            });
            if (window.TVD && window.TVD.signIn)
                return window.TVD.signIn(t);
            {
                !function() {
                    const e = document.createElement("link")
                      , t = document.createElement("link");
                    e.rel = "preload",
                    e.as = "image",
                    e.href = n,
                    t.rel = "preload",
                    t.as = "image",
                    t.href = r,
                    document.head.appendChild(e),
                    document.head.appendChild(t)
                }();
                const e = await Promise.all([o.e(13415), o.e(18883), o.e(32937), o.e(98185), o.e(46195), o.e(92537), o.e(15371), o.e(61171), o.e(67780), o.e(78894), o.e(38452), o.e(90579), o.e(87833), o.e(73425), o.e(65743), o.e(76052), o.e(84712), o.e(43329), o.e(27702), o.e(59546), o.e(63585), o.e(26070), o.e(38490), o.e(87104), o.e(72297), o.e(82321), o.e(12831), o.e(54153), o.e(62526), o.e(36123)]).then(o.bind(o, 455338));
                return a = e.isSignModalOpen,
                e.showSignModal(t)
            }
        }
        function d() {
            return a()
        }
        function u() {
            const e = window.matchMedia(s).matches
              , t = window.matchMedia(l).matches
              , o = window.innerWidth
              , i = window.innerHeight;
            return !!e || !!t && !(!e && i < o)
        }
    }
    ,
    825957: (e, t, o) => {
        "use strict";
        o.d(t, {
            showSupportDialog: () => n
        });
        o(659863);
        var i = o(383913);
        function n(e) {
            return Promise.all([o.e(36708), o.e(98185), o.e(83439), o.e(92537), o.e(15371), o.e(61681), o.e(98933), o.e(61171), o.e(67780), o.e(78894), o.e(38452), o.e(90579), o.e(87833), o.e(67691), o.e(65743), o.e(50874), o.e(98158), o.e(84712), o.e(84587), o.e(43329), o.e(40887), o.e(87265), o.e(98681), o.e(41392), o.e(66534), o.e(71761), o.e(11194), o.e(89126), o.e(92990), o.e(27702), o.e(16990), o.e(11069), o.e(82870), o.e(37242), o.e(59546), o.e(63585), o.e(64175), o.e(26070), o.e(38490), o.e(65161), o.e(95542), o.e(91961), o.e(52165), o.e(34709), o.e(77284), o.e(82321), o.e(25977), o.e(47793), o.e(12831), o.e(82043), o.e(24951), o.e(73248), o.e(82687), o.e(82497), o.e(13831), o.e(16187), o.e(88536), o.e(57084), o.e(25149), o.e(44596), o.e(57274)]).then(o.bind(o, 975170)).then((t => i.availableOffers.runOrUpdate(( () => new t.SupportDialog(e).open()))))
        }
    }
    ,
    388130: (e, t, o) => {
        "use strict";
        o.d(t, {
            UserStatus: () => i,
            getDaysUntilBlock: () => l,
            getDaysUntilBlockForUser: () => s,
            isUserLockedOut: () => a
        });
        var i, n = o(302221), r = o(336669);
        !function(e) {
            e.NonPro = "non_pro",
            e.Pro = "pro"
        }(i || (i = {}));
        const s = (0,
        r.memoize)(( () => window.user.is_trial && window.user.pro_plan ? window.user.is_expert || window.user.declared_status !== i.Pro ? n.WEEKLY_SUBSCRIPTION_DAYS_LEN : n.MONTHLY_SUBSCRIPTION_DAYS_LEN : n.WEEKLY_SUBSCRIPTION_DAYS_LEN))
          , l = (0,
        r.memoize)(( () => {
            const e = window.user.declared_status_timestamp;
            if (!e)
                return null;
            const t = ((new Date).getTime() - new Date(1e3 * e).getTime()) / 1e3 / 24 / 60 / 60;
            return s() - Math.floor(t)
        }
        ))
          , a = (0,
        r.memoize)((e => {
            const t = e ?? l();
            return Boolean(null !== t && t <= 0)
        }
        ))
    }
    ,
    120296: (e, t, o) => {
        "use strict";
        o.d(t, {
            paidAccountCheck: () => s
        });
        var i = o(49437)
          , n = o(638456);
        const r = (0,
        o(735566).getLogger)("PaidAccountCheck");
        async function s(e) {
            const {onlyCheck: t, successButtonText: s, isNeedCancelButton: l} = e
              , a = window.user
              , c = i.TVLocalStorage.getItem("previous_username");
            if (a && window.is_authenticated && !a.is_pro && c && !(0,
            n.isSymphonyEmbed)()) {
                const {getProfile: e} = await Promise.all([o.e(35256), o.e(90254)]).then(o.bind(o, 824027));
                try {
                    const i = await e(c);
                    if (Boolean(i.pro_plan)) {
                        if (t)
                            return c;
                        {
                            const {showWrongAccountDialog: e} = await Promise.all([o.e(18607), o.e(85938), o.e(12019)]).then(o.bind(o, 723216));
                            return e({
                                userName: c,
                                isNeedCancelButton: l,
                                successButtonText: s
                            })
                        }
                    }
                } catch (e) {
                    r.logError(e.message)
                }
            }
            return !1
        }
    }
    ,
    991336: (e, t, o) => {
        "use strict";
        o.d(t, {
            EmbedViewportDimensionsProvider: () => n
        });
        var i = o(931924);
        class n {
            constructor() {
                this._data = null,
                this._messageReceiver = null
            }
            startListening() {
                this._messageReceiver || (this._messageReceiver = e => {
                    if (e.data)
                        try {
                            const t = JSON.parse(e.data);
                            "set-embed-resizer-overrides" === t.event && (this._data = t.edges)
                        } catch {}
                }
                ,
                this._addMessageListener())
            }
            destroy() {
                this._removeMessageListener()
            }
            data() {
                return this._data
            }
            static getInstance() {
                return this._instance || (this._instance = new n),
                this._instance
            }
            _addMessageListener() {
                this._messageReceiver && window.addEventListener("message", this._messageReceiver)
            }
            _removeMessageListener() {
                this._messageReceiver && window.removeEventListener("message", this._messageReceiver),
                this._messageReceiver = null
            }
        }
        i.enabled("embed_resizer_overrides") && n.getInstance().startListening()
    }
    ,
    17957: (e, t, o) => {
        "use strict";
        o.d(t, {
            getPlatform: () => r
        });
        var i = o(314802)
          , n = o(638456);
        function r() {
            return (0,
            n.isDesktopApp)() ? "desktop" : (0,
            i.isOnMobileAppPage)("old") ? "ios" : (0,
            i.isOnMobileAppPage)("new") ? "android" : "web"
        }
    }
    ,
    357173: (e, t, o) => {
        "use strict";
        o.d(t, {
            getProPlanDetailsForUser: () => l,
            getProPlanWeight: () => s
        });
        o(778016);
        var i = o(232759)
          , n = o(803912)
          , r = o(958178);
        function s(e) {
            return window.pro ? "free" === e ? -1 : window.pro.getProduct((0,
            i.getProductForTrial)(e)).upgrade_weight : 0
        }
        async function l() {
            const e = await (0,
            n.fetch)("/pro-plans/profile/")
              , t = await e.json();
            if (e.ok)
                return t;
            if (403 === e.status) {
                const o = t;
                throw new r.ApiError(o.detail,e.status,o.code)
            }
            throw new Error(`Unable to handle unexpected response: ${String(e.text())}`)
        }
    }
    ,
    904207: (e, t, o) => {
        "use strict";
        o.r(t),
        o.d(t, {
            getTranslatedSymbolDescription: () => r
        });
        var i = o(444372);
        function n(e) {
            const t = `#${e}-symbol-description`
              , n = i.t(t, void 0, o(956316));
            return n === t ? null : n
        }
        function r(e) {
            if (void 0 !== e.pro_name) {
                const t = n(e.pro_name);
                if (null !== t)
                    return t;
                if (void 0 !== e.short_name) {
                    const t = n(e.short_name);
                    if (null !== t)
                        return t
                }
            }
            return "en" !== e.language && void 0 !== e.local_description && e.language === window.language || "en" === e.language && void 0 !== e.local_description && e.language === window.language ? e.local_description : e.description || ""
        }
    }
    ,
    16241: (e, t, o) => {
        "use strict";
        function i(e) {
            return e + "…"
        }
        o.d(t, {
            appendEllipsis: () => i
        })
    }
    ,
    336669: (e, t, o) => {
        "use strict";
        function i(e, t) {
            const o = new Map;
            return function(...i) {
                const n = "" + (t ? t.apply(null, i) : i[0]);
                if (!o.has(n)) {
                    const t = e.apply(this, i);
                    return o.set(n, t),
                    t
                }
                return o.get(n)
            }
        }
        o.d(t, {
            memoize: () => i
        })
    }
    ,
    199583: (e, t, o) => {
        "use strict";
        o.d(t, {
            addUtmToUrl: () => n
        });
        var i = o(283834);
        function n(e, t) {
            if (!/([a-zA-Z0-9.-]*tradingview.com)|localhost/.test(e))
                return e;
            const o = (0,
            i.buildUtmQueryString)(t);
            if ("" === o)
                return e;
            const n = e.indexOf("?")
              , r = e.indexOf("#")
              , s = -1 !== r;
            if (-1 !== n && (!s || n < r)) {
                return `${e.slice(0, n)}?${s ? e.slice(n + 1, r) : e.slice(n + 1)}&${o}${s ? e.slice(r) : ""}`
            }
            if (s) {
                return `${e.slice(0, r)}?${o}${e.slice(r)}`
            }
            return `${e}?${o}`
        }
    }
    ,
    283834: (e, t, o) => {
        "use strict";
        o.d(t, {
            buildUtmQueryString: () => l,
            buildUtmQueryStringFromUrlParams: () => a,
            filterUtmInfo: () => s
        });
        var i = o(728104)
          , n = o(927301);
        const r = ["utm_source", "utm_medium", "utm_campaign"];
        function s(e) {
            const t = {};
            return r.forEach((o => {
                const i = e[o];
                "string" == typeof i && "" !== i && (t[o] = (0,
                n.htmlEscape)(i))
            }
            )),
            t
        }
        function l(e, t=!1) {
            const o = (0,
            i.createUrlParams)(e);
            return o && t ? "?" + o : o
        }
        function a(e) {
            return l(s((0,
            i.getUrlParams)()), e)
        }
    }
    ,
    460925: e => {
        e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 18 18" width="18" height="18"><path fill="currentColor" d="M12 4h3v1h-1.04l-.88 9.64a1.5 1.5 0 0 1-1.5 1.36H6.42a1.5 1.5 0 0 1-1.5-1.36L4.05 5H3V4h3v-.5C6 2.67 6.67 2 7.5 2h3c.83 0 1.5.67 1.5 1.5V4ZM7.5 3a.5.5 0 0 0-.5.5V4h4v-.5a.5.5 0 0 0-.5-.5h-3ZM5.05 5l.87 9.55a.5.5 0 0 0 .5.45h5.17a.5.5 0 0 0 .5-.45L12.94 5h-7.9Z"/></svg>'
    }
    ,
    324020: e => {
        e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 28 28" width="28" height="28"><path fill="currentColor" d="M15 5H6.5C5.67 5 5 5.67 5 6.5v15c0 .83.67 1.5 1.5 1.5h15c.83 0 1.5-.67 1.5-1.5V16h1v5.5a2.5 2.5 0 0 1-2.5 2.5h-15A2.5 2.5 0 0 1 4 21.5v-15A2.5 2.5 0 0 1 6.5 4H15v1Zm7.41-.3a2 2 0 0 0-2.82 0l-.94.95-7.5 7.5-1 1-.15.14V19h4.7l.15-.15 1-1 7.5-7.5.94-.94a2 2 0 0 0 0-2.82L22.41 4.7Zm-2.12.71a1 1 0 0 1 1.42 0l1.88 1.88a1 1 0 0 1 0 1.42l-.59.58-1.65-1.64L19.71 6l.58-.59Zm.36 2.94L22.29 10l-6.79 6.8-1.65-1.65-1.64-1.65L19 6.7l1.65 1.65Zm-7.5 7.5 1.64 1.65-.5.5H11v-3.3l.5-.5 1.65 1.65Z"/></svg>'
    }
    ,
    702008: e => {
        e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 28 28" width="28" height="28" fill="none"><path fill="currentColor" d="M23 13h-1V4H6v19.476L14 20l3.008 1.307-.42.907L14 21.09 5 25V3h18zm0 6h4v1h-4v4h-1v-4h-4v-1h4v-4h1zm-6-3H9v-1h8zm2-4H9v-1h10zm0-4.005H9v-1h10z"/></svg>'
    }
    ,
    366493: e => {
        e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 28 28" width="28" height="28" fill="none"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16.5 20L11 14.5 16.5 9"/></svg>'
    }
    ,
    379978: e => {
        e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 18 18" width="18" height="18" fill="none"><path stroke="currentColor" d="M8 5l3.5 3.5L8 12"/></svg>'
    }
    ,
    470088: e => {
        e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 22 15" width="22" height="15"><g fill="none" fill-rule="evenodd" stroke-width="2"><path stroke="#757575" d="M6.25 5.812L11 10.087l4.75-4.275M11 9.868V.315"/><path stroke="#ADAEB0" d="M21 10v4H1v-4"/></g></svg>'
    }
    ,
    820713: e => {
        e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 18 18" width="18" height="18"><g transform="translate(-8 -7)"><path fill-rule="evenodd" d="M17 11c1.38 0 2.63.56 3.54 1.46L18 15h6V9l-2.05 2.05A6.976 6.976 0 0 0 17 9c-3.53 0-6.43 2.61-6.92 6h2.02a5 5 0 0 1 4.9-4zm6.92 6H21.9a5 5 0 0 1-4.9 4c-1.38 0-2.63-.56-3.54-1.46L16 17h-6v6l2.05-2.05A6.976 6.976 0 0 0 17 23c1.55 0 2.98-.51 4.14-1.36l1.5-1.5A6.89 6.89 0 0 0 23.92 17z"/></g></svg>'
    }
    ,
    301393: e => {
        e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 28 28" width="28" height="28"><path fill="currentColor" d="M13.5 6a8.5 8.5 0 1 0 0 17 8.5 8.5 0 0 0 0-17zM4 14.5a9.5 9.5 0 1 1 19 0 9.5 9.5 0 0 1-19 0z"/><path fill="currentColor" d="M9 14h4v-4h1v4h4v1h-4v4h-1v-4H9v-1z"/></svg>'
    }
    ,
    376844: e => {
        e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="299 131 12 7" width="12" height="7"><path fill="none" d="M300 132l5 5 5-5"/></svg>'
    }
    ,
    959597: e => {
        e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 14 14" width="14" height="14"><path d="M9.901 9.639c-.102-.797.218-1.775.77-2.356l1.438-1.527-2.07-.395c-.784-.142-1.615-.742-2.008-1.446L7.003 2.06 5.97 3.917c-.391.702-1.222 1.301-2 1.443l-2.08.396 1.44 1.526c.547.577.866 1.549.77 2.353l-.262 2.086 1.93-.897a2.95 2.95 0 0 1 1.233-.254c.44 0 .87.085 1.233.254l1.93.897-.263-2.082zm.992-.127l.458 3.624c.014.105-.006.16-.02.176-.028.03-.109.005-.182-.03L7.812 11.73a1.973 1.973 0 0 0-.811-.16c-.302 0-.59.057-.81.16l-3.338 1.552c-.118.056-.164.051-.182.03-.014-.016-.034-.07-.02-.178L3.11 9.51c.06-.503-.162-1.18-.505-1.54L.087 5.302c-.085-.091-.09-.148-.086-.158.003-.01.04-.053.16-.077l3.621-.689c.491-.09 1.069-.506 1.315-.948L7.004 0l1.902 3.43c.246.442.824.859 1.312.947l3.617.69c.123.024.162.068.164.077.003.01-.003.066-.089.157L11.4 7.97c-.348.367-.57 1.045-.506 1.543z"/></svg>'
    }
    ,
    339750: e => {
        e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 28 28" width="28" height="28" fill="none"><path stroke="currentColor" stroke-linecap="round" stroke-width="1.5" d="M7 15l5 5L23 9"/></svg>'
    }
    ,
    161379: e => {
        e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 18 18" width="18" height="18"><g fill="none" fill-rule="evenodd"><path d="M9.5 8.5c1.105 0 2-.395 2-1.5s-.895-1.5-2-1.5h-3v3h3zm.5 4c1.38 0 2.5-.62 2.5-2s-1.12-2-2.5-2H6.5v4H10z"/><path stroke-linecap="square" d="M9.5 3.5V5m0 8v1.5m-2-1.5v1.5m-2-2H6m-.5-7H6m1.5-2V5"/><circle cx="9" cy="9" r="8.5"/></g></svg>'
    }
    ,
    481516: e => {
        e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 11 9" width="11px" height="9px"><path fill="none" fill-rule="evenodd" stroke-width="2" d="M1 3.22l3.415 3.496L10 1"/></svg>'
    }
    ,
    690863: e => {
        e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 6 9" width="6" height="9"><path fill="none" stroke="currentColor" d="M1 1l3.5 3.5L1 8"/></svg>'
    }
    ,
    663719: e => {
        e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 60 60"><path d="M0 46l35-35 14 14-35 35H0zM39 7l6-6c5-5 19 9 14 14l-6 6z"/></svg>'
    }
    ,
    890756: e => {
        e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 18 18" width="100%" height="100%"><g fill="none" fill-rule="evenodd" stroke="currentColor"><circle cx="9" cy="9" r="8.5"/><path stroke-linecap="square" d="M5.5 13.5v-9h4m-2 4H6m3.5 1l3 4m0-4l-3 4"/></g></svg>'
    }
    ,
    491540: e => {
        e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 18 18" width="18" height="18" fill="none"><path stroke="currentColor" d="M2.5 14.5c1.68-1.26 3.7-2 6.5-2s4.91.74 6.5 2m-13-11c1.68 1.26 3.7 2 6.5 2s4.91-.74 6.5-2"/><circle stroke="currentColor" cx="9" cy="9" r="8.5"/><path stroke="currentColor" d="M13.5 9c0 2.42-.55 4.58-1.4 6.12-.87 1.56-1.98 2.38-3.1 2.38s-2.23-.82-3.1-2.38c-.85-1.54-1.4-3.7-1.4-6.12s.55-4.58 1.4-6.12C6.77 1.32 7.88.5 9 .5s2.23.82 3.1 2.38c.85 1.54 1.4 3.7 1.4 6.12z"/></svg>'
    }
    ,
    83170: e => {
        e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 14 12" width="14" height="12"><g fill="none" fill-rule="evenodd" stroke="#9DB2BD"><path d="M1 0l12 12M13 0L1 12"/></g></svg>'
    }
    ,
    630001: e => {
        e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 19 22" width="19" height="22" fill="none"><path fill="currentColor" fill-rule="evenodd" d="M5 1v9.13a4 4 0 0 1 0 7.75V21a1 1 0 1 1-2 0v-3-.12a4 4 0 0 1 0-7.75V1a1 1 0 0 1 2 0zM2 14a2 2 0 1 1 4 0 2 2 0 0 1-4 0zm12-9.88V1a1 1 0 1 1 2 0v3.12a4 4 0 0 1 0 7.75V21a1 1 0 1 1-2 0v-9.13a4 4 0 0 1 0-7.75zM15 10a2 2 0 1 0 0-4 2 2 0 0 0 0 4z"/></svg>'
    }
    ,
    289523: e => {
        e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" width="20" height="20"><path fill="none" fill-rule="evenodd" stroke-linecap="round" stroke-linejoin="round" d="M8.36 3.608a6.002 6.002 0 1 0 2.755 11.672 6.01 6.01 0 0 0 4.277-4.64 5 5 0 1 1-7.03-7.03z"/></svg>'
    }
    ,
    366619: e => {
        e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 120 120" width="120" height="120"><path fill="#B2B5BE" fill-rule="evenodd" d="M23 39a36 36 0 0 1 72 0v13.15l15.1 8.44 2.16 1.2-1.64 1.86-12.85 14.59 3.73 4.03L98.57 85 95 81.13V117H77v-12H67v9H50V95H40v22H23V81.28l-3.8 3.61-2.76-2.9 4.05-3.84-12.77-14.5-1.64-1.86 2.16-1.2L23 52.34V39Zm72 36.33 10.98-12.46L95 56.73v18.6ZM23 56.92v18.03L12.35 62.87 23 56.92ZM59 7a32 32 0 0 0-32 32v74h9V91h18v19h9v-9h18v12h10V39A32 32 0 0 0 59 7Zm-7 36a3 3 0 1 1-6 0 3 3 0 0 1 6 0Zm19 3a3 3 0 1 0 0-6 3 3 0 0 0 0 6Z"/></svg>'
    }
    ,
    267562: e => {
        e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 120 120" width="120" height="120"><path fill="#131722" fill-rule="evenodd" d="M23 39a36 36 0 0 1 72 0v13.15l15.1 8.44 2.16 1.2-1.64 1.86-12.85 14.59 3.73 4.03L98.57 85 95 81.13V117H77v-12H67v9H50V95H40v22H23V81.28l-3.8 3.61-2.76-2.9 4.05-3.84-12.77-14.5-1.64-1.86 2.16-1.2L23 52.34V39Zm72 36.33 10.98-12.46L95 56.73v18.6ZM23 56.92v18.03L12.35 62.87 23 56.92ZM59 7a32 32 0 0 0-32 32v74h9V91h18v19h9v-9h18v12h10V39A32 32 0 0 0 59 7Zm-7 36a3 3 0 1 1-6 0 3 3 0 0 1 6 0Zm19 3a3 3 0 1 0 0-6 3 3 0 0 0 0 6Z"/></svg>'
    }
    ,
    24122: e => {
        e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path fill="currentColor" d="M4 8a4 4 0 1 0 8 0 4 4 0 1 0-8 0"/></svg>'
    }
    ,
    676809: e => {
        e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path fill="currentColor" fill-rule="evenodd" d="M0 8a8 8 0 1 0 16 0A8 8 0 1 0 0 8zm2 0a6 6 0 1 0 12 0A6 6 0 1 0 2 8zm2 0a4 4 0 1 0 8 0 4 4 0 1 0-8 0"/></svg>'
    }
    ,
    62555: e => {
        e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" width="16" height="16"><g fill="none" stroke="currentColor" stroke-width="2" transform="translate(1 1)"><circle cx="6" cy="6" r="6"/><path d="M10 10l4 4"/></g></svg>'
    }
    ,
    966631: e => {
        e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 18 18" width="18" height="18"><path d="M3.06 6.295C2.37 7.397 2 8.67 2 10c0 3.866 3.134 7 7 7s7-3.134 7-7-3.134-7-7-7V2c4.418 0 8 3.582 8 8s-3.582 8-8 8-8-3.582-8-8c0-1.556.444-3.007 1.212-4.236l.848.53zm0 0C2.37 7.397 2 8.67 2 10c0 3.866 3.134 7 7 7s7-3.134 7-7-3.134-7-7-7V2c4.418 0 8 3.582 8 8s-3.582 8-8 8-8-3.582-8-8c0-1.556.444-3.007 1.212-4.236l.848.53zM6 2.5L9 0v5L6 2.5z"/></svg>'
    }
    ,
    238739: e => {
        e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" width="20" height="20"><g fill="none" fill-rule="evenodd"><path stroke="currentColor" d="M3.5 10.5h2v5h-2z"/><path stroke="currentColor" stroke-linecap="square" d="M4.5 8.5v2m0 5v2"/><path fill="currentColor" d="M14 8h3v6h-3z"/><path stroke="currentColor" stroke-linecap="square" d="M15.5 6.5v9m-7-11h4m-2-2v4"/></g></svg>'
    }
    ,
    554794: e => {
        e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" width="20" height="20"><g fill="none" fill-rule="evenodd"><path stroke="currentColor" d="M14.5 4.5h2v6h-2z"/><path stroke="currentColor" stroke-linecap="square" d="M15.5 2.5v2m0 6v2"/><path fill="currentColor" d="M3 4h3v6H3z"/><path stroke="currentColor" stroke-linecap="square" d="M4.5 2.5v9m4 4h4m-2-2v4"/></g></svg>'
    }
    ,
    48632: e => {
        e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" width="20" height="20"><path fill="none" fill-rule="evenodd" stroke="currentColor" stroke-linecap="square" d="M14.5 10.5v7m-1-7h2m-5 1v-4m-3 2v-4m-3 2v-4"/></svg>'
    }
    ,
    502506: e => {
        e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" width="20" height="20"><path fill="none" fill-rule="evenodd" stroke="currentColor" stroke-linecap="square" d="M14.5 2.5v7m-1 0h2m-5 2v-4m-3 7v-4m-3 6v-4"/></svg>'
    }
    ,
    162088: e => {
        e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" width="20" height="20"><path fill="none" fill-rule="evenodd" stroke="currentColor" stroke-linecap="square" d="M10.5 6.5v7m-2-4h4"/></svg>'
    }
    ,
    601285: e => {
        e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" width="20" height="20"><g fill="none" fill-rule="evenodd"><path fill="currentColor" d="M15 4h3v12h-3z"/><path stroke="currentColor" stroke-linecap="square" d="M16.5 17.5v-15"/><path stroke="currentColor" d="M10.5 7.5h2v4h-2z"/><path stroke="currentColor" stroke-linecap="square" d="M11.5 5.5v2m0 4v2m-4 2v-4m-3 5v-4m-3 5v-4"/></g></svg>'
    }
    ,
    383425: e => {
        e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" width="20" height="20"><g fill="none" fill-rule="evenodd"><path fill="currentColor" d="M9 8h3v6H9z"/><path stroke="currentColor" stroke-linecap="square" d="M10.5 6.5v9"/><path stroke="currentColor" d="M14.5 4.5h2v11h-2z"/><path stroke="currentColor" stroke-linecap="square" d="M15.5 2.5v2m-9 4v-4m-3 3v-4m12 12v2"/></g></svg>'
    }
    ,
    829016: e => {
        e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" width="20" height="20"><g fill="none" fill-rule="evenodd"><path stroke="currentColor" d="M6.5 6.5h2v5h-2z"/><path stroke="currentColor" stroke-linecap="square" d="M7.5 4.5v2m0 5v2"/><path fill="currentColor" d="M16 5h3v6h-3z"/><path stroke="currentColor" stroke-linecap="square" d="M17.5 3.5v9"/><path fill="currentColor" d="M11 3h3v2h-3z"/><path stroke="currentColor" stroke-linecap="square" d="M12.5 2.5v3m-8 11v-4m-2 6v-4"/></g></svg>'
    }
    ,
    14723: e => {
        e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" width="20" height="20"><g fill="none" fill-rule="evenodd"><path stroke="currentColor" stroke-linecap="square" d="M11.5 9.5v8m-4-8v-4m8 4v-4m-11 2v-4"/><path fill="currentColor" d="M10 9h3v4h-3z"/></g></svg>'
    }
    ,
    693505: e => {
        e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" width="20" height="20"><g fill="none" fill-rule="evenodd"><path stroke="currentColor" stroke-linecap="square" d="M11.5 4.5v10m-4-3v-4m-3 7v-4"/><path fill="currentColor" d="M10 4h3v3h-3z"/><path stroke="currentColor" stroke-linecap="square" d="M15.5 11.5v-4"/></g></svg>'
    }
    ,
    159402: e => {
        e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" width="20" height="20"><g fill="none" fill-rule="evenodd"><path stroke="currentColor" d="M10.5 5.5h2v7h-2z"/><path stroke="currentColor" stroke-linecap="square" d="M11.5 3.5v2m0 7v2"/><path fill="currentColor" d="M15 5h3v3h-3z"/><path stroke="currentColor" stroke-linecap="square" d="M16.5 3.5v6.07m-9 3.93v-4m-3 6v-4m-3 6v-4"/></g></svg>'
    }
    ,
    364697: e => {
        e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" width="20" height="20"><g fill="none" fill-rule="evenodd"><path fill="currentColor" d="M10 7h3v8h-3z"/><path stroke="currentColor" stroke-linecap="square" d="M11.5 5.5v11"/><path stroke="currentColor" d="M15.5 7.5h2v3h-2z"/><path stroke="currentColor" stroke-linecap="square" d="M16.5 5.5v2m0 3v2m-9-2v-4m-3 2v-4m-3 2v-4"/></g></svg>'
    }
    ,
    110416: e => {
        e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" width="20" height="20"><g fill="none" fill-rule="evenodd" stroke="currentColor"><path stroke-linecap="square" d="M11.5 6.5v7m-4 0v-4m8 4v-4m-11 2v-4"/><path d="M10.5 13.5h2v3h-2z"/></g></svg>'
    }
    ,
    623788: e => {
        e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" width="20" height="20"><g fill="none" fill-rule="evenodd"><path fill="currentColor" d="M15 9h3v4h-3z"/><path stroke="currentColor" stroke-linecap="square" d="M11.5 9.5v-2m0-5v2m5 3v7m0-5v2"/><path stroke="currentColor" d="M10.5 4.5h2v3h-2z"/><path stroke="currentColor" stroke-linecap="square" d="M7.5 13.5v-2m0-5v2"/><path stroke="currentColor" d="M6.5 8.5h2v3h-2z"/><path stroke="currentColor" stroke-linecap="square" d="M3.5 17.5v-2m0-5v2"/><path stroke="currentColor" d="M2.5 12.5h2v3h-2z"/></g></svg>'
    }
    ,
    492619: e => {
        e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" width="20" height="20"><g fill="none" fill-rule="evenodd"><path fill="currentColor" d="M15 7h3v4h-3z"/><path stroke="currentColor" stroke-linecap="square" d="M11.5 17.5v-2m0-5v2m5-7v7m0-3v2"/><path stroke="currentColor" d="M10.5 12.5h2v3h-2z"/><path stroke="currentColor" stroke-linecap="square" d="M7.5 13.5v-2m0-5v2"/><path stroke="currentColor" d="M6.5 8.5h2v3h-2z"/><path stroke="currentColor" stroke-linecap="square" d="M3.5 9.5v-2m0-5v2"/><path stroke="currentColor" d="M2.5 4.5h2v3h-2z"/></g></svg>'
    }
    ,
    11951: e => {
        e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" width="20" height="20"><g fill="none" fill-rule="evenodd"><path stroke="currentColor" stroke-linecap="square" d="M9.5 9.5v8m-4-9v-4m-3 2v-4"/><path fill="currentColor" d="M8 7h3v5H8z"/><path stroke="currentColor" stroke-linecap="square" d="M14.5 11.5v4"/><path stroke="currentColor" d="M13.5 7.5h2v4h-2z"/></g></svg>'
    }
    ,
    630410: e => {
        e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" width="20" height="20"><g fill="none" fill-rule="evenodd"><path stroke="currentColor" stroke-linecap="square" d="M9.5 11.5v2m-4 2v-4m-3 6v-4"/><path stroke="currentColor" d="M8.5 7.5h2v4h-2z"/><path stroke="currentColor" stroke-linecap="square" d="M14.5 2.5v5"/><path fill="currentColor" d="M13 7h3v5h-3z"/></g></svg>'
    }
    ,
    672687: e => {
        e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" width="20" height="20"><g fill="none" fill-rule="evenodd"><path fill="currentColor" d="M13 4h3v12h-3z"/><path stroke="currentColor" stroke-linecap="square" d="M10.5 11.5v-4m-3 2v-4m-3 2v-4"/></g></svg>'
    }
    ,
    651316: e => {
        e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" width="20" height="20"><g fill="none" fill-rule="evenodd" stroke="currentColor"><path d="M13.5 4.5h2v11h-2z"/><path stroke-linecap="square" d="M10.5 12.5v-4m-3 6v-4m-3 6v-4"/></g></svg>'
    }
    ,
    601354: e => {
        e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" width="20" height="20"><g fill="none" fill-rule="evenodd"><path stroke="currentColor" stroke-linecap="square" d="M4.5 2.5v11"/><path fill="currentColor" d="M3 4h3v8H3z"/><path stroke="currentColor" stroke-linecap="square" d="M14.5 4.5v2m0 7v2"/><path stroke="currentColor" d="M13.5 6.5h2v7h-2z"/><path stroke="currentColor" stroke-linecap="square" d="M9.5 12.5v5"/><path fill="currentColor" d="M8 14h3v2H8z"/></g></svg>'
    }
    ,
    829605: e => {
        e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" width="20" height="20"><g fill="none" fill-rule="evenodd" stroke="currentColor"><path d="M10.5 9.5h2v3h-2z"/><path stroke-linecap="square" d="M11.5 8.5v-6m-4 13v-4m8 4v-4m-11 6v-4"/></g></svg>'
    }
    ,
    488287: e => {
        e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" width="20" height="20"><g fill="none" fill-rule="evenodd"><path stroke="currentColor" stroke-linecap="square" d="M10.5 3.5v13"/><path fill="currentColor" d="M9 8h3v4H9z"/></g></svg>'
    }
    ,
    636627: e => {
        e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" width="20" height="20"><g fill="none" fill-rule="evenodd" stroke="currentColor"><path stroke-linecap="square" d="M10.5 3.5v5m0 3v5"/><path d="M9.5 8.5h2v3h-2z"/></g></svg>'
    }
    ,
    775110: e => {
        e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" width="20" height="20"><g fill="none" fill-rule="evenodd"><path fill="currentColor" d="M15 12h3v4h-3z"/><path stroke="currentColor" stroke-linecap="square" d="M16.5 10.5v7"/><path fill="currentColor" d="M11 8h3v4h-3z"/><path stroke="currentColor" stroke-linecap="square" d="M12.5 6.5v7"/><path fill="currentColor" d="M7 4h3v4H7z"/><path stroke="currentColor" stroke-linecap="square" d="M8.5 2.5v7m-4 1v-4m-2 6v-4"/></g></svg>'
    }
    ,
    923549: e => {
        e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" width="20" height="20"><g fill="none" fill-rule="evenodd"><path fill="currentColor" d="M15 4h3v2h-3z"/><path stroke="currentColor" stroke-linecap="square" d="M11.5 11.5v-2m0-7v2m5-2v5"/><path stroke="currentColor" d="M10.5 4.5h2v5h-2z"/><path stroke="currentColor" stroke-linecap="square" d="M7.5 14.5v-2m0-7v2"/><path stroke="currentColor" d="M6.5 7.5h2v5h-2z"/><path stroke="currentColor" stroke-linecap="square" d="M3.5 17.5v-2m0-7v2"/><path stroke="currentColor" d="M2.5 10.5h2v5h-2z"/></g></svg>'
    }
    ,
    837553: e => {
        e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" width="20" height="20"><path fill="none" fill-rule="evenodd" stroke="currentColor" stroke-linecap="square" d="M14.5 8.5h4m-2-2v4m-7-6h4m-2-2v4m-6 2h4m-2-2v4m-3 5v-4m-2 6v-4"/></svg>'
    }
    ,
    249478: e => {
        e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" width="20" height="20"><path fill="none" fill-rule="evenodd" stroke="currentColor" stroke-linecap="square" d="M14.5 11.5h4m-2-2v4m-7 2h4m-2-2v4m-6-6h4m-2-2v4m-3-5v-4m-2 2v-4"/></svg>'
    }
    ,
    944499: e => {
        e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 14 12" width="14" height="12" fill="none"><path fill="currentColor" fill-rule="evenodd" clip-rule="evenodd" d="M2.71 1.29H1.3v9.42H2.7V1.3zM1.3 0C.58 0 0 .58 0 1.29v9.42C0 11.42.58 12 1.29 12H2.7C3.42 12 4 11.42 4 10.71V1.3C4 .58 3.42 0 2.71 0H1.3zM7.7 1.29H6.3v9.42H7.7V1.3zM6.3 0C5.58 0 5 .58 5 1.29v9.42c0 .71.58 1.29 1.29 1.29H7.7C8.42 12 9 11.42 9 10.71V1.3C9 .58 8.42 0 7.71 0H6.3zm5 1.29h1.42v9.42H11.3V1.3zm-1.29 0C10 .58 10.58 0 11.29 0h1.42C13.42 0 14 .58 14 1.29v9.42c0 .71-.58 1.29-1.29 1.29H11.3c-.71 0-1.29-.58-1.29-1.29V1.3z"/></svg>'
    }
    ,
    764162: e => {
        e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 14" width="16" height="14"><g fill="none" stroke="currentColor" stroke-width="1.5"><path d="M15 9v4H1V9M8 9V0"/><path d="M5 6l3 3 3-3"/></g></svg>'
    }
    ,
    326529: e => {
        e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 18 18" width="18" height="18"><path fill="#ADAEB0" fill-rule="evenodd" d="M12.5 11h-.79l-.28-.27A6.47 6.47 0 0 0 13 6.5 6.5 6.5 0 1 0 6.5 13c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L17.49 16l-4.99-5zm-6 0C4.01 11 2 8.99 2 6.5S4.01 2 6.5 2 11 4.01 11 6.5 8.99 11 6.5 11z"/></svg>'
    }
    ,
    711732: e => {
        e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 10 10" width="10" height="10"><g fill="none" stroke="#758696" stroke-width="2"><path d="M1.125 9.11L9.13 1.104M1.125 1.105L9.13 9.11"/></g></svg>'
    }
    ,
    891250: e => {
        e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 8 3" width="8" height="3"><path d="M0 0 L4 3 L8 0 Z"/></svg>'
    }
    ,
    182951: e => {
        e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 8 3" width="8" height="3"><path d="M0 3 L4 0 L8 3 Z"/></svg>'
    }
    ,
    578507: e => {
        e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" width="20" height="20"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="8.5" cy="8.5" r="3"/><path stroke-linecap="square" d="M13.5 8.5h3M.5 8.5h3M8.5 3.5v-3M13 4l2-2M2 15l2-2"/><path stroke-linecap="square" stroke-linejoin="bevel" d="M2 2l2 2"/><path stroke-linecap="square" d="M13 13l2 2M8.5 16.5v-3"/></g></svg>'
    }
    ,
    407499: e => {
        e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 6 26" width="3" height="13" fill="currentColor"><circle cx="3" cy="3" r="3"/><circle cx="3" cy="13" r="3"/><circle cx="3" cy="23" r="3"/></svg>'
    }
    ,
    701131: (e, t, o) => {
        "use strict";
        e.exports = o.p + "mock-dark.16b5f3a431f502b03ae3.svg"
    }
    ,
    899411: (e, t, o) => {
        "use strict";
        e.exports = o.p + "mock-light.d201313017eb2c1b989f.svg"
    }
    ,
    446196: (e, t, o) => {
        "use strict";
        e.exports = o.p + "astronaut.4a1616879bba68ef10e0.webp"
    }
    ,
    203999: (e, t, o) => {
        "use strict";
        e.exports = o.p + "aurora.c6aede261d25c852fdb4.webp"
    }
    ,
    158841: e => {
        "use strict";
        e.exports = JSON.parse('{"us":{"title":"USA","screenerName":"america","screenerTimezone":"America/New_York","defaultExchange":"US","exchangesForHotlist":["AMEX","NASDAQ","NYSE","OTC","US"],"exchangesStocks":["NASDAQ","NYSE","NYSE ARCA","OTC"],"group":"North America","marketRoute":"usa/"},"ae":{"title":"United Arab Emirates","screenerName":"uae","screenerTimezone":"Asia/Dubai","defaultExchange":"ADX","exchangesForHotlist":["DFM","ADX"],"exchangesStocks":["DFM","ADX","NASDAQDUBAI"],"group":"Middle East / Africa","marketRoute":"uae/"},"ar":{"title":"Argentina","screenerName":"argentina","screenerTimezone":"America/Argentina/Buenos_Aires","exchangesForHotlist":["BCBA"],"exchangesStocks":["BYMA","BCBA"],"defaultExchange":"BCBA","group":"Mexico and South America","marketRoute":"argentina/"},"at":{"title":"Austria","screenerName":"austria","screenerTimezone":"Europe/Vienna","exchangesForHotlist":["VIE"],"exchangesStocks":["VIE"],"defaultExchange":"VIE","group":"Europe","marketRoute":"austria/"},"au":{"title":"Australia","screenerName":"australia","screenerTimezone":"Australia/Sydney","exchangesStocks":["ASX"],"group":"Asia / Pacific","marketRoute":"australia/"},"bd":{"title":"Bangladesh","screenerName":"bangladesh","screenerTimezone":"Asia/Dhaka","exchangesStocks":["DSEBD"],"exchangesForHotlist":["DSEBD"],"group":"Asia / Pacific","marketRoute":"bangladesh/"},"be":{"title":"Belgium","screenerName":"belgium","screenerTimezone":"Europe/Brussels","exchangesForHotlist":["EURONEXT_BRU"],"exchangesStocks":["EURONEXTBRU"],"defaultExchange":"EURONEXT_BRU","group":"Europe","marketRoute":"belgium/"},"bh":{"title":"Bahrain","screenerName":"bahrain","screenerTimezone":"Asia/Bahrain","exchangesStocks":["BAHRAIN"],"group":"Middle East / Africa","marketRoute":"bahrain/"},"br":{"title":"Brazil","screenerName":"brazil","screenerTimezone":"America/Sao_Paulo","exchangesStocks":["BMFBOVESPA"],"group":"Mexico and South America","marketRoute":"brazil/"},"ca":{"title":"Canada","screenerName":"canada","screenerTimezone":"America/Toronto","exchangesStocks":["TSX","TSXV","CSE","NEO"],"group":"North America","marketRoute":"canada/"},"ch":{"title":"Switzerland","screenerName":"switzerland","screenerTimezone":"Europe/Zurich","exchangesStocks":["SIX","BX"],"group":"Europe","marketRoute":"switzerland/"},"cl":{"title":"Chile","screenerName":"chile","screenerTimezone":"America/Santiago","exchangesStocks":["BCS"],"group":"Mexico and South America","marketRoute":"chile/"},"cn":{"title":"Mainland China","tvLocale":"zh_CN","screenerName":"china","screenerTimezone":"Asia/Hong_Kong","exchangesForHotlist":["SSE","SZSE"],"exchangesStocks":["SSE","SZSE","SHFE","ZCE","CFFEX"],"group":"Asia / Pacific","marketRoute":"china/"},"co":{"title":"Colombia","screenerName":"colombia","screenerTimezone":"America/Bogota","exchangesStocks":["BVC"],"group":"Mexico and South America","marketRoute":"colombia/"},"cy":{"title":"Cyprus","screenerName":"cyprus","screenerTimezone":"Europe/Cyprus","exchangesStocks":["CSECY"],"exchangesForHotlist":["CSECY"],"group":"Europe","marketRoute":"cyprus/"},"cz":{"title":"Czech Republic","screenerName":"czech","screenerTimezone":"Europe/Czech","exchangesStocks":["PSECZ"],"exchangesForHotlist":["PSECZ"],"group":"Europe","marketRoute":"czech/"},"de":{"title":"Germany","tvLocale":"de_DE","screenerName":"germany","screenerTimezone":"Europe/Berlin","defaultExchange":"XETR","exchangesStocks":["FWB","SWB","XETR","BER","DUS","HAM","HAN","MUN","TRADEGATE","LS","LSX","GETTEX"],"exchangesForHotlist":["FWB","SWB","XETR","BER","DUS","HAM","HAN","MUN","TRADEGATE","LS","LSX"],"group":"Europe","marketRoute":"germany/"},"dk":{"title":"Denmark","screenerName":"denmark","screenerTimezone":"Europe/Copenhagen","exchangesStocks":["OMXCOP"],"group":"Europe","marketRoute":"denmark/"},"ee":{"title":"Estonia","screenerName":"estonia","screenerTimezone":"Europe/Tallinn","exchangesStocks":["OMXTSE"],"group":"Europe","marketRoute":"estonia/"},"eg":{"title":"Egypt","screenerName":"egypt","screenerTimezone":"Africa/Cairo","exchangesStocks":["EGX"],"group":"Middle East / Africa","marketRoute":"egypt/"},"es":{"title":"Spain","screenerName":"spain","screenerTimezone":"Europe/Madrid","exchangesStocks":["BME"],"group":"Europe","marketRoute":"spain/"},"eu":{"title":"European Union","screenerName":"euronext","screenerTimezone":"Europe/Paris","exchangesForHotlist":[],"exchangesStocks":["EURONEXT","EURONEXTCOMM"],"group":"Europe"},"fi":{"title":"Finland","screenerName":"finland","screenerTimezone":"Europe/Helsinki","exchangesStocks":["OMXHEX"],"group":"Europe","marketRoute":"finland/"},"fr":{"title":"France","screenerName":"france","screenerTimezone":"Europe/Paris","exchangesForHotlist":["EURONEXT_PAR"],"exchangesStocks":["EURONEXTPAR"],"defaultExchange":"EURONEXT_PAR","group":"Europe","marketRoute":"france/"},"ge":{"title":"Georgia"},"gr":{"title":"Greece","screenerName":"greece","screenerTimezone":"Europe/Athens","exchangesStocks":["ATHEX"],"group":"Europe","marketRoute":"greece/"},"hk":{"title":"Hong Kong, China","screenerName":"hongkong","screenerTimezone":"Asia/Hong_Kong","exchangesStocks":["HKEX"],"group":"Asia / Pacific","marketRoute":"hong-kong/"},"hu":{"title":"Hungary","screenerName":"hungary","screenerTimezone":"Europe/Budapest","exchangesStocks":["BET"],"exchangesForHotlist":["BET"],"defaultExchange":"BET","group":"Europe","marketRoute":"hungary/"},"id":{"title":"Indonesia","screenerName":"indonesia","screenerTimezone":"Asia/Jakarta","exchangesStocks":["IDX"],"group":"Asia / Pacific","marketRoute":"indonesia/"},"ie":{"title":"Ireland","screenerName":"ireland","screenerTimezone":"Europe/Dublin","exchangesStocks":["EURONEXTDUB"],"group":"Europe","marketRoute":"ireland/"},"il":{"title":"Israel","tvLocale":"he_IL","screenerName":"israel","screenerTimezone":"Asia/Jerusalem","exchangesStocks":["TASE"],"group":"Middle East / Africa","marketRoute":"israel/"},"in":{"title":"India","screenerName":"india","screenerTimezone":"Asia/Kolkata","exchangesStocks":["BSE","NSE"],"group":"Asia / Pacific","marketRoute":"india/"},"ir":{"title":"Iran"},"is":{"title":"Iceland","screenerName":"iceland","screenerTimezone":"Atlantic/Reykjavik","exchangesStocks":["OMXICE"],"group":"Europe","marketRoute":"iceland/"},"it":{"title":"Italy","screenerName":"italy","screenerTimezone":"Europe/Rome","exchangesForHotlist":["MIL","EUROTLX"],"exchangesStocks":["MIL","EUROTLX"],"group":"Europe","marketRoute":"italy/"},"jp":{"title":"Japan","tvLocale":"ja","screenerName":"japan","screenerTimezone":"Asia/Tokyo","defaultExchange":"TSE","exchangesForHotlist":["NAG","TSE"],"exchangesStocks":["TSE","NAG","FSE","SAPSE"],"group":"Asia / Pacific","marketRoute":"japan/"},"ke":{"title":"Kenya","screenerName":"kenya","screenerTimezone":"Africa/Nairobi","exchangesStocks":["NSEKE"],"group":"Middle East / Africa","marketRoute":"kenya/"},"kp":{"title":"North Korea"},"kr":{"title":"South Korea","tvLocale":"kr","screenerName":"korea","screenerTimezone":"Asia/Seoul","exchangesStocks":["KRX"],"group":"Asia / Pacific","marketRoute":"korea/"},"kw":{"title":"Kuwait","screenerName":"kuwait","screenerTimezone":"Asia/Kuwait","exchangesStocks":["KSE"],"group":"Middle East / Africa","marketRoute":"kuwait/"},"lk":{"title":"Sri Lanka","screenerName":"srilanka","screenerTimezone":"Asia/Colombo","exchangesStocks":["CSELK"],"group":"Asia / Pacific","marketRoute":"sri-lanka/"},"lt":{"title":"Lithuania","screenerName":"lithuania","screenerTimezone":"Europe/Vilnius","exchangesStocks":["OMXVSE"],"group":"Europe","marketRoute":"lithuania/"},"lv":{"title":"Latvia","screenerName":"latvia","screenerTimezone":"Europe/Riga","exchangesStocks":["OMXRSE"],"group":"Europe","marketRoute":"latvia/"},"lu":{"title":"Luxembourg","screenerName":"luxembourg","screenerTimezone":"Europe/Luxembourg","exchangesStocks":["LUXSE"],"exchangesForHotlist":["LUXSE"],"defaultExchange":"LUXSE","group":"Europe","marketRoute":"luxembourg/"},"mx":{"title":"Mexico","screenerName":"mexico","screenerTimezone":"America/Mexico_City","exchangesStocks":["BMV","BIVA"],"group":"Mexico and South America","marketRoute":"mexico/"},"ma":{"title":"Morocco","screenerName":"morocco","screenerTimezone":"Africa/Morocco","exchangesStocks":["CSEMA"],"exchangesForHotlist":["CSEMA"],"group":"Middle East / Africa","marketRoute":"morocco/"},"my":{"title":"Malaysia","tvLocale":"ms_MY","screenerName":"malaysia","screenerTimezone":"Asia/Singapore","exchangesStocks":["MYX"],"group":"Asia / Pacific","marketRoute":"malaysia/"},"ng":{"title":"Nigeria","screenerName":"nigeria","screenerTimezone":"Africa/Lagos","exchangesStocks":["NSENG"],"group":"Middle East / Africa","marketRoute":"nigeria/"},"nl":{"title":"Netherlands","screenerName":"netherlands","screenerTimezone":"Europe/Amsterdam","exchangesForHotlist":["EURONEXT_AMS"],"exchangesStocks":["EURONEXTAMS"],"defaultExchange":"EURONEXT_AMS","group":"Europe","marketRoute":"netherlands/"},"no":{"title":"Norway","screenerName":"norway","screenerTimezone":"Europe/Oslo","exchangesForHotlist":["OSL"],"exchangesStocks":["EURONEXTOSE"],"defaultExchange":"OSL","group":"Europe","marketRoute":"norway/"},"nz":{"title":"New Zealand","screenerName":"newzealand","screenerTimezone":"Pacific/Auckland","exchangesStocks":["NZX"],"group":"Asia / Pacific","marketRoute":"new-zealand/"},"pe":{"title":"Peru","screenerName":"peru","screenerTimezone":"America/Lima","exchangesStocks":["BVL"],"group":"Mexico and South America","marketRoute":"peru/"},"ph":{"title":"Philippines","screenerName":"philippines","screenerTimezone":"Philippines/Manila","exchangesStocks":["PSE"],"group":"Asia / Pacific","marketRoute":"philippines/"},"pk":{"title":"Pakistan","screenerName":"pakistan","screenerTimezone":"Asia/Karachi","exchangesForHotlist":["PSX"],"exchangesStocks":["PSX"],"defaultExchange":"PSX","group":"Asia / Pacific","marketRoute":"pakistan/"},"pl":{"title":"Poland","screenerName":"poland","screenerTimezone":"Europe/Warsaw","exchangesStocks":["GPW","NEWCONNECT"],"group":"Europe","marketRoute":"poland/"},"pt":{"title":"Portugal","screenerName":"portugal","screenerTimezone":"Europe/Lisbon","exchangesForHotlist":["EURONEXT_LIS"],"exchangesStocks":["EURONEXTLIS"],"defaultExchange":"EURONEXT_LIS","group":"Europe","marketRoute":"portugal/"},"qa":{"title":"Qatar","screenerName":"qatar","screenerTimezone":"Asia/Qatar","exchangesStocks":["QSE"],"group":"Middle East / Africa","marketRoute":"qatar/"},"ro":{"title":"Romania","screenerName":"romania","screenerTimezone":"Europe/Bucharest","exchangesStocks":["BVB"],"exchangesForHotlist":["BVB"],"defaultExchange":"BVB","group":"Europe","marketRoute":"romania/"},"rs":{"title":"Serbia","screenerName":"serbia","screenerTimezone":"Europe/Belgrade","exchangesStocks":["BELEX"],"group":"Europe","marketRoute":"serbia/"},"ru":{"title":"Russia","screenerName":"russia","screenerTimezone":"Europe/Moscow","exchangesStocks":["RUS"],"group":"Europe","marketRoute":"russia/"},"sa":{"title":"Saudi Arabia","tvLocale":"ar_AE","screenerName":"ksa","screenerTimezone":"Asia/Riyadh","exchangesStocks":["TADAWUL"],"group":"Middle East / Africa","marketRoute":"ksa/"},"se":{"title":"Sweden","screenerName":"sweden","screenerTimezone":"Europe/Stockholm","exchangesStocks":["NGM","OMXSTO"],"exchangesForHotlist":["NGM","OMXSTO"],"group":"Europe","marketRoute":"sweden/"},"sg":{"title":"Singapore","screenerName":"singapore","screenerTimezone":"Asia/Singapore","exchangesStocks":["SGX"],"group":"Asia / Pacific","marketRoute":"singapore/"},"sk":{"title":"Slovakia","screenerName":"slovakia","screenerTimezone":"Europe/Bratislava","exchangesStocks":["BSSE"],"group":"Europe","marketRoute":"slovakia/"},"th":{"title":"Thailand","tvLocale":"th_TH","screenerName":"thailand","screenerTimezone":"Asia/Bangkok","exchangesStocks":["SET"],"group":"Asia / Pacific","marketRoute":"thailand/"},"tn":{"title":"Tunisia","screenerName":"tunisia","screenerTimezone":"Africa/Tunis","exchangesStocks":["BVMT"],"group":"Middle East / Africa","marketRoute":"tunisia/"},"tr":{"title":"Turkey","screenerName":"turkey","screenerTimezone":"Europe/Istanbul","exchangesStocks":["BIST"],"group":"Europe","marketRoute":"turkey/"},"tw":{"title":"Taiwan, China","tvLocale":"zh_TW","screenerName":"taiwan","screenerTimezone":"Asia/Taipei","exchangesStocks":["TWSE","TPEX"],"group":"Asia / Pacific","marketRoute":"taiwan/"},"gb":{"title":"United Kingdom","screenerName":"uk","screenerTimezone":"Europe/London","defaultExchange":"LSE","exchangesStocks":["LSE","LSIN","AQUIS"],"group":"Europe","marketRoute":"united-kingdom/"},"ve":{"title":"Venezuela","screenerName":"venezuela","screenerTimezone":"America/Caracas","exchangesStocks":["BVCV"],"group":"Mexico and South America","marketRoute":"venezuela/"},"vn":{"title":"Vietnam","tvLocale":"vi_VN","screenerName":"vietnam","screenerTimezone":"Asia/Ho_Chi_Minh","exchangesStocks":["HOSE","HNX","UPCOM"],"group":"Asia / Pacific","marketRoute":"vietnam/"},"za":{"title":"South Africa","screenerName":"rsa","screenerTimezone":"Africa/Johannesburg","exchangesStocks":["JSE"],"group":"Middle East / Africa","marketRoute":"south-africa/"},"ww":{"title":"Worldwide","screenerName":"global","exchangesStocks":[]}}')
    }
    ,
    320880: e => {
        "use strict";
        e.exports = JSON.parse('["us","ae","ar","at","au","bd","be","bh","br","ca","ch","cl","cn","co","cy","cz","de","dk","ee","eg","es","fi","fr","gr","hk","hu","id","ie","il","in","is","it","jp","ke","kr","kw","lk","lt","lv","lu","mx","ma","my","ng","nl","no","nz","pe","ph","pk","pl","pt","qa","rs","ru","ro","sa","se","sg","sk","th","tn","tr","tw","gb","ve","vn","za"]')
    }
    ,
    772187: e => {
        "use strict";
        e.exports = JSON.parse('{"NASDAQ":"exchange-nasdaq","NYSE":"exchange-nyse","NYSE ARCA":"exchange-amex","AMEX":"exchange-amex","OTC":"exchange-otc","DFM":"exchange-dfm","BCBA":"exchange-bcba","ASX":"exchange-asx","EURONEXT":"exchange-euronext_stocks","EURONEXTBRU":"exchange-euronext_stocks","EURONEXTPAR":"exchange-euronext_stocks","EURONEXTLIS":"exchange-euronext_stocks","EURONEXTAMS":"exchange-euronext_stocks","BAHRAIN":"exchange-bahrain","BMFBOVESPA":"exchange-bovespa_stocks","TSX":"exchange-tsx","TSXV":"exchange-tsxv","CSE":"exchange-cse","SIX":"exchange-six","BCS":"exchange-bcs","SSE":"exchange-sse","SZSE":"exchange-szse","BVC":"exchange-bvc","FWB":"exchange-fwb","SWB":"exchange-swb","XETR":"exchange-xetr","OMXCOP":"exchange-omxcop","OMXTSE":"exchange-omxtse","EGX":"exchange-egx","BME":"exchange-bme","OMXHEX":"exchange-omxhex","HKEX":"exchange-hkex","IDX":"exchange-idx","TASE":"exchange-tase","BSE":"exchange-bse","NSE":"exchange-nse","OMXICE":"exchange-omxice","MIL":"exchange-mil","MILSEDEX":"exchange-mil","FSE":"exchange-fse","NAG":"exchange-nag","SAPSE":"exchange-sapse","TSE":"exchange-omxtse","KRX":"exchange-krx_stocks","OMXVSE":"exchange-omxvse","OMXRSE":"exchange-omxrse","BMV":"exchange-bmv","MYX":"exchange-myx","NSENG":"exchange-nseng","NZX":"exchange-nzx","BVL":"exchange-bvl","GPW":"exchange-gpw","QSE":"exchange-qse","BELEX":"exchange-belex","MOEX":"exchange-moex_stocks","TADAWUL":"exchange-tadawul","OMXSTO":"exchange-omxsto","SGX":"exchange-sgx_stocks","SET":"exchange-set","BIST":"exchange-bist","TWSE":"exchange-twse","LSE":"exchange-lse","LSIN":"exchange-lsin","HOSE":"exchange-hose_stocks","JSE":"exchange-jse_stocks","OSE":"exchange-osl"}')
    }
    ,
    586240: e => {
        "use strict";
        e.exports = JSON.parse('{"dur":"350ms","dur-fast":"60ms","ease-in-like":"cubic-bezier(0.33, 0, 0.11, 1)","ease-out-like":"cubic-bezier(0.89, 0, 0.67, 1)","size-feed-item-width":"480px","size-feed-hident":"20px","size-feed-vident":"20px","size-base-indent":"4px","size-layout-small-horzpadding":"12px","size-layout-horzpadding":"20px","size-drawings-toolbar-item-height":"38px","size-header-linkindent":"15px","size-header-height":"64px","size-nav-header-height":"58px","size-sticky-symbol-header-height":"64px","size-dialog-fixed-header-height":"72px","size-site-widget-padding":"20px","size-site-widget-padding-tablet":"12px","size-collapse-tabs-height":"56px","size-no-scroll-choicer-height":"56px","size-main-chart-area-indent":"4px","size-main-chart-area-radius":"0","radius-embed-widget-wrapper":"3px","typography-platform-regular-16px-line-height":"24px","typography-platform-regular-18px-line-height":"28px","media-notebook":"all and (max-width: 1530px)","media-tablet":"all and (max-width: 1019px)","media-phone":"all and (max-width: 767px)","media-phone-vertical":"all and (max-width: 479px)","media-extreme-thin":"all and (max-width: 329px)","media-show-drawer":"all and (max-width: 567px)","media-mf-legacy-phone-vertical":"all and (min-width: 330px)","media-mf-legacy-phone":"all and (min-width: 480px)","media-mf-legacy-notebook":"all and (min-width: 1020px)","media-mf-legacy-desktop-medium":"all and (min-width: 1480px)","media-mf-legacy-desktop":"all and (min-width: 1531px)","media-mf-phone-vertical":"all and (min-width: 320px)","media-mf-phone-landscape":"all and (min-width: 568px)","media-mf-tablet-vertical":"all and (min-width: 768px)","media-mf-tablet-landscape":"all and (min-width: 1024px)","media-mf-laptop":"all and (min-width: 1280px)","media-mf-desktop-medium":"all and (min-width: 1440px)","media-mf-desktop-large":"all and (min-width: 1920px)","media-mf-desktop-extra-large":"all and (min-width: 2560px)","container-phone":"(max-width: 767px)","container-phone-vertical":"(max-width: 479px)","container-mf-phone-vertical":"(min-width: 320px)","container-mf-phone-landscape":"(min-width: 568px)","container-mf-tablet-vertical":"(min-width: 768px)","container-mf-tablet-landscape":"(min-width: 1024px)","container-mf-laptop":"(min-width: 1280px)","container-mf-desktop-medium":"(min-width: 1440px)","container-mf-desktop-large":"(min-width: 1920px)","container-mf-desktop-extra-large":"(min-width: 2560px)","media-laptop":"all and (min-width: 1280px) and (max-width: 1439px)","media-laptop-and-desktop-medium":"all and (min-width: 1280px) and (max-width: 1919px)","media-landscape":"all and (min-device-width: 375px) and (max-device-height: 812px) and (orientation: landscape)","media-phone-landscape":"all and (max-height: 440px) and (orientation: landscape)","media-widgetbar-breakpoint":"all and (max-width: 1064px)","z-index-content-page":1,"z-index-chart-legend":6,"z-index-chart-right-corner-controls":7,"z-index-loading-screen":8,"z-index-dropdown":99,"z-index-toolbar-popup-menu":100,"z-index-tooltip":1000,"z-index-user-link-popup":900,"z-index-sticky-search-bar":101,"z-index-resizable-drawer":800,"disabled-state-opacity":0.5}')
    }
}, e => {
    e.O(0, [73183, 72467, 98185, 83439, 67780, 38752, 38452, 66032, 80259, 98681, 66534, 11194, 32950, 3579, 55822, 61667, 93853, 91659, 3016, 67799, 26235, 14306, 31743, 27754, 62089, 82321, 90345, 25977, 47793, 75538, 10847, 53159, 45902, 83456, 9887, 53617, 32547, 33357], ( () => {
        return t = 262307,
        e(e.s = t);
        var t
    }
    ));
    e.O()
}
]);
